{"version":3,"sources":["assets/eth.png","assets/logo.svg","assets/logo-sqare.svg","contexts/LocalStorage.js","Theme/index.js","apollo/client.js","constants/index.js","apollo/queries.js","utils/tokenLists.ts","contexts/Application.js","utils/index.js","utils/data.ts","contexts/PairData.js","contexts/GlobalData.js","contexts/TokenData.js","utils/returns.ts","contexts/User.js","components/Row/index.js","components/Column/index.js","components/LocalLoader/index.js","components/Link/index.js","components/index.js","components/TokenLogo/index.js","components/DoubleLogo/index.js","components/Popover/index.tsx","hooks/index.ts","components/QuestionHelper/index.tsx","components/FormattedName/index.js","components/PairList/index.js","components/TokenList/index.js","components/DropdownSelect/index.js","components/TxnList/index.js","components/TradingviewChart/index.js","components/ButtonStyled/index.js","components/GlobalChart/index.js","components/Search/index.js","components/GlobalStats/index.js","components/Panel/index.js","pages/GlobalPage.js","components/CandleChart/index.js","components/TokenChart/index.js","components/Copy/index.js","components/Warning/index.js","pages/TokenPage.js","components/PairChart/index.js","pages/PairPage.js","components/UserChart/index.js","components/PairReturnsChart/index.js","components/PositionList/index.js","pages/AccountPage.js","pages/AllTokensPage.js","pages/AllPairsPage.js","components/AccountSearch/index.js","components/PinnedData/index.js","components/Title/index.js","components/SideNav/index.js","components/LPList/index.js","pages/AccountLookup.js","App.js","index.js"],"names":["module","exports","UPDATABLE_KEYS","LocalStorageContext","createContext","useLocalStorageContext","useContext","reducer","state","type","payload","key","value","some","k","Error","init","defaultLocalStorage","parsed","JSON","parse","window","localStorage","getItem","Provider","children","useReducer","undefined","dispatch","updateKey","useCallback","useMemo","Updater","useEffect","setItem","stringify","Math","floor","Date","now","useDarkModeManager","isDarkMode","toggleDarkMode","usePathDismissed","path","newPaths","useSavedAccounts","savedAccounts","addAccount","account","removeAccount","index","indexOf","slice","length","useSavedPairs","address","token0Address","token1Address","token0Symbol","token1Symbol","newList","useSavedTokens","symbol","theme","color","customColor","textColor","panelColor","backgroundColor","varenGold","concreteGray","inputBackground","shadowColor","mercuryGray","text1","text2","text3","text4","text5","white","bg1","bg2","bg3","bg4","bg5","bg6","modalBG","advancedBG","onlyLight","divider","primary1","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","shadow1","red1","green1","yellow1","yellow2","link","grey","darkgrey","background","TextWrapper","styled","Text","TYPE","props","fontWeight","fontSize","Background","div","a","attrs","target","rel","ThemedBackground","GlobalStyle","createGlobalStyle","client","ApolloClient","HttpLink","uri","cache","InMemoryCache","shouldBatch","healthClient","blockClient","timeframeOptions","WEEK","MONTH","ALL_TIME","SUPPORTED_LIST_URLS__NO_ENS","OVERVIEW_TOKEN_BLACKLIST","PAIR_BLACKLIST","FEE_WARNING_TOKENS","SUBGRAPH_HEALTH","gql","GET_BLOCK","GET_BLOCKS","timestamps","queryString","map","timestamp","PRICES_BY_BLOCK","tokenAddress","blocks","block","number","TOP_LPS_PER_PAIRS","HOURLY_PAIR_RATES","pairAddress","SHARE_VALUE","ETH_PRICE","USER_MINTS_BUNRS_PER_PAIR","USER_HISTORY","USER_POSITIONS","USER_TRANSACTIONS","PAIR_CHART","PAIR_DAY_DATA_BULK","pairs","startTimestamp","pairsString","pair","GLOBAL_CHART","GLOBAL_DATA","GLOBAL_TXNS","ALL_TOKENS","TOKEN_SEARCH","PAIR_SEARCH","ALL_PAIRS","PairFields","PAIRS_CURRENT","PAIR_DATA","PAIRS_BULK","PAIRS_HISTORICAL_BULK","TOKEN_CHART","TokenFields","TOKENS_CURRENT","TOKENS_DYNAMIC","TOKEN_DATA","FILTERED_TRANSACTIONS","uriToHttp","split","toLowerCase","substr","hash","match","name","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","urls","i","url","isLast","response","fetch","console","debug","ok","json","validationErrors","errors","reduce","memo","error","add","dataPath","message","dayjs","extend","utc","ApplicationContext","useApplicationContext","currency","newTimeFrame","supportedTokens","INITIAL_STATE","CURRENCY","TIME_KEY","update","updateTimeframe","updateSessionStart","updateSupportedTokens","updateLatestBlock","updateHeadBlock","useLatestBlocks","latestBlock","headBlock","query","then","res","syncedBlock","data","indexingStatusForCurrentVersion","chains","chainHeadBlock","catch","e","log","useTimeframe","useListedTokens","fetchedTokens","tokensSoFar","newTokens","Promise","resolve","tokens","allFetched","formatted","t","fetchList","toFormat","_Decimal","getTimeframe","timeWindow","utcStartTime","utcEndTime","subtract","endOf","unix","startOf","getPoolLink","remove","action","inputCurrency","outputCurrency","getSwapLink","localNumber","val","Numeral","format","BigNumber","set","EXPONENTIAL_AT","toNiceDate","date","getTimestampsForChanges","utcCurrentTime","splitQuery","localClient","vars","list","skipCount","fetchedData","allFound","skip","end","sliced","fetchPolicy","result","Object","keys","getBlockFromTimestamp","variables","timestampFrom","timestampTo","getBlocksFromTimestamps","push","getShareValueOverTime","utcSevenDaysBack","getTimestampRange","row","values","sharePriceUsd","parseFloat","reserveUSD","totalSupply","reserve0","reserve1","token0DerivedETH","token0","derivedETH","token1DerivedETH","token1","roiUsd","ethPrice","token0PriceUSD","token1PriceUSD","brow","timestamp_from","period_length","periods","toNiceDateYear","isAddress","ethers","utils","getAddress","toK","num","tx","formatDollarAmount","digits","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formattedNum","usd","isNaN","toFixed","Number","toLocaleString","formattedPercent","percent","fixedPercent","get2DayPercentChange","valueNow","value24HoursAgo","value48HoursAgo","currentChange","previousChange","adjustedPercentChange","isFinite","getPercentChange","TOKEN_OVERRIDES","updateNameData","id","includes","safeAccess","object","accumulator","currentValue","PairDataContext","usePairDataContext","topPairs","added","transactions","txns","chartData","hourlyData","updateTopPairs","updatePairTxns","updateChartData","updateHourlyData","getBulkPairData","pairList","t1","t2","tWeek","b1","b2","bWeek","allPairs","current","all","oneDayResult","twoDayResult","oneWeekResult","oneDayData","obj","cur","twoDayData","oneWeekData","oneDayHistory","newData","twoDayHistory","oneWeekHistory","parseData","pairData","oneDayBlock","volumeUSD","oneDayVolumeUSD","volumeChangeUSD","untrackedVolumeUSD","oneDayVolumeUntracked","volumeChangeUntracked","oneWeekVolumeUSD","trackedReserveUSD","trackedReserveETH","liquidityChangeUSD","createdAtBlockNumber","getPairTransactions","mints","burns","swaps","getPairChartData","startTime","concat","pairDayDatas","dayIndexSet","Set","dayIndexArray","forEach","dayData","dailyVolumeUSD","latestLiquidityUSD","currentDayIndex","nextDay","has","dayString","sort","b","parseInt","getHourlyRateData","time","filter","rate0","token0Price","rate1","token1Price","formattedHistoryRate0","formattedHistoryRate1","open","close","useEthPrice","formattedPairs","getData","usePairData","fetchData","useAllPairData","weekOfYear","GlobalDataContext","useGlobalDataContext","globalData","daily","weekly","ethOneDayPrice","ethPriceChange","linkPrice","linkOneDayPrice","linkPriceChange","yflPrice","yflOneDayPrice","yflPriceChange","syflPrice","syflOneDayPrice","syflPriceChange","yflusdPrice","yflusdOneDayPrice","yflusdPriceChange","allTokens","topLps","updateTransactions","updateChart","updateEthPrice","updateLinkPrice","updateYflPrice","updateSYflPrice","updateYflusdPrice","updateAllPairsInDarkHorse","updateAllTokensInDarkHorse","updateTopLps","getGlobalData","oldEthPrice","utcOneDayBack","utcTwoDaysBack","utcOneWeekBack","utcTwoWeeksBack","twoDayBlock","oneWeekBlock","twoWeekBlock","linkswapFactories","twoWeekResult","twoWeekData","totalVolumeUSD","oneWeekVolume","weeklyVolumeChange","txCount","oneDayTxns","txnChange","totalLiquidityUSD","totalLiquidityETH","getChartData","oldestDateToFetch","weeklyData","linkswapDayDatas","latestDayDats","mostLiquidTokens","startIndexWeekly","currentWeek","entry","week","weeklyVolumeUSD","getGlobalTransactions","transaction","mint","burn","swap","getEthPrice","ethPriceOneDay","priceChangeETH","resultOneDay","currentPrice","bundles","oneDayBackPrice","getAllPairsOnDarkHorse","getAllTokensOnDarkHorse","useGlobalData","useGlobalChartData","useState","oldestDateFetch","setOldestDateFetched","activeWindow","chartDataDaily","chartDataWeekly","newChartData","newWeeklyData","ethPriceOld","newPrice","oneDayPrice","priceChange","checkForEthPrice","TokenDataContext","useTokenDataContext","topTokens","token","interval","updateTopTokens","updateTokenTxns","updateAllPairs","updatePriceData","getTopTokens","tradeVolumeUSD","currentLiquidityUSD","totalLiquidity","oldLiquidityUSD","priceChangeUSD","priceUSD","oneDayVolumeETH","tradeVolume","bulkResults","getTokenData","oneDayVolumeUT","volumeChangeUT","aaveData","getTokenTransactions","allPairsFormatted","getTokenPairs","getIntervalTokenData","formattedHistory","getTokenChartData","tokenAddr","tokenDayDatas","latestPriceUSD","useTokenData","tokenData","useTokenPriceData","currentTime","windowSize","useAllTokenData","priceOverrides","formatPricesForEarlyTimestamps","position","getPrincipalForUserPerPair","user","amount0","amount1","results","mintToken0","mintToken1","amountUSD","burnToken0","burnToken1","getMetricsForPositionWindow","positionT0","positionT1","t0Ownership","liquidityTokenBalance","liquidityTokenTotalSupply","t1Ownership","token0_amount_t0","token1_amount_t0","token0_amount_t1","token1_amount_t1","sqrK_t0","sqrt","priceRatioT1","token0_amount_no_fees","token1_amount_no_fees","no_fees_usd","difference_fees_token1","difference_fees_usd","assetValueT0","assetValueT1","imp_loss_usd","varen_return","netValueT0","hodleReturn","netReturn","varenReturn","impLoss","fees","getHistoricalPairReturns","startDateTimestamp","currentPairData","pairSnapshots","currentETHPrice","createdAtTimestamp","dayIndex","round","sortedPositions","dayTimestamps","shareValues","shareValuesFormatted","share","netFees","dayTimestamp","timestampCeiling","dailyChanges","snapshot","localReturns","currentLiquidityValue","localFees","usdValue","getLPReturnsOnPair","snapshots","principal","currentPosition","net","return","varen","sum","UserContext","useUserContext","positions","miningPositions","historyData","updatePositions","updateMiningPositions","updateUserSnapshots","updateUserPairReturns","useUserSnapshots","allResults","found","liquidityPositionSnapshots","useUserPositionChart","setStartDateTimestamp","useStartTimestamp","currentSnapshot","Row","Box","align","padding","border","borderRadius","justify","RowBetween","AutoRow","wrap","gap","RowFixed","Column","AutoColumn","Wrapper","fill","height","css","Loader","LocalLoader","className","Link","external","rest","CustomLink","RouterLink","lighten","darken","BasicLink","Divider","IconWrapper","Hover","fade","StyledIcon","EmptyCard","PageWrapper","span","ul","li","isActive","ContentWrapper","ContentWrapperLarge","FullWrapper","BAD_IMAGES","Inline","Image","img","size","StyledEthereumLogo","TokenLogo","header","setError","src","EthereumLogo","boxShadow","alt","onError","event","preventDefault","DoubleTokenLogo","a0","a1","margin","TokenWrapper","sizeraw","toString","HigherLogo","CoveredLogo","PopoverContainer","show","transparentize","ReferenceElement","Arrow","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","options","offset","element","styles","attributes","callback","delay","savedCallback","useRef","tick","setInterval","clearInterval","useInterval","ref","popper","arrow","QuestionWrapper","TooltipContainer","Tooltip","text","QuestionHelper","disabled","setShow","marginLeft","onClick","onMouseEnter","onMouseLeave","adjustSize","FormattedName","maxCharacters","showHover","setShowHover","PageButtons","faded","List","DashGrid","ListWrapper","ClickableText","DataText","Flex","SORT_FIELD","FIELD_TO_VALUE","withRouter","disbaleLinks","maxItems","below600","useMedia","below740","below1080","page","setPage","maxPage","setMaxPage","ITEMS_PER_PAGE","sortDirection","setSortDirection","sortedColumn","setSortedColumn","extraPages","ListItem","liquidity","volume","apy","focus","area","marginRight","width","whiteSpace","to","addressA","addressB","pairA","pairB","center","alignItems","justifyContent","p","itemMax","below680","formattedTokens","filteredList","item","Dropdown","ArrowStyled","DropdownSelect","active","setActive","showDropdown","toggleDropdown","option","SortText","button","TXN_TYPE","ALL","SWAP","ADD","REMOVE","TxnList","symbol0Override","symbol1Override","filteredItems","setFilteredItems","txFilter","setTxFilter","toggleCurrency","useCurrentCurrency","newTxns","newTxn","token0Amount","token1Amount","sender","netToken0","amount0In","amount0Out","netToken1","amount1In","amount1Out","abs","filtered","below780","href","symbol0","symbol1","formattedS0","formattedS1","getTransactionType","valueETH","inSeconds","diff","inMinutes","inHours","inDays","formatTime","pl","CHART_TYPES","TradingViewChart","base","baseChange","field","title","useWeekly","chartCreated","setChartCreated","dataPrev","usePrevious","tooltip","document","getElementById","removeChild","resize","formattedData","topScale","darkMode","previousTheme","setLastBarText","toolTip","innerHTML","formattedPercentChange","chart","createChart","layout","rightPriceScale","scaleMargins","top","bottom","borderVisible","timeScale","grid","horzLines","visible","vertLines","crosshair","horzLine","labelVisible","vertLine","localization","priceFormatter","series","addHistogramSeries","priceFormat","lineColor","lineWidth","addAreaSeries","topColor","bottomColor","setData","createElement","setAttribute","appendChild","display","left","percentChange","subscribeCrosshairMove","param","point","x","y","dateStr","year","month","day","price","seriesPrices","get","fitContent","scrollToPosition","Base","RebassButton","ButtonLight","ButtonDropdown","ButtonFaded","ButtonDark","OptionButton","CHART_VIEW","VOLUME","LIQUIDITY","VOLUME_WINDOW","GlobalChart","chartView","setChartView","volumeWindow","setVolumeWindow","dailyData","chartDataFiltered","currentData","below800","isClient","container","clientWidth","setWidth","handleResize","addEventListener","removeEventListener","aspect","zIndex","Container","small","Input","input","large","SearchIconLarge","SearchIcon","CloseIcon","X","Menu","hide","MenuItem","Heading","Gray","Blue","Search","useAllTokensInDarkHorse","allTokenData","useAllPairsInDarkHorse","allPairData","showMenu","toggleMenu","setValue","toggleShadow","toggleBottomShadow","below700","below470","below410","searchedTokens","setSearchedTokens","searchedPairs","setSearchedPairs","escapeRegExp","string","replace","toUpperCase","asSymbol","as0","as1","asAddress","foundTokens","asName","searchedToken","included","uniqueTokens","searchedPair","uniquePairs","pairsFound","filteredTokenList","tokenA","tokenB","tokenEntryKey","RegExp","m","filteredPairList","tokensShown","setTokensShown","pairsShown","setPairsShown","onDismiss","wrapperRef","menuRef","handleClick","contains","shadow","placeholder","onChange","onFocus","Header","Medium","GlobalStats","below1295","below1180","below1024","below400","below816","pairCount","formattedEthPrice","oneDayFees","mr","panelPseudo","Panel","RebassBox","hover","grouped","rounded","last","ListOptions","GridRow","useGlobalTransactions","querySelector","scrollTo","behavior","paddingBottom","mb","lineHeight","minHeight","marginTop","marginBottom","CandleStickChart","valueFormatter","low","high","min","max","mode","CrosshairMode","Normal","borderColor","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","ChartWrapper","PriceOption","PRICE","LINE_PRICE","DATA_FREQUENCY","TokenChart","chartFilter","setChartFilter","frequency","setFrequency","addressPrev","checkForChartData","useTokenChartData","setTimeWindow","prevWindow","hourlyWeek","hourlyMonth","hourlyAll","dailyWeek","dailyMonth","dailyAll","priceData","domain","dataMin","right","barCategoryGap","x1","y1","x2","y2","stopColor","stopOpacity","tickLine","axisLine","tickMargin","minTickGap","tickFormatter","dataKey","orientation","yAxisId","cursor","formatter","labelFormatter","label","labelStyle","paddingTop","contentStyle","wrapperStyle","stackId","strokeWidth","dot","stroke","opacity","CopyIcon","TransactionStatusText","flexRowNoWrap","CopyHelper","toCopy","timeout","isCopied","setIsCopied","staticCopy","didCopy","copy","setTimeout","clearTimeout","useCopyClipboard","setCopied","WarningWrapper","StyledWarningIcon","AlertTriangle","Warning","textContent","mt","ml","minWidth","DashboardWrapper","PanelWrapper","TokenDetailsLayout","WarningGrouping","history","fetchedPairsList","stale","setStale","fetched","setFetched","newFetched","unfetched","newPairData","fetchNewPairData","useDataForList","tokenPairs","useTokenPairs","tokenTxns","TOKEN_PAIRS_KEY","checkForTxns","useTokenTransactions","usingUtVolume","setUsingUtVolume","volumeChange","liquidityChange","txnChangeFormatted","below500","LENGTH","formattedSymbol","location","pathname","dismissed","markAsDismissed","savedTokens","addToken","listedTokens","flexWrap","alingItems","alignSelf","gridColumn","gridRow","OptionsRow","RATE0","RATE1","PairChart","base0","base1","clientHeight","setHeight","usePairChartData","useHourlyRateData","hourlyRate0","hourlyRate1","formattedSymbol0","formattedSymbol1","below1600","FixedPanel","HoverSpan","reserveA","reserveB","pairTxns","usePairTransactions","usingTracked","setUsingTracked","tokenAUSD","tokenBUSD","tokenARate","tokenBRate","below900","savedPairs","addPair","flexDirection","UserChart","setFormattedHistory","ownershipPerPair","relevantPositions","lpTokenBalance","dailyUSD","dayDatasForThisPair","mostRecent","totalUSD","valueUSD","useUserLiquidityChart","PairReturnsChart","strokeDasharray","VALUE","VAREN_RETURN","poolOwnership","positionsSorted","p0","p1","PRINCIPAL","HODL","hodl","AccountWrapper","DropdownWrapper","Flyout","MenuRow","AccountPage","useUserTransactions","liquidityPositions","positionData","returnData","formattedPositions","useUserPositions","transactionCount","totalSwappedUSD","total","showWarning","setShowWarning","hideLPContent","setShowDropdown","activePosition","setActivePosition","dynamicPositions","aggregateFees","positionValue","isBookmarked","handleBookmarkClick","AllTokensPage","AllPairsPage","AccountLink","accountValue","setAccountValue","stopPropagation","RightColumn","SavedButton","ScrollableDiv","setSavedOpen","removePair","removeToken","TitleWrapper","Title","Logo","isMobile","Option","activeText","DesktopWrapper","MobileWrapper","HeaderText","Polling","PollingDot","seconds","sessionStart","setSeconds","useSessionStart","lps","lp","pairName","lpList","topLpLists","sorted","shorter","splice","useTopLps","AppWrapper","Right","Center","WarningBanner","FixedWrapper","LayoutWrapper","savedOpen","App","globalChartData","exacts","strict","render","params","accountAddress","backgroundImage","SquareLogo","ReactGA","initialize","process","customBrowserType","ReactDOM"],"mappings":"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","file":"static/js/main.8355d223.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eth.73dabb37.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ba85dfb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-sqare.ed5e5691.svg\";","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\r\n\r\nconst VAREN = 'VAREN'\r\n\r\nconst VERSION = 'VERSION'\r\nconst CURRENT_VERSION = 0\r\nconst LAST_SAVED = 'LAST_SAVED'\r\nconst DISMISSED_PATHS = 'DISMISSED_PATHS'\r\nconst SAVED_ACCOUNTS = 'SAVED_ACCOUNTS'\r\nconst SAVED_TOKENS = 'SAVED_TOKENS'\r\nconst SAVED_PAIRS = 'SAVED_PAIRS'\r\n\r\nconst DARK_MODE = 'DARK_MODE'\r\n\r\nconst UPDATABLE_KEYS = [DARK_MODE, DISMISSED_PATHS, SAVED_ACCOUNTS, SAVED_PAIRS, SAVED_TOKENS]\r\n\r\nconst UPDATE_KEY = 'UPDATE_KEY'\r\n\r\nconst LocalStorageContext = createContext()\r\n\r\nfunction useLocalStorageContext() {\r\n  return useContext(LocalStorageContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE_KEY: {\r\n      const { key, value } = payload\r\n      if (!UPDATABLE_KEYS.some((k) => k === key)) {\r\n        throw Error(`Unexpected key in LocalStorageContext reducer: '${key}'.`)\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [key]: value,\r\n        }\r\n      }\r\n    }\r\n    default: {\r\n      throw Error(`Unexpected action type in LocalStorageContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction init() {\r\n  const defaultLocalStorage = {\r\n    [VERSION]: CURRENT_VERSION,\r\n    [DARK_MODE]: true,\r\n    [DISMISSED_PATHS]: {},\r\n    [SAVED_ACCOUNTS]: [],\r\n    [SAVED_TOKENS]: {},\r\n    [SAVED_PAIRS]: {},\r\n  }\r\n\r\n  try {\r\n    const parsed = JSON.parse(window.localStorage.getItem(VAREN))\r\n    if (parsed[VERSION] !== CURRENT_VERSION) {\r\n      // this is where we could run migration logic\r\n      return defaultLocalStorage\r\n    } else {\r\n      return { ...defaultLocalStorage, ...parsed }\r\n    }\r\n  } catch {\r\n    return defaultLocalStorage\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, undefined, init)\r\n\r\n  const updateKey = useCallback((key, value) => {\r\n    dispatch({ type: UPDATE_KEY, payload: { key, value } })\r\n  }, [])\r\n\r\n  return (\r\n    <LocalStorageContext.Provider value={useMemo(() => [state, { updateKey }], [state, updateKey])}>\r\n      {children}\r\n    </LocalStorageContext.Provider>\r\n  )\r\n}\r\n\r\nexport function Updater() {\r\n  const [state] = useLocalStorageContext()\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(VAREN, JSON.stringify({ ...state, [LAST_SAVED]: Math.floor(Date.now() / 1000) }))\r\n  })\r\n\r\n  return null\r\n}\r\n\r\nexport function useDarkModeManager() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  let isDarkMode = state[DARK_MODE]\r\n  const toggleDarkMode = useCallback(\r\n    (value) => {\r\n      updateKey(DARK_MODE, value === false || value === true ? value : !isDarkMode)\r\n    },\r\n    [updateKey, isDarkMode]\r\n  )\r\n  return [isDarkMode, toggleDarkMode]\r\n}\r\n\r\nexport function usePathDismissed(path) {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const pathDismissed = state?.[DISMISSED_PATHS]?.[path]\r\n  function dismiss() {\r\n    let newPaths = state?.[DISMISSED_PATHS]\r\n    newPaths[path] = true\r\n    updateKey(DISMISSED_PATHS, newPaths)\r\n  }\r\n\r\n  return [pathDismissed, dismiss]\r\n}\r\n\r\nexport function useSavedAccounts() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const savedAccounts = state?.[SAVED_ACCOUNTS]\r\n\r\n  const addAccount = useCallback(\r\n    (account) => {\r\n      updateKey(SAVED_ACCOUNTS, [...(savedAccounts ?? []), account])\r\n    },\r\n    [savedAccounts, updateKey]\r\n  )\r\n\r\n  const removeAccount = useCallback(\r\n    (account) => {\r\n      let index = savedAccounts?.indexOf(account) ?? -1\r\n      if (index > -1) {\r\n        updateKey(SAVED_ACCOUNTS, [\r\n          ...savedAccounts.slice(0, index),\r\n          ...savedAccounts.slice(index + 1, savedAccounts.length),\r\n        ])\r\n      }\r\n    },\r\n    [savedAccounts, updateKey]\r\n  )\r\n\r\n  return [savedAccounts, addAccount, removeAccount]\r\n}\r\n\r\nexport function useSavedPairs() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const savedPairs = state?.[SAVED_PAIRS]\r\n\r\n  function addPair(address, token0Address, token1Address, token0Symbol, token1Symbol) {\r\n    let newList = state?.[SAVED_PAIRS]\r\n    newList[address] = {\r\n      address,\r\n      token0Address,\r\n      token1Address,\r\n      token0Symbol,\r\n      token1Symbol,\r\n    }\r\n    updateKey(SAVED_PAIRS, newList)\r\n  }\r\n\r\n  function removePair(address) {\r\n    let newList = state?.[SAVED_PAIRS]\r\n    newList[address] = null\r\n    updateKey(SAVED_PAIRS, newList)\r\n  }\r\n\r\n  return [savedPairs, addPair, removePair]\r\n}\r\n\r\nexport function useSavedTokens() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const savedTokens = state?.[SAVED_TOKENS]\r\n\r\n  function addToken(address, symbol) {\r\n    let newList = state?.[SAVED_TOKENS]\r\n    newList[address] = {\r\n      symbol,\r\n    }\r\n    updateKey(SAVED_TOKENS, newList)\r\n  }\r\n\r\n  function removeToken(address) {\r\n    let newList = state?.[SAVED_TOKENS]\r\n    newList[address] = null\r\n    updateKey(SAVED_TOKENS, newList)\r\n  }\r\n\r\n  return [savedTokens, addToken, removeToken]\r\n}\r\n","import React from 'react'\r\nimport { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle } from 'styled-components'\r\nimport { useDarkModeManager } from '../contexts/LocalStorage'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'rebass'\r\n\r\nexport default function ThemeProvider({ children }) {\r\n  const [darkMode] = useDarkModeManager()\r\n\r\n  return <StyledComponentsThemeProvider theme={theme(darkMode)}>{children}</StyledComponentsThemeProvider>\r\n}\r\n\r\nexport const theme = color => ({\r\n  customColor: color,\r\n  textColor: color,\r\n\r\n  panelColor: 'rgba(255, 255, 255, 0)',\r\n  backgroundColor: '#212429',\r\n\r\n  varenGold: '#ffd149',\r\n\r\n  concreteGray: '#292C2F',\r\n  inputBackground: '#1F1F1F',\r\n  shadowColor: '#000',\r\n  mercuryGray: '#333333',\r\n\r\n  text1: '#FFFFFF',\r\n  text2: '#C3C5CB',\r\n  text3: '#6C7284',\r\n  text4: '#565A69',\r\n  text5: '#2C2F36',\r\n\r\n  // special case text types\r\n  white: '#FFFFFF',\r\n\r\n  // backgrounds / greys\r\n  bg1: '#000119',\r\n  bg2: '#000119',\r\n  bg3: '#3949ab',\r\n  bg4: '#171a36',\r\n  bg5: '#6C7284',\r\n  bg6: '#181b37',\r\n\r\n  //specialty colors\r\n  modalBG: 'rgba(0,0,0,.425)',\r\n  advancedBG: '#000119',\r\n  onlyLight: 'transparent',\r\n  divider: 'rgba(43, 43, 43, 0.435)',\r\n\r\n  //primary colors\r\n  primary1: '#bebebe',\r\n  primary2: '#dddddd',\r\n  primary3: '#ffffff',\r\n  primary4: '#376bad70',\r\n  primary5: '#202F46',\r\n\r\n  // color text\r\n  primaryText1: '#87A9FF',\r\n\r\n  // secondary colors\r\n  secondary1: '#ffd149',\r\n  secondary2: '#17000b26',\r\n  secondary3: '#17000b26',\r\n\r\n  shadow1: '#000',\r\n\r\n  // other\r\n  red1: '#FF6871',\r\n  green1: '#27AE60',\r\n  yellow1: '#FFE270',\r\n  yellow2: '#F3841E',\r\n  link: '#bebebe',\r\n  grey: '#bebebe',\r\n  darkgrey: '#dddddd',\r\n\r\n  background: '#000119'\r\n})\r\n\r\nconst TextWrapper = styled(Text)`\r\n  color: ${({ color, theme }) => theme[color]};\r\n`\r\n\r\nexport const TYPE = {\r\n  main(props) {\r\n    return <TextWrapper fontWeight={500} fontSize={14} color={'text1'} {...props} />\r\n  },\r\n\r\n  body(props) {\r\n    return <TextWrapper fontWeight={400} fontSize={14} color={'text1'} {...props} />\r\n  },\r\n\r\n  small(props) {\r\n    return <TextWrapper fontWeight={500} fontSize={11} color={'text1'} {...props} />\r\n  },\r\n\r\n  header(props) {\r\n    return <TextWrapper fontWeight={600} color={'text1'} {...props} />\r\n  },\r\n\r\n  largeHeader(props) {\r\n    return <TextWrapper fontWeight={500} color={'text1'} fontSize={24} {...props} />\r\n  },\r\n\r\n  light(props) {\r\n    return <TextWrapper fontWeight={400} color={'text3'} fontSize={14} {...props} />\r\n  },\r\n\r\n  pink(props) {\r\n    return <TextWrapper fontWeight={props.faded ? 400 : 600} color={props.faded ? 'text1' : 'text1'} {...props} />\r\n  }\r\n}\r\n\r\nexport const Hover = styled.div`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const Link = styled.a.attrs({\r\n  target: '_blank',\r\n  rel: 'noopener noreferrer'\r\n})`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.primary1};\r\n  font-weight: 500;\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport const Background = styled.div`\r\n  position: absolute;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-position: 0 20vh;\r\n  background-size: 60vh auto;\r\n  background-repeat: no-repeat;\r\n  z-index: 2;\r\n  opacity: 0.05;\r\n`\r\nexport const ThemedBackground = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  pointer-events: none;\r\n  max-width: 200vw !important;\r\n  height: 100vw;\r\n  position: absolute;\r\n  z-index: 1;\r\n  background: radial-gradient(50% 50% at 50% 50%, rgb(41, 44, 71) 0%, rgb(0, 1, 32) 100%);\r\n  transform: translateY(-50vw);\r\n`\r\n\r\n// TODO: create a light background-image for light mode\r\nexport const GlobalStyle = createGlobalStyle`\r\n  @import url('https://rsms.me/inter/inter.css');\r\n  html { font-family: 'Inter', sans-serif; }\r\n  @supports (font-variation-settings: normal) {\r\n    html { font-family: 'Inter var', sans-serif; }\r\n  }\r\n  \r\n  html,\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    font-size: 14px;    \r\n    min-height: 100vh;\r\n    background-color: #000120;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n\r\n    :hover {\r\n      text-decoration: none\r\n    }\r\n  }\r\n  \r\n.three-line-legend {\r\n\twidth: 100%;\r\n\theight: 70px;\r\n\tposition: absolute;\r\n\tpadding: 8px;\r\n\tfont-size: 12px;\r\n\tcolor: #20262E;\r\n\tbackground-color: rgba(255, 255, 255, 0.23);\r\n\ttext-align: left;\r\n\tz-index: 10;\r\n  pointer-events: none;\r\n}\r\n\r\n.three-line-legend-dark {\r\n\twidth: 100%;\r\n\theight: 70px;\r\n\tposition: absolute;\r\n\tpadding: 8px;\r\n\tfont-size: 12px;\r\n\tcolor: white;\r\n\tbackground-color: rgba(255, 255, 255, 0.23);\r\n\ttext-align: left;\r\n\tz-index: 10;\r\n  pointer-events: none;\r\n}\r\n\r\n@media screen and (max-width: 800px) {\r\n  .three-line-legend {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n.tv-lightweight-charts{\r\n  width: 100% !important;\r\n  \r\n\r\n  & > * {\r\n    width: 100% !important;\r\n  }\r\n}\r\n\r\n  html {\r\n    font-size: 1rem;\r\n    font-variant: none;\r\n    color: 'black';\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n    height: 100%;\r\n  }\r\n  \r\n  @-webkit-keyframes sk-circleBounceDelay {\r\n    0%, 80%, 100% {\r\n      transform: scale(0);\r\n    } 40% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n  \r\n  @keyframes sk-circleBounceDelay {\r\n    0%, 80%, 100% {\r\n      transform: scale(0);\r\n    } 40% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n`\r\n","import { ApolloClient } from 'apollo-client'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { HttpLink } from 'apollo-link-http'\r\n\r\nexport const client = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/subgraphs/name/yflink/linkswap-v1',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  shouldBatch: true,\r\n})\r\n\r\nexport const healthClient = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/index-node/graphql',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  shouldBatch: true,\r\n})\r\n\r\nexport const stakingClient = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  shouldBatch: true,\r\n})\r\n\r\nexport const blockClient = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n})\r\n","export const FACTORY_ADDRESS = '0x696708Db871B77355d6C2bE7290B27CF0Bb9B24b'\r\n\r\nexport const BUNDLE_ID = '1'\r\n\r\nexport const timeframeOptions = {\r\n  WEEK: '1 week',\r\n  MONTH: '1 month',\r\n  // THREE_MONTHS: '3 months',\r\n  // YEAR: '1 year',\r\n  ALL_TIME: 'All time'\r\n}\r\n\r\n// token list urls to fetch tokens from - use for warnings on tokens and pairs\r\nexport const SUPPORTED_LIST_URLS__NO_ENS = ['https://varen.exchange/lists/varenList.json']\r\n\r\n// hide from overview list\r\nexport const OVERVIEW_TOKEN_BLACKLIST = [\r\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\r\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\r\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\r\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1'\r\n]\r\n\r\n// pair blacklist\r\nexport const PAIR_BLACKLIST = ['0xb6a741f37d6e455ebcc9f17e2c16d0586c3f57a5']\r\n\r\n/**\r\n * For tokens that cause erros on fee calculations\r\n */\r\nexport const FEE_WARNING_TOKENS = ['0xd46ba6d942050d489dbd938a2c909a5d5039a161']\r\n","import gql from 'graphql-tag'\r\nimport { FACTORY_ADDRESS, BUNDLE_ID } from '../constants'\r\n\r\nexport const SUBGRAPH_HEALTH = gql`\r\n  query health {\r\n    indexingStatusForCurrentVersion(subgraphName: \"yflink/linkswap-v1\") {\r\n      synced\r\n      health\r\n      chains {\r\n        chainHeadBlock {\r\n          number\r\n        }\r\n        latestBlock {\r\n          number\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_BLOCK = gql`\r\n  query blocks($timestampFrom: Int!, $timestampTo: Int!) {\r\n    blocks(\r\n      first: 1\r\n      orderBy: timestamp\r\n      orderDirection: asc\r\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\r\n    ) {\r\n      id\r\n      number\r\n      timestamp\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_BLOCKS = (timestamps) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += timestamps.map((timestamp) => {\r\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${timestamp + 600\r\n      } }) {\r\n      number\r\n    }`\r\n  })\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const POSITIONS_BY_BLOCK = (account, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}:liquidityPositions(where: {user: \"${account}\"}, block: { number: ${block.number} }) { \r\n        liquidityTokenBalance\r\n        pair  {\r\n          id\r\n          totalSupply\r\n          reserveUSD\r\n        }\r\n      }\r\n    `\r\n  )\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const PRICES_BY_BLOCK = (tokenAddress, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \r\n        derivedETH\r\n      }\r\n    `\r\n  )\r\n  queryString += ','\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \r\n        ethPrice\r\n      }\r\n    `\r\n  )\r\n\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const TOP_LPS_PER_PAIRS = gql`\r\n  query lps($pair: Bytes!) {\r\n    liquidityPositions(where: { pair: $pair }, orderBy: liquidityTokenBalance, orderDirection: desc, first: 10) {\r\n      user {\r\n        id\r\n      }\r\n      pair {\r\n        id\r\n      }\r\n      liquidityTokenBalance\r\n    }\r\n  }\r\n`\r\n\r\nexport const HOURLY_PAIR_RATES = (pairAddress, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}: pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \r\n        token0Price\r\n        token1Price\r\n      }\r\n    `\r\n  )\r\n\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const SHARE_VALUE = (pairAddress, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}:pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \r\n        reserve0\r\n        reserve1\r\n        reserveUSD\r\n        totalSupply \r\n        token0{\r\n          derivedETH\r\n        }\r\n        token1{\r\n          derivedETH\r\n        }\r\n      }\r\n    `\r\n  )\r\n  queryString += ','\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \r\n        ethPrice\r\n      }\r\n    `\r\n  )\r\n\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const ETH_PRICE = (block) => {\r\n  const queryString = block\r\n    ? `\r\n    query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\r\n        id\r\n        ethPrice\r\n      }\r\n    }\r\n  `\r\n    : ` query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} }) {\r\n        id\r\n        ethPrice\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const LINK_PRICE = (block) => {\r\n  const queryString = block\r\n    ? `\r\n    query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\r\n        id\r\n        linkPrice\r\n      }\r\n    }\r\n  `\r\n    : ` query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} }) {\r\n        id\r\n        linkPrice\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const YFL_PRICE = (block) => {\r\n  const queryString = block\r\n    ? `\r\n    query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\r\n        id\r\n        yflPrice\r\n      }\r\n    }\r\n  `\r\n    : ` query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} }) {\r\n        id\r\n        yflPrice\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const SYFL_PRICE = (block) => {\r\n  const queryString = block\r\n    ? `\r\n    query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\r\n        id\r\n        syflPrice\r\n      }\r\n    }\r\n  `\r\n    : ` query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} }) {\r\n        id\r\n        syflPrice\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const YFLUSD_PRICE = (block) => {\r\n  const queryString = block\r\n    ? `\r\n    query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\r\n        id\r\n        yflusdPrice\r\n      }\r\n    }\r\n  `\r\n    : ` query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} }) {\r\n        id\r\n        yflusdPrice\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const USER = (block, account) => {\r\n  const queryString = `\r\n    query users {\r\n      user(id: \"${account}\", block: {number: ${block}}) {\r\n        liquidityPositions\r\n      }\r\n    }\r\n`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const USER_MINTS_BUNRS_PER_PAIR = gql`\r\n  query events($user: Bytes!, $pair: Bytes!) {\r\n    mints(where: { to: $user, pair: $pair }) {\r\n      amountUSD\r\n      amount0\r\n      amount1\r\n      timestamp\r\n      pair {\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n    burns(where: { sender: $user, pair: $pair }) {\r\n      amountUSD\r\n      amount0\r\n      amount1\r\n      timestamp\r\n      pair {\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const FIRST_SNAPSHOT = gql`\r\n  query snapshots($user: Bytes!) {\r\n    liquidityPositionSnapshots(first: 1, where: { user: $user }, orderBy: timestamp, orderDirection: asc) {\r\n      timestamp\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_HISTORY = gql`\r\n  query snapshots($user: Bytes!, $skip: Int!) {\r\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\r\n      timestamp\r\n      reserveUSD\r\n      liquidityTokenBalance\r\n      liquidityTokenTotalSupply\r\n      reserve0\r\n      reserve1\r\n      token0PriceUSD\r\n      token1PriceUSD\r\n      pair {\r\n        id\r\n        reserve0\r\n        reserve1\r\n        reserveUSD\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_POSITIONS = gql`\r\n  query liquidityPositions($user: Bytes!) {\r\n    liquidityPositions(where: { user: $user }) {\r\n      pair {\r\n        id\r\n        reserve0\r\n        reserve1\r\n        reserveUSD\r\n        token0 {\r\n          id\r\n          symbol\r\n          derivedETH\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n          derivedETH\r\n        }\r\n        totalSupply\r\n      }\r\n      liquidityTokenBalance\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_TRANSACTIONS = gql`\r\n  query transactions($user: Bytes!) {\r\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\r\n      id\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        id\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      to\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\r\n      id\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        id\r\n        token0 {\r\n          symbol\r\n        }\r\n        token1 {\r\n          symbol\r\n        }\r\n      }\r\n      sender\r\n      to\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\r\n      id\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        token0 {\r\n          symbol\r\n        }\r\n        token1 {\r\n          symbol\r\n        }\r\n      }\r\n      amount0In\r\n      amount0Out\r\n      amount1In\r\n      amount1Out\r\n      amountUSD\r\n      to\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_CHART = gql`\r\n  query pairDayDatas($pairAddress: Bytes!, $skip: Int!) {\r\n    pairDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { pairAddress: $pairAddress }) {\r\n      id\r\n      date\r\n      dailyVolumeToken0\r\n      dailyVolumeToken1\r\n      dailyVolumeUSD\r\n      reserveUSD\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_DAY_DATA = gql`\r\n  query pairDayDatas($pairAddress: Bytes!, $date: Int!) {\r\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\r\n      id\r\n      date\r\n      dailyVolumeToken0\r\n      dailyVolumeToken1\r\n      dailyVolumeUSD\r\n      totalSupply\r\n      reserveUSD\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_DAY_DATA_BULK = (pairs, startTimestamp) => {\r\n  let pairsString = `[`\r\n  pairs.map((pair) => {\r\n    return (pairsString += `\"${pair}\"`)\r\n  })\r\n  pairsString += ']'\r\n  const queryString = `\r\n    query days {\r\n      pairDayDatas(first: 1000, orderBy: date, orderDirection: asc, where: { pairAddress_in: ${pairsString}, date_gt: ${startTimestamp} }) {\r\n        id\r\n        pairAddress\r\n        date\r\n        dailyVolumeToken0\r\n        dailyVolumeToken1\r\n        dailyVolumeUSD\r\n        totalSupply\r\n        reserveUSD\r\n      }\r\n    } \r\n`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const GLOBAL_CHART = gql`\r\n  query linkswapDayDatas($startTime: Int!, $skip: Int!) {\r\n    linkswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\r\n      id\r\n      date\r\n      totalVolumeUSD\r\n      dailyVolumeUSD\r\n      dailyVolumeETH\r\n      totalLiquidityUSD\r\n      totalLiquidityETH\r\n    }\r\n  }\r\n`\r\n\r\nexport const GLOBAL_DATA = (block) => {\r\n  const queryString = ` query linkswapFactories {\r\n      linkswapFactories(\r\n       ${block ? `block: { number: ${block}}` : ``} \r\n       where: { id: \"${FACTORY_ADDRESS}\" }) {\r\n        id\r\n        totalVolumeUSD\r\n        totalVolumeETH\r\n        untrackedVolumeUSD\r\n        totalLiquidityUSD\r\n        totalLiquidityETH\r\n        txCount\r\n        pairCount\r\n      }\r\n    }`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const GLOBAL_TXNS = gql`\r\n  query transactions {\r\n    transactions(first: 100, orderBy: timestamp, orderDirection: desc) {\r\n      mints(orderBy: timestamp, orderDirection: desc) {\r\n        transaction {\r\n          id\r\n          timestamp\r\n        }\r\n        pair {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        to\r\n        liquidity\r\n        amount0\r\n        amount1\r\n        amountUSD\r\n      }\r\n      burns(orderBy: timestamp, orderDirection: desc) {\r\n        transaction {\r\n          id\r\n          timestamp\r\n        }\r\n        pair {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        sender\r\n        liquidity\r\n        amount0\r\n        amount1\r\n        amountUSD\r\n      }\r\n      swaps(orderBy: timestamp, orderDirection: desc) {\r\n        transaction {\r\n          id\r\n          timestamp\r\n        }\r\n        pair {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        amount0In\r\n        amount0Out\r\n        amount1In\r\n        amount1Out\r\n        amountUSD\r\n        to\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const ALL_TOKENS = gql`\r\n  query tokens($skip: Int!) {\r\n    tokens(first: 500, skip: $skip) {\r\n      id\r\n      name\r\n      symbol\r\n      totalLiquidity\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKEN_SEARCH = gql`\r\n  query tokens($value: String, $id: String) {\r\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n    }\r\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n    }\r\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_SEARCH = gql`\r\n  query pairs($tokens: [Bytes]!, $id: String) {\r\n    as0: pairs(where: { token0_in: $tokens }) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n    as1: pairs(where: { token1_in: $tokens }) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n    asAddress: pairs(where: { id: $id }) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const ALL_PAIRS = gql`\r\n  query pairs($skip: Int!) {\r\n    pairs(first: 500, skip: $skip, orderBy: trackedReserveETH, orderDirection: desc) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst PairFields = `\r\n  fragment PairFields on Pair {\r\n    id\r\n    txCount\r\n    token0 {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n      derivedETH\r\n    }\r\n    token1 {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n      derivedETH\r\n    }\r\n    reserve0\r\n    reserve1\r\n    reserveUSD\r\n    totalSupply\r\n    trackedReserveETH\r\n    reserveETH\r\n    volumeUSD\r\n    untrackedVolumeUSD\r\n    token0Price\r\n    token1Price\r\n    createdAtTimestamp\r\n  }\r\n`\r\n\r\nexport const PAIRS_CURRENT = gql`\r\n  query pairs {\r\n    pairs(first: 200, orderBy: trackedReserveETH, orderDirection: desc) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_DATA = (pairAddress, block) => {\r\n  const queryString = `\r\n    ${PairFields}\r\n    query pairs {\r\n      pairs(${block ? `block: {number: ${block}}` : ``} where: { id: \"${pairAddress}\"} ) {\r\n        ...PairFields\r\n      }\r\n    }`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const MINING_POSITIONS = (account) => {\r\n  const queryString = `\r\n    query users {\r\n      user(id: \"${account}\") {\r\n        miningPosition {\r\n          id\r\n          user {\r\n            id\r\n          }\r\n          miningPool {\r\n              pair {\r\n                id\r\n                token0\r\n                token1\r\n              }\r\n          }\r\n          balance\r\n        }\r\n      }\r\n    }\r\n`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const PAIRS_BULK = gql`\r\n  ${PairFields}\r\n  query pairs($allPairs: [Bytes]!) {\r\n    pairs(where: { id_in: $allPairs }, orderBy: trackedReserveETH, orderDirection: desc) {\r\n      ...PairFields\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIRS_HISTORICAL_BULK = (block, pairs) => {\r\n  let pairsString = `[`\r\n  pairs.map((pair) => {\r\n    return (pairsString += `\"${pair}\"`)\r\n  })\r\n  pairsString += ']'\r\n  let queryString = `\r\n  query pairs {\r\n    pairs(first: 200, where: {id_in: ${pairsString}}, block: {number: ${block}}, orderBy: trackedReserveETH, orderDirection: desc) {\r\n      id\r\n      reserveUSD\r\n      trackedReserveETH\r\n      volumeUSD\r\n      untrackedVolumeUSD\r\n    }\r\n  }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const TOKEN_CHART = gql`\r\n  query tokenDayDatas($tokenAddr: String!, $skip: Int!) {\r\n    tokenDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { token: $tokenAddr }) {\r\n      id\r\n      date\r\n      priceUSD\r\n      totalLiquidityToken\r\n      totalLiquidityUSD\r\n      totalLiquidityETH\r\n      dailyVolumeETH\r\n      dailyVolumeToken\r\n      dailyVolumeUSD\r\n    }\r\n  }\r\n`\r\n\r\nconst TokenFields = `\r\n  fragment TokenFields on Token {\r\n    id\r\n    name\r\n    symbol\r\n    derivedETH\r\n    tradeVolume\r\n    tradeVolumeUSD\r\n    untrackedVolumeUSD\r\n    totalLiquidity\r\n    txCount\r\n  }\r\n`\r\n\r\nexport const TOKENS_CURRENT = gql`\r\n  ${TokenFields}\r\n  query tokens {\r\n    tokens(first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\r\n      ...TokenFields\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKENS_DYNAMIC = (block) => {\r\n  const queryString = `\r\n    ${TokenFields}\r\n    query tokens {\r\n      tokens(block: {number: ${block}} first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\r\n        ...TokenFields\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const TOKEN_DATA = (tokenAddress, block) => {\r\n  const queryString = `\r\n    ${TokenFields}\r\n    query tokens {\r\n      tokens(${block ? `block : {number: ${block}}` : ``} where: {id:\"${tokenAddress}\"}) {\r\n        ...TokenFields\r\n      }\r\n      pairs0: pairs(where: {token0: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\r\n        id\r\n      }\r\n      pairs1: pairs(where: {token1: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\r\n        id\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const FILTERED_TRANSACTIONS = gql`\r\n  query($allPairs: [Bytes]!) {\r\n    mints(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      to\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    burns(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      sender\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    swaps(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      id\r\n      pair {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      amount0In\r\n      amount0Out\r\n      amount1In\r\n      amount1Out\r\n      amountUSD\r\n      to\r\n    }\r\n  }\r\n`\r\n","import { TokenList } from '@uniswap/token-lists'\r\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\r\nimport Ajv from 'ajv'\r\n\r\n/**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */\r\nfunction uriToHttp(uri: string): string[] {\r\n  const protocol = uri.split(':')[0].toLowerCase()\r\n  switch (protocol) {\r\n    case 'https':\r\n      return [uri]\r\n    case 'http':\r\n      return ['https' + uri.substr(4), uri]\r\n    case 'ipfs':\r\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\r\n    case 'ipns':\r\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\r\n\r\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n */\r\nexport default async function getTokenList(listUrl: string): Promise<TokenList> {\r\n  const urls = uriToHttp(listUrl)\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i]\r\n    const isLast = i === urls.length - 1\r\n    let response\r\n    try {\r\n      response = await fetch(url)\r\n    } catch (error) {\r\n      console.debug('Failed to fetch list', listUrl, error)\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    if (!response.ok) {\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    const json = await response.json()\r\n    if (!tokenListValidator(json)) {\r\n      const validationErrors: string =\r\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\r\n          const add = `${error.dataPath} ${error.message ?? ''}`\r\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\r\n        }, '') ?? 'unknown error'\r\n      throw new Error(`Token list failed validation: ${validationErrors}`)\r\n    }\r\n    return json\r\n  }\r\n  throw new Error('Unrecognized list URL protocol.')\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useState, useEffect } from 'react'\r\nimport { timeframeOptions, SUPPORTED_LIST_URLS__NO_ENS } from '../constants'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport getTokenList from '../utils/tokenLists'\r\nimport { healthClient } from '../apollo/client'\r\nimport { SUBGRAPH_HEALTH } from '../apollo/queries'\r\ndayjs.extend(utc)\r\n\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_TIMEFRAME = 'UPDATE_TIMEFRAME'\r\nconst UPDATE_SESSION_START = 'UPDATE_SESSION_START'\r\nconst UPDATED_SUPPORTED_TOKENS = 'UPDATED_SUPPORTED_TOKENS'\r\nconst UPDATE_LATEST_BLOCK = 'UPDATE_LATEST_BLOCK'\r\nconst UPDATE_HEAD_BLOCK = 'UPDATE_HEAD_BLOCK'\r\n\r\nconst SUPPORTED_TOKENS = 'SUPPORTED_TOKENS'\r\nconst TIME_KEY = 'TIME_KEY'\r\nconst CURRENCY = 'CURRENCY'\r\nconst SESSION_START = 'SESSION_START'\r\nconst LATEST_BLOCK = 'LATEST_BLOCK'\r\nconst HEAD_BLOCK = 'HEAD_BLOCK'\r\n\r\nconst ApplicationContext = createContext()\r\n\r\nfunction useApplicationContext() {\r\n  return useContext(ApplicationContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { currency } = payload\r\n      return {\r\n        ...state,\r\n        [CURRENCY]: currency,\r\n      }\r\n    }\r\n    case UPDATE_TIMEFRAME: {\r\n      const { newTimeFrame } = payload\r\n      return {\r\n        ...state,\r\n        [TIME_KEY]: newTimeFrame,\r\n      }\r\n    }\r\n    case UPDATE_SESSION_START: {\r\n      const { timestamp } = payload\r\n      return {\r\n        ...state,\r\n        [SESSION_START]: timestamp,\r\n      }\r\n    }\r\n\r\n    case UPDATE_LATEST_BLOCK: {\r\n      const { block } = payload\r\n      return {\r\n        ...state,\r\n        [LATEST_BLOCK]: block,\r\n      }\r\n    }\r\n\r\n    case UPDATE_HEAD_BLOCK: {\r\n      const { block } = payload\r\n      return {\r\n        ...state,\r\n        [HEAD_BLOCK]: block,\r\n      }\r\n    }\r\n\r\n    case UPDATED_SUPPORTED_TOKENS: {\r\n      const { supportedTokens } = payload\r\n      return {\r\n        ...state,\r\n        [SUPPORTED_TOKENS]: supportedTokens,\r\n      }\r\n    }\r\n\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  CURRENCY: 'USD',\r\n  TIME_KEY: timeframeOptions.ALL_TIME,\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\r\n  const update = useCallback((currency) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        currency,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  // global time window for charts - see timeframe options in constants\r\n  const updateTimeframe = useCallback((newTimeFrame) => {\r\n    dispatch({\r\n      type: UPDATE_TIMEFRAME,\r\n      payload: {\r\n        newTimeFrame,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  // used for refresh button\r\n  const updateSessionStart = useCallback((timestamp) => {\r\n    dispatch({\r\n      type: UPDATE_SESSION_START,\r\n      payload: {\r\n        timestamp,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateSupportedTokens = useCallback((supportedTokens) => {\r\n    dispatch({\r\n      type: UPDATED_SUPPORTED_TOKENS,\r\n      payload: {\r\n        supportedTokens,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateLatestBlock = useCallback((block) => {\r\n    dispatch({\r\n      type: UPDATE_LATEST_BLOCK,\r\n      payload: {\r\n        block,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateHeadBlock = useCallback((block) => {\r\n    dispatch({\r\n      type: UPDATE_HEAD_BLOCK,\r\n      payload: {\r\n        block,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <ApplicationContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updateSessionStart,\r\n            updateTimeframe,\r\n            updateSupportedTokens,\r\n            updateLatestBlock,\r\n            updateHeadBlock,\r\n          },\r\n        ],\r\n        [state, update, updateTimeframe, updateSessionStart, updateSupportedTokens, updateLatestBlock, updateHeadBlock]\r\n      )}\r\n    >\r\n      {children}\r\n    </ApplicationContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useLatestBlocks() {\r\n  const [state, { updateLatestBlock, updateHeadBlock }] = useApplicationContext()\r\n\r\n  const latestBlock = state?.[LATEST_BLOCK]\r\n  const headBlock = state?.[HEAD_BLOCK]\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      healthClient\r\n        .query({\r\n          query: SUBGRAPH_HEALTH,\r\n        })\r\n        .then((res) => {\r\n          const syncedBlock = res.data.indexingStatusForCurrentVersion.chains[0].latestBlock.number\r\n          const headBlock = res.data.indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number\r\n          if (syncedBlock && headBlock) {\r\n            updateLatestBlock(syncedBlock)\r\n            updateHeadBlock(headBlock)\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e)\r\n        })\r\n    }\r\n    if (!latestBlock) {\r\n      fetch()\r\n    }\r\n  }, [latestBlock, updateHeadBlock, updateLatestBlock])\r\n\r\n  return [latestBlock, headBlock]\r\n}\r\n\r\nexport function useCurrentCurrency() {\r\n  const [state, { update }] = useApplicationContext()\r\n  const toggleCurrency = useCallback(() => {\r\n    if (state.currency === 'ETH') {\r\n      update('USD')\r\n    } else {\r\n      update('ETH')\r\n    }\r\n  }, [state, update])\r\n  return [state[CURRENCY], toggleCurrency]\r\n}\r\n\r\nexport function useTimeframe() {\r\n  const [state, { updateTimeframe }] = useApplicationContext()\r\n  const activeTimeframe = state?.[TIME_KEY]\r\n  return [activeTimeframe, updateTimeframe]\r\n}\r\n\r\nexport function useStartTimestamp() {\r\n  const [activeWindow] = useTimeframe()\r\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\r\n\r\n  // monitor the old date fetched\r\n  useEffect(() => {\r\n    let startTime =\r\n      dayjs\r\n        .utc()\r\n        .subtract(\r\n          1,\r\n          activeWindow === timeframeOptions.week ? 'week' : activeWindow === timeframeOptions.ALL_TIME ? 'year' : 'year'\r\n        )\r\n        .startOf('day')\r\n        .unix() - 1\r\n    // if we find a new start time less than the current startrtime - update oldest pooint to fetch\r\n    setStartDateTimestamp(startTime)\r\n  }, [activeWindow, startDateTimestamp])\r\n\r\n  return startDateTimestamp\r\n}\r\n\r\n// keep track of session length for refresh ticker\r\nexport function useSessionStart() {\r\n  const [state, { updateSessionStart }] = useApplicationContext()\r\n  const sessionStart = state?.[SESSION_START]\r\n\r\n  useEffect(() => {\r\n    if (!sessionStart) {\r\n      updateSessionStart(Date.now())\r\n    }\r\n  })\r\n\r\n  const [seconds, setSeconds] = useState(0)\r\n\r\n  useEffect(() => {\r\n    let interval = null\r\n    interval = setInterval(() => {\r\n      setSeconds(Date.now() - sessionStart ?? Date.now())\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [seconds, sessionStart])\r\n\r\n  return parseInt(seconds / 1000)\r\n}\r\n\r\nexport function useListedTokens() {\r\n  const [state, { updateSupportedTokens }] = useApplicationContext()\r\n  const supportedTokens = state?.[SUPPORTED_TOKENS]\r\n\r\n  useEffect(() => {\r\n    async function fetchList() {\r\n      const allFetched = await SUPPORTED_LIST_URLS__NO_ENS.reduce(async (fetchedTokens, url) => {\r\n        const tokensSoFar = await fetchedTokens\r\n        const newTokens = await getTokenList(url)\r\n        return Promise.resolve([...tokensSoFar, ...newTokens.tokens])\r\n      }, Promise.resolve([]))\r\n      let formatted = allFetched?.map((t) => t.address.toLowerCase())\r\n      updateSupportedTokens(formatted)\r\n    }\r\n    if (!supportedTokens) {\r\n      fetchList()\r\n    }\r\n  }, [updateSupportedTokens, supportedTokens])\r\n\r\n  return supportedTokens\r\n}\r\n","import React from 'react'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport dayjs from 'dayjs'\r\nimport { ethers } from 'ethers'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { client, blockClient } from '../apollo/client'\r\nimport { GET_BLOCK, GET_BLOCKS, SHARE_VALUE } from '../apollo/queries'\r\nimport { Text } from 'rebass'\r\nimport _Decimal from 'decimal.js-light'\r\nimport toFormat from 'toformat'\r\nimport { timeframeOptions } from '../constants'\r\nimport Numeral from 'numeral'\r\n\r\n// format libraries\r\nconst Decimal = toFormat(_Decimal)\r\nBigNumber.set({ EXPONENTIAL_AT: 50 })\r\ndayjs.extend(utc)\r\n\r\nexport function getTimeframe(timeWindow) {\r\n  const utcEndTime = dayjs.utc()\r\n  // based on window, get starttime\r\n  let utcStartTime\r\n  switch (timeWindow) {\r\n    case timeframeOptions.WEEK:\r\n      utcStartTime =\r\n        utcEndTime\r\n          .subtract(1, 'week')\r\n          .endOf('day')\r\n          .unix() - 1\r\n      break\r\n    case timeframeOptions.MONTH:\r\n      utcStartTime =\r\n        utcEndTime\r\n          .subtract(1, 'month')\r\n          .endOf('day')\r\n          .unix() - 1\r\n      break\r\n    case timeframeOptions.ALL_TIME:\r\n      utcStartTime =\r\n        utcEndTime\r\n          .subtract(1, 'year')\r\n          .endOf('day')\r\n          .unix() - 1\r\n      break\r\n    default:\r\n      utcStartTime =\r\n        utcEndTime\r\n          .subtract(1, 'year')\r\n          .startOf('year')\r\n          .unix() - 1\r\n      break\r\n  }\r\n  return utcStartTime\r\n}\r\n\r\nexport function getPoolLink(token0Address, token1Address = null, remove = false) {\r\n  let action = remove ? `remove` : `add`\r\n  let inputCurrency = null\r\n  let outputCurrency = null\r\n\r\n  if (!token1Address) {\r\n    inputCurrency = 'ETH'\r\n    outputCurrency = token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address\r\n  } else {\r\n    inputCurrency = token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address\r\n    outputCurrency = token1Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token1Address\r\n  }\r\n\r\n  if (outputCurrency === 'ETH') {\r\n    outputCurrency = inputCurrency\r\n    inputCurrency = 'ETH'\r\n  }\r\n\r\n  return `https://varen.exchange/#/${action}/${inputCurrency}/${outputCurrency}`\r\n}\r\n\r\nexport function getSwapLink(token0Address, token1Address = null) {\r\n  let queryString = null\r\n  if (!token1Address) {\r\n    queryString = `outputCurrency=${token0Address}`\r\n  } else {\r\n    let inputCurrency = token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address\r\n    let outputCurrency = token1Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token1Address\r\n\r\n    if (outputCurrency === 'ETH') {\r\n      outputCurrency = inputCurrency\r\n      inputCurrency = 'ETH'\r\n    }\r\n\r\n    queryString = `inputCurrency=${inputCurrency}&outputCurrency=${outputCurrency}`\r\n  }\r\n\r\n  return `https://varen.exchange/#/swap?${queryString}`\r\n}\r\n\r\nexport function getMiningPoolLink(token0Address) {\r\n  return `https://varen.exchange/#/add/ETH/${token0Address}`\r\n}\r\n\r\nexport function getDarkHorseAppLink(linkVariable) {\r\n  let baseDarkHorseUrl = 'https://varen.exchange'\r\n  if (!linkVariable) {\r\n    return baseDarkHorseUrl\r\n  }\r\n\r\n  return `${baseDarkHorseUrl}/ETH/${linkVariable}`\r\n}\r\n\r\nexport function localNumber(val) {\r\n  return Numeral(val).format('0,0')\r\n}\r\n\r\nexport const toNiceDate = date => {\r\n  let x = dayjs.utc(dayjs.unix(date)).format('MMM DD')\r\n  return x\r\n}\r\n\r\nexport const toWeeklyDate = date => {\r\n  const formatted = dayjs.utc(dayjs.unix(date))\r\n  date = new Date(formatted)\r\n  const day = new Date(formatted).getDay()\r\n  var lessDays = day === 6 ? 0 : day + 1\r\n  var wkStart = new Date(new Date(date).setDate(date.getDate() - lessDays))\r\n  var wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6))\r\n  return dayjs.utc(wkStart).format('MMM DD') + ' - ' + dayjs.utc(wkEnd).format('MMM DD')\r\n}\r\n\r\nexport function getTimestampsForChanges() {\r\n  const utcCurrentTime = dayjs()\r\n  const t1 = utcCurrentTime\r\n    .subtract(1, 'day')\r\n    .startOf('minute')\r\n    .unix()\r\n  const t2 = utcCurrentTime\r\n    .subtract(2, 'day')\r\n    .startOf('minute')\r\n    .unix()\r\n  const tWeek = utcCurrentTime\r\n    .subtract(1, 'week')\r\n    .startOf('minute')\r\n    .unix()\r\n  return [t1, t2, tWeek]\r\n}\r\n\r\nexport async function splitQuery(query, localClient, vars, list, skipCount = 100) {\r\n  let fetchedData = {}\r\n  let allFound = false\r\n  let skip = 0\r\n\r\n  while (!allFound) {\r\n    let end = list.length\r\n    if (skip + skipCount < list.length) {\r\n      end = skip + skipCount\r\n    }\r\n    let sliced = list.slice(skip, end)\r\n    let result = await localClient.query({\r\n      query: query(...vars, sliced),\r\n      fetchPolicy: 'cache-first'\r\n    })\r\n    fetchedData = {\r\n      ...fetchedData,\r\n      ...result.data\r\n    }\r\n    if (Object.keys(result.data).length < skipCount || skip + skipCount > list.length) {\r\n      allFound = true\r\n    } else {\r\n      skip += skipCount\r\n    }\r\n  }\r\n\r\n  return fetchedData\r\n}\r\n\r\n/**\r\n * @notice Fetches first block after a given timestamp\r\n * @dev Query speed is optimized by limiting to a 600-second period\r\n * @param {Int} timestamp in seconds\r\n */\r\nexport async function getBlockFromTimestamp(timestamp) {\r\n  let result = await blockClient.query({\r\n    query: GET_BLOCK,\r\n    variables: {\r\n      timestampFrom: timestamp,\r\n      timestampTo: timestamp + 600\r\n    },\r\n    fetchPolicy: 'cache-first'\r\n  })\r\n  return result?.data?.blocks?.[0]?.number\r\n}\r\n\r\n/**\r\n * @notice Fetches block objects for an array of timestamps.\r\n * @dev blocks are returned in chronological order (ASC) regardless of input.\r\n * @dev blocks are returned at string representations of Int\r\n * @dev timestamps are returns as they were provided; not the block time.\r\n * @param {Array} timestamps\r\n */\r\nexport async function getBlocksFromTimestamps(timestamps, skipCount = 500) {\r\n  if (timestamps?.length === 0) {\r\n    return []\r\n  }\r\n\r\n  let fetchedData = await splitQuery(GET_BLOCKS, blockClient, [], timestamps, skipCount)\r\n\r\n  let blocks = []\r\n  if (fetchedData) {\r\n    for (var t in fetchedData) {\r\n      if (fetchedData[t].length > 0) {\r\n        blocks.push({\r\n          timestamp: t.split('t')[1],\r\n          number: fetchedData[t][0]['number']\r\n        })\r\n      }\r\n    }\r\n  }\r\n  return blocks\r\n}\r\n\r\nexport async function getLiquidityTokenBalanceOvertime(account, timestamps) {\r\n  // get blocks based on timestamps\r\n  const blocks = await getBlocksFromTimestamps(timestamps)\r\n\r\n  // get historical share values with time travel queries\r\n  let result = await client.query({\r\n    query: SHARE_VALUE(account, blocks),\r\n    fetchPolicy: 'cache-first'\r\n  })\r\n\r\n  let values = []\r\n  for (var row in result?.data) {\r\n    let timestamp = row.split('t')[1]\r\n    if (timestamp) {\r\n      values.push({\r\n        timestamp,\r\n        balance: 0\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @notice Example query using time travel queries\r\n * @dev TODO - handle scenario where blocks are not available for a timestamps (e.g. current time)\r\n * @param {String} pairAddress\r\n * @param {Array} timestamps\r\n */\r\nexport async function getShareValueOverTime(pairAddress, timestamps) {\r\n  if (!timestamps) {\r\n    const utcCurrentTime = dayjs()\r\n    const utcSevenDaysBack = utcCurrentTime.subtract(8, 'day').unix()\r\n    timestamps = getTimestampRange(utcSevenDaysBack, 86400, 7)\r\n  }\r\n\r\n  // get blocks based on timestamps\r\n  const blocks = await getBlocksFromTimestamps(timestamps)\r\n\r\n  // get historical share values with time travel queries\r\n  let result = await client.query({\r\n    query: SHARE_VALUE(pairAddress, blocks),\r\n    fetchPolicy: 'cache-first'\r\n  })\r\n\r\n  let values = []\r\n  for (var row in result?.data) {\r\n    let timestamp = row.split('t')[1]\r\n    let sharePriceUsd = parseFloat(result.data[row]?.reserveUSD) / parseFloat(result.data[row]?.totalSupply)\r\n    if (timestamp) {\r\n      values.push({\r\n        timestamp,\r\n        sharePriceUsd,\r\n        totalSupply: result.data[row].totalSupply,\r\n        reserve0: result.data[row].reserve0,\r\n        reserve1: result.data[row].reserve1,\r\n        reserveUSD: result.data[row].reserveUSD,\r\n        token0DerivedETH: result.data[row].token0.derivedETH,\r\n        token1DerivedETH: result.data[row].token1.derivedETH,\r\n        roiUsd: values && values[0] ? sharePriceUsd / values[0]['sharePriceUsd'] : 1,\r\n        ethPrice: 0,\r\n        token0PriceUSD: 0,\r\n        token1PriceUSD: 0\r\n      })\r\n    }\r\n  }\r\n\r\n  // add eth prices\r\n  let index = 0\r\n  for (var brow in result?.data) {\r\n    let timestamp = brow.split('b')[1]\r\n    if (timestamp) {\r\n      values[index].ethPrice = result.data[brow].ethPrice\r\n      values[index].token0PriceUSD = result.data[brow].ethPrice * values[index].token0DerivedETH\r\n      values[index].token1PriceUSD = result.data[brow].ethPrice * values[index].token1DerivedETH\r\n      index += 1\r\n    }\r\n  }\r\n\r\n  return values\r\n}\r\n\r\n/**\r\n * @notice Creates an evenly-spaced array of timestamps\r\n * @dev Periods include a start and end timestamp. For example, n periods are defined by n+1 timestamps.\r\n * @param {Int} timestamp_from in seconds\r\n * @param {Int} period_length in seconds\r\n * @param {Int} periods\r\n */\r\nexport function getTimestampRange(timestamp_from, period_length, periods) {\r\n  let timestamps = []\r\n  for (let i = 0; i <= periods; i++) {\r\n    timestamps.push(timestamp_from + i * period_length)\r\n  }\r\n  return timestamps\r\n}\r\n\r\nexport const toNiceDateYear = date => dayjs.utc(dayjs.unix(date)).format('MMMM DD, YYYY')\r\n\r\nexport const isAddress = value => {\r\n  try {\r\n    return ethers.utils.getAddress(value.toLowerCase())\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const toK = num => {\r\n  return Numeral(num).format('0.[00]a')\r\n}\r\n\r\nexport const setThemeColor = theme => document.documentElement.style.setProperty('--c-token', theme || '#333333')\r\n\r\nexport const Big = number => new BigNumber(number)\r\n\r\nexport const urls = {\r\n  showTransaction: tx => `https://etherscan.io/tx/${tx}/`,\r\n  showAddress: address => `https://www.etherscan.io/address/${address}/`,\r\n  showToken: address => `https://www.etherscan.io/token/${address}/`,\r\n  showBlock: block => `https://etherscan.io/block/${block}/`\r\n}\r\n\r\nexport const formatTime = unix => {\r\n  const now = dayjs()\r\n  const timestamp = dayjs.unix(unix)\r\n\r\n  const inSeconds = now.diff(timestamp, 'second')\r\n  const inMinutes = now.diff(timestamp, 'minute')\r\n  const inHours = now.diff(timestamp, 'hour')\r\n  const inDays = now.diff(timestamp, 'day')\r\n\r\n  if (inHours >= 24) {\r\n    return `${inDays} ${inDays === 1 ? 'day' : 'days'} ago`\r\n  } else if (inMinutes >= 60) {\r\n    return `${inHours} ${inHours === 1 ? 'hour' : 'hours'} ago`\r\n  } else if (inSeconds >= 60) {\r\n    return `${inMinutes} ${inMinutes === 1 ? 'minute' : 'minutes'} ago`\r\n  } else {\r\n    return `${inSeconds} ${inSeconds === 1 ? 'second' : 'seconds'} ago`\r\n  }\r\n}\r\n\r\nexport const formatNumber = num => {\r\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n}\r\n\r\n// using a currency library here in case we want to add more in future\r\nexport const formatDollarAmount = (num, digits) => {\r\n  const formatter = new Intl.NumberFormat([], {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: digits,\r\n    maximumFractionDigits: digits\r\n  })\r\n  return formatter.format(num)\r\n}\r\n\r\nexport const toSignificant = (number, significantDigits) => {\r\n  Decimal.set({ precision: significantDigits + 1, rounding: Decimal.ROUND_UP })\r\n  const updated = new Decimal(number).toSignificantDigits(significantDigits)\r\n  return updated.toFormat(updated.decimalPlaces(), { groupSeparator: '' })\r\n}\r\n\r\nexport const formattedNum = (number, usd = false, acceptNegatives = false) => {\r\n  if (isNaN(number) || number === '' || number === undefined) {\r\n    return usd ? '$0' : 0\r\n  }\r\n  let num = parseFloat(number)\r\n\r\n  if (num > 500000000) {\r\n    return (usd ? '$' : '') + toK(num.toFixed(0), true)\r\n  }\r\n\r\n  if (num === 0) {\r\n    if (usd) {\r\n      return '$0'\r\n    }\r\n    return 0\r\n  }\r\n\r\n  if (num < 0.0001 && num > 0) {\r\n    return usd ? '< $0.0001' : '< 0.0001'\r\n  }\r\n\r\n  if (num > 1000) {\r\n    return usd ? formatDollarAmount(num, 0) : Number(parseFloat(num).toFixed(0)).toLocaleString()\r\n  }\r\n\r\n  if (usd) {\r\n    if (num < 0) {\r\n      return formatDollarAmount(num, 0)\r\n    } else if (num < 0.1) {\r\n      return formatDollarAmount(num, 4)\r\n    } else {\r\n      return formatDollarAmount(num, 2)\r\n    }\r\n  }\r\n\r\n  return Number(parseFloat(num).toFixed(5)).toLocaleString()\r\n}\r\n\r\nexport function rawPercent(percentRaw) {\r\n  let percent = parseFloat(percentRaw * 100)\r\n  if (!percent || percent === 0) {\r\n    return '0%'\r\n  }\r\n  if (percent < 1 && percent > 0) {\r\n    return '< 1%'\r\n  }\r\n  return percent.toFixed(0) + '%'\r\n}\r\n\r\nexport function formattedPercent(percent, useBrackets = false) {\r\n  percent = parseFloat(percent)\r\n  if (!percent || percent === 0) {\r\n    return <Text fontWeight={500}>0%</Text>\r\n  }\r\n\r\n  if (percent < 0.0001 && percent > 0) {\r\n    return (\r\n      <Text fontWeight={500} color=\"green\">\r\n        {'< 0.0001%'}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  if (percent < 0 && percent > -0.0001) {\r\n    return (\r\n      <Text fontWeight={500} color=\"red\">\r\n        {'< 0.0001%'}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  let fixedPercent = percent.toFixed(2)\r\n  if (fixedPercent === '0.00') {\r\n    return '0%'\r\n  }\r\n  if (fixedPercent > 0) {\r\n    if (fixedPercent > 100) {\r\n      return <Text fontWeight={500} color=\"green\">{`+${percent?.toFixed(0).toLocaleString()}%`}</Text>\r\n    } else {\r\n      return <Text fontWeight={500} color=\"green\">{`+${fixedPercent}%`}</Text>\r\n    }\r\n  } else {\r\n    return <Text fontWeight={500} color=\"red\">{`${fixedPercent}%`}</Text>\r\n  }\r\n}\r\n\r\n/**\r\n * gets the amoutn difference plus the % change in change itself (second order change)\r\n * @param {*} valueNow\r\n * @param {*} value24HoursAgo\r\n * @param {*} value48HoursAgo\r\n */\r\nexport const get2DayPercentChange = (valueNow, value24HoursAgo, value48HoursAgo) => {\r\n  // get volume info for both 24 hour periods\r\n  let currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\r\n  let previousChange = parseFloat(value24HoursAgo) - parseFloat(value48HoursAgo)\r\n\r\n  const adjustedPercentChange = (parseFloat(currentChange - previousChange) / parseFloat(previousChange)) * 100\r\n\r\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\r\n    return [currentChange, 0]\r\n  }\r\n  return [currentChange, adjustedPercentChange]\r\n}\r\n\r\n/**\r\n * get standard percent change between two values\r\n * @param {*} valueNow\r\n * @param {*} value24HoursAgo\r\n */\r\nexport const getPercentChange = (valueNow, value24HoursAgo) => {\r\n  const adjustedPercentChange =\r\n    ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\r\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\r\n    return 0\r\n  }\r\n  return adjustedPercentChange\r\n}\r\n\r\nexport function isEquivalent(a, b) {\r\n  var aProps = Object.getOwnPropertyNames(a)\r\n  var bProps = Object.getOwnPropertyNames(b)\r\n  if (aProps.length !== bProps.length) {\r\n    return false\r\n  }\r\n  for (var i = 0; i < aProps.length; i++) {\r\n    var propName = aProps[i]\r\n    if (a[propName] !== b[propName]) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n","interface BasicData {\r\n  token0?: {\r\n    id: string\r\n    name: string\r\n    symbol: string\r\n  }\r\n  token1?: {\r\n    id: string\r\n    name: string\r\n    symbol: string\r\n  }\r\n}\r\n\r\n// Override data return from graph - usually because proxy token has changed\r\n// names since entitiy was created in subgraph\r\n// keys are lowercase token addresses <--------\r\nconst TOKEN_OVERRIDES: { [address: string]: { name: string; symbol: string } } = {\r\n  '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2': {\r\n    name: 'Ether (Wrapped)',\r\n    symbol: 'ETH',\r\n  },\r\n  '0x1416946162b1c2c871a73b07e932d2fb6c932069': {\r\n    name: 'Energi',\r\n    symbol: 'NRGE',\r\n  },\r\n}\r\n\r\n// override tokens with incorrect symbol or names\r\nexport function updateNameData(data: BasicData): BasicData | undefined {\r\n  if (data?.token0?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token0.id)) {\r\n    data.token0.name = TOKEN_OVERRIDES[data.token0.id].name\r\n    data.token0.symbol = TOKEN_OVERRIDES[data.token0.id].symbol\r\n  }\r\n\r\n  if (data?.token1?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token1.id)) {\r\n    data.token1.name = TOKEN_OVERRIDES[data.token1.id].name\r\n    data.token1.symbol = TOKEN_OVERRIDES[data.token1.id].symbol\r\n  }\r\n\r\n  return data\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\r\n\r\nimport { client } from '../apollo/client'\r\nimport {\r\n  PAIR_DATA,\r\n  PAIR_CHART,\r\n  FILTERED_TRANSACTIONS,\r\n  PAIRS_CURRENT,\r\n  PAIRS_BULK,\r\n  PAIRS_HISTORICAL_BULK,\r\n  HOURLY_PAIR_RATES,\r\n} from '../apollo/queries'\r\n\r\nimport { useEthPrice } from './GlobalData'\r\n\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport {\r\n  getPercentChange,\r\n  get2DayPercentChange,\r\n  isAddress,\r\n  getBlocksFromTimestamps,\r\n  getTimestampsForChanges,\r\n  splitQuery,\r\n} from '../utils'\r\nimport { timeframeOptions } from '../constants'\r\nimport { useLatestBlocks } from './Application'\r\nimport { updateNameData } from '../utils/data'\r\n\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_PAIR_TXNS = 'UPDATE_PAIR_TXNS'\r\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\r\nconst UPDATE_TOP_PAIRS = 'UPDATE_TOP_PAIRS'\r\nconst UPDATE_HOURLY_DATA = 'UPDATE_HOURLY_DATA'\r\n\r\ndayjs.extend(utc)\r\n\r\nexport function safeAccess(object, path) {\r\n  return object\r\n    ? path.reduce(\r\n        (accumulator, currentValue) => (accumulator && accumulator[currentValue] ? accumulator[currentValue] : null),\r\n        object\r\n      )\r\n    : null\r\n}\r\n\r\nconst PairDataContext = createContext()\r\n\r\nfunction usePairDataContext() {\r\n  return useContext(PairDataContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { pairAddress, data } = payload\r\n      return {\r\n        ...state,\r\n        [pairAddress]: {\r\n          ...state?.[pairAddress],\r\n          ...data,\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_TOP_PAIRS: {\r\n      const { topPairs } = payload\r\n      let added = {}\r\n      topPairs.map((pair) => {\r\n        return (added[pair.id] = pair)\r\n      })\r\n      return {\r\n        ...state,\r\n        ...added,\r\n      }\r\n    }\r\n\r\n    case UPDATE_PAIR_TXNS: {\r\n      const { address, transactions } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...(safeAccess(state, [address]) || {}),\r\n          txns: transactions,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_CHART_DATA: {\r\n      const { address, chartData } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...(safeAccess(state, [address]) || {}),\r\n          chartData,\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_HOURLY_DATA: {\r\n      const { address, hourlyData, timeWindow } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          hourlyData: {\r\n            ...state?.[address]?.hourlyData,\r\n            [timeWindow]: hourlyData,\r\n          },\r\n        },\r\n      }\r\n    }\r\n\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {})\r\n\r\n  // update pair specific data\r\n  const update = useCallback((pairAddress, data) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        pairAddress,\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTopPairs = useCallback((topPairs) => {\r\n    dispatch({\r\n      type: UPDATE_TOP_PAIRS,\r\n      payload: {\r\n        topPairs,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updatePairTxns = useCallback((address, transactions) => {\r\n    dispatch({\r\n      type: UPDATE_PAIR_TXNS,\r\n      payload: { address, transactions },\r\n    })\r\n  }, [])\r\n\r\n  const updateChartData = useCallback((address, chartData) => {\r\n    dispatch({\r\n      type: UPDATE_CHART_DATA,\r\n      payload: { address, chartData },\r\n    })\r\n  }, [])\r\n\r\n  const updateHourlyData = useCallback((address, hourlyData, timeWindow) => {\r\n    dispatch({\r\n      type: UPDATE_HOURLY_DATA,\r\n      payload: { address, hourlyData, timeWindow },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <PairDataContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updatePairTxns,\r\n            updateChartData,\r\n            updateTopPairs,\r\n            updateHourlyData,\r\n          },\r\n        ],\r\n        [state, update, updatePairTxns, updateChartData, updateTopPairs, updateHourlyData]\r\n      )}\r\n    >\r\n      {children}\r\n    </PairDataContext.Provider>\r\n  )\r\n}\r\n\r\nasync function getBulkPairData(pairList, ethPrice) {\r\n  const [t1, t2, tWeek] = getTimestampsForChanges()\r\n  let [{ number: b1 }, { number: b2 }, { number: bWeek }] = await getBlocksFromTimestamps([t1, t2, tWeek])\r\n\r\n  try {\r\n    let current = await client.query({\r\n      query: PAIRS_BULK,\r\n      variables: {\r\n        allPairs: pairList,\r\n      },\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let [oneDayResult, twoDayResult, oneWeekResult] = await Promise.all(\r\n      [b1, b2, bWeek].map(async (block) => {\r\n        let result = client.query({\r\n          query: PAIRS_HISTORICAL_BULK(block, pairList),\r\n          fetchPolicy: 'cache-first',\r\n        })\r\n        return result\r\n      })\r\n    )\r\n\r\n    let oneDayData = oneDayResult?.data?.pairs.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let twoDayData = twoDayResult?.data?.pairs.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let oneWeekData = oneWeekResult?.data?.pairs.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let pairData = await Promise.all(\r\n      current &&\r\n        current.data.pairs.map(async (pair) => {\r\n          let data = pair\r\n          let oneDayHistory = oneDayData?.[pair.id]\r\n          if (!oneDayHistory) {\r\n            let newData = await client.query({\r\n              query: PAIR_DATA(pair.id, b1),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            oneDayHistory = newData.data.pairs[0]\r\n          }\r\n          let twoDayHistory = twoDayData?.[pair.id]\r\n          if (!twoDayHistory) {\r\n            let newData = await client.query({\r\n              query: PAIR_DATA(pair.id, b2),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            twoDayHistory = newData.data.pairs[0]\r\n          }\r\n          let oneWeekHistory = oneWeekData?.[pair.id]\r\n          if (!oneWeekHistory) {\r\n            let newData = await client.query({\r\n              query: PAIR_DATA(pair.id, bWeek),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            oneWeekHistory = newData.data.pairs[0]\r\n          }\r\n          data = parseData(data, oneDayHistory, twoDayHistory, oneWeekHistory, ethPrice, b1)\r\n          return data\r\n        })\r\n    )\r\n    return pairData\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction parseData(data, oneDayData, twoDayData, oneWeekData, ethPrice, oneDayBlock) {\r\n  // get volume changes\r\n  const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n    data?.volumeUSD,\r\n    oneDayData?.volumeUSD ? oneDayData.volumeUSD : 0,\r\n    twoDayData?.volumeUSD ? twoDayData.volumeUSD : 0\r\n  )\r\n  const [oneDayVolumeUntracked, volumeChangeUntracked] = get2DayPercentChange(\r\n    data?.untrackedVolumeUSD,\r\n    oneDayData?.untrackedVolumeUSD ? parseFloat(oneDayData?.untrackedVolumeUSD) : 0,\r\n    twoDayData?.untrackedVolumeUSD ? twoDayData?.untrackedVolumeUSD : 0\r\n  )\r\n  const oneWeekVolumeUSD = parseFloat(oneWeekData ? data?.volumeUSD - oneWeekData?.volumeUSD : data.volumeUSD)\r\n\r\n  // set volume properties\r\n  data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\r\n  data.oneWeekVolumeUSD = oneWeekVolumeUSD\r\n  data.volumeChangeUSD = volumeChangeUSD\r\n  data.oneDayVolumeUntracked = oneDayVolumeUntracked\r\n  data.volumeChangeUntracked = volumeChangeUntracked\r\n\r\n  // set liquiditry properties\r\n  data.trackedReserveUSD = data.trackedReserveETH * ethPrice\r\n  data.liquidityChangeUSD = getPercentChange(data.reserveUSD, oneDayData?.reserveUSD)\r\n\r\n  // format if pair hasnt existed for a day or a week\r\n  if (!oneDayData && data && data.createdAtBlockNumber > oneDayBlock) {\r\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\r\n  }\r\n  if (!oneDayData && data) {\r\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\r\n  }\r\n  if (!oneWeekData && data) {\r\n    data.oneWeekVolumeUSD = parseFloat(data.volumeUSD)\r\n  }\r\n\r\n  // format incorrect names\r\n  updateNameData(data)\r\n\r\n  return data\r\n}\r\n\r\nconst getPairTransactions = async (pairAddress) => {\r\n  const transactions = {}\r\n\r\n  try {\r\n    let result = await client.query({\r\n      query: FILTERED_TRANSACTIONS,\r\n      variables: {\r\n        allPairs: [pairAddress],\r\n      },\r\n      fetchPolicy: 'no-cache',\r\n    })\r\n    transactions.mints = result.data.mints\r\n    transactions.burns = result.data.burns\r\n    transactions.swaps = result.data.swaps\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return transactions\r\n}\r\n\r\nconst getPairChartData = async (pairAddress) => {\r\n  let data = []\r\n  const utcEndTime = dayjs.utc()\r\n  let utcStartTime = utcEndTime.subtract(1, 'year').startOf('minute')\r\n  let startTime = utcStartTime.unix() - 1\r\n\r\n  try {\r\n    let allFound = false\r\n    let skip = 0\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: PAIR_CHART,\r\n        variables: {\r\n          pairAddress: pairAddress,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      skip += 1000\r\n      data = data.concat(result.data.pairDayDatas)\r\n      if (result.data.pairDayDatas.length < 1000) {\r\n        allFound = true\r\n      }\r\n    }\r\n\r\n    let dayIndexSet = new Set()\r\n    let dayIndexArray = []\r\n    const oneDay = 24 * 60 * 60\r\n    data.forEach((dayData, i) => {\r\n      // add the day index to the set of days\r\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\r\n      dayIndexArray.push(data[i])\r\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\r\n      dayData.reserveUSD = parseFloat(dayData.reserveUSD)\r\n    })\r\n\r\n    if (data[0]) {\r\n      // fill in empty days\r\n      let timestamp = data[0].date ? data[0].date : startTime\r\n      let latestLiquidityUSD = data[0].reserveUSD\r\n      let index = 1\r\n      while (timestamp < utcEndTime.unix() - oneDay) {\r\n        const nextDay = timestamp + oneDay\r\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\r\n        if (!dayIndexSet.has(currentDayIndex)) {\r\n          data.push({\r\n            date: nextDay,\r\n            dayString: nextDay,\r\n            dailyVolumeUSD: 0,\r\n            reserveUSD: latestLiquidityUSD,\r\n          })\r\n        } else {\r\n          latestLiquidityUSD = dayIndexArray[index].reserveUSD\r\n          index = index + 1\r\n        }\r\n        timestamp = nextDay\r\n      }\r\n    }\r\n\r\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nconst getHourlyRateData = async (pairAddress, startTime, latestBlock) => {\r\n  try {\r\n    const utcEndTime = dayjs.utc()\r\n    let time = startTime\r\n\r\n    // create an array of hour start times until we reach current hour\r\n    const timestamps = []\r\n    while (time <= utcEndTime.unix() - 3600) {\r\n      timestamps.push(time)\r\n      time += 3600\r\n    }\r\n\r\n    // backout if invalid timestamp format\r\n    if (timestamps.length === 0) {\r\n      return []\r\n    }\r\n\r\n    // once you have all the timestamps, get the blocks for each timestamp in a bulk query\r\n    let blocks\r\n\r\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\r\n\r\n    // catch failing case\r\n    if (!blocks || blocks?.length === 0) {\r\n      return []\r\n    }\r\n\r\n    if (latestBlock) {\r\n      blocks = blocks.filter((b) => {\r\n        return parseFloat(b.number) <= parseFloat(latestBlock)\r\n      })\r\n    }\r\n\r\n    const result = await splitQuery(HOURLY_PAIR_RATES, client, [pairAddress], blocks, 100)\r\n\r\n    // format token ETH price results\r\n    let values = []\r\n    for (var row in result) {\r\n      let timestamp = row.split('t')[1]\r\n      if (timestamp) {\r\n        values.push({\r\n          timestamp,\r\n          rate0: parseFloat(result[row]?.token0Price),\r\n          rate1: parseFloat(result[row]?.token1Price),\r\n        })\r\n      }\r\n    }\r\n\r\n    let formattedHistoryRate0 = []\r\n    let formattedHistoryRate1 = []\r\n\r\n    // for each hour, construct the open and close price\r\n    for (let i = 0; i < values.length - 1; i++) {\r\n      formattedHistoryRate0.push({\r\n        timestamp: values[i].timestamp,\r\n        open: parseFloat(values[i].rate0),\r\n        close: parseFloat(values[i + 1].rate0),\r\n      })\r\n      formattedHistoryRate1.push({\r\n        timestamp: values[i].timestamp,\r\n        open: parseFloat(values[i].rate1),\r\n        close: parseFloat(values[i + 1].rate1),\r\n      })\r\n    }\r\n\r\n    return [formattedHistoryRate0, formattedHistoryRate1]\r\n  } catch (e) {\r\n    console.log(e)\r\n    return [[], []]\r\n  }\r\n}\r\n\r\nexport function Updater() {\r\n  const [, { updateTopPairs }] = usePairDataContext()\r\n  const [ethPrice] = useEthPrice()\r\n  useEffect(() => {\r\n    async function getData() {\r\n      // get top pairs by reserves\r\n      let {\r\n        data: { pairs },\r\n      } = await client.query({\r\n        query: PAIRS_CURRENT,\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n\r\n      // format as array of addresses\r\n      const formattedPairs = pairs.map((pair) => {\r\n        return pair.id\r\n      })\r\n\r\n      // get data for every pair in list\r\n      let topPairs = await getBulkPairData(formattedPairs, ethPrice)\r\n      topPairs && updateTopPairs(topPairs)\r\n    }\r\n    ethPrice && getData()\r\n  }, [ethPrice, updateTopPairs])\r\n  return null\r\n}\r\n\r\nexport function useHourlyRateData(pairAddress, timeWindow) {\r\n  const [state, { updateHourlyData }] = usePairDataContext()\r\n  const chartData = state?.[pairAddress]?.hourlyData?.[timeWindow]\r\n  const [latestBlock] = useLatestBlocks()\r\n\r\n  useEffect(() => {\r\n    const currentTime = dayjs.utc()\r\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\r\n    const startTime =\r\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\r\n\r\n    async function fetch() {\r\n      let data = await getHourlyRateData(pairAddress, startTime, latestBlock)\r\n      updateHourlyData(pairAddress, data, timeWindow)\r\n    }\r\n    if (!chartData) {\r\n      fetch()\r\n    }\r\n  }, [chartData, timeWindow, pairAddress, updateHourlyData, latestBlock])\r\n\r\n  return chartData\r\n}\r\n\r\n/**\r\n * @todo\r\n * store these updates to reduce future redundant calls\r\n */\r\nexport function useDataForList(pairList) {\r\n  const [state] = usePairDataContext()\r\n  const [ethPrice] = useEthPrice()\r\n\r\n  const [stale, setStale] = useState(false)\r\n  const [fetched, setFetched] = useState([])\r\n\r\n  // reset\r\n  useEffect(() => {\r\n    if (pairList) {\r\n      setStale(false)\r\n      setFetched()\r\n    }\r\n  }, [pairList])\r\n\r\n  useEffect(() => {\r\n    async function fetchNewPairData() {\r\n      let newFetched = []\r\n      let unfetched = []\r\n\r\n      pairList.map(async (pair) => {\r\n        let currentData = state?.[pair.id]\r\n        if (!currentData) {\r\n          unfetched.push(pair.id)\r\n        } else {\r\n          newFetched.push(currentData)\r\n        }\r\n      })\r\n\r\n      let newPairData = await getBulkPairData(\r\n        unfetched.map((pair) => {\r\n          return pair\r\n        }),\r\n        ethPrice\r\n      )\r\n      setFetched(newFetched.concat(newPairData))\r\n    }\r\n    if (ethPrice && pairList && pairList.length > 0 && !fetched && !stale) {\r\n      setStale(true)\r\n      fetchNewPairData()\r\n    }\r\n  }, [ethPrice, state, pairList, stale, fetched])\r\n\r\n  let formattedFetch =\r\n    fetched &&\r\n    fetched.reduce((obj, cur) => {\r\n      return { ...obj, [cur?.id]: cur }\r\n    }, {})\r\n\r\n  return formattedFetch\r\n}\r\n\r\n/**\r\n * Get all the current and 24hr changes for a pair\r\n */\r\nexport function usePairData(pairAddress) {\r\n  const [state, { update }] = usePairDataContext()\r\n  const [ethPrice] = useEthPrice()\r\n  const pairData = state?.[pairAddress]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!pairData && pairAddress) {\r\n        let data = await getBulkPairData([pairAddress], ethPrice)\r\n        data && update(pairAddress, data[0])\r\n      }\r\n    }\r\n    if (!pairData && pairAddress && ethPrice && isAddress(pairAddress)) {\r\n      fetchData()\r\n    }\r\n  }, [pairAddress, pairData, update, ethPrice])\r\n\r\n  return pairData || {}\r\n}\r\n\r\n/**\r\n * Get most recent txns for a pair\r\n */\r\nexport function usePairTransactions(pairAddress) {\r\n  const [state, { updatePairTxns }] = usePairDataContext()\r\n  const pairTxns = state?.[pairAddress]?.txns\r\n  useEffect(() => {\r\n    async function checkForTxns() {\r\n      if (!pairTxns) {\r\n        let transactions = await getPairTransactions(pairAddress)\r\n        updatePairTxns(pairAddress, transactions)\r\n      }\r\n    }\r\n    checkForTxns()\r\n  }, [pairTxns, pairAddress, updatePairTxns])\r\n  return pairTxns\r\n}\r\n\r\nexport function usePairChartData(pairAddress) {\r\n  const [state, { updateChartData }] = usePairDataContext()\r\n  const chartData = state?.[pairAddress]?.chartData\r\n\r\n  useEffect(() => {\r\n    async function checkForChartData() {\r\n      if (!chartData) {\r\n        let data = await getPairChartData(pairAddress)\r\n        updateChartData(pairAddress, data)\r\n      }\r\n    }\r\n    checkForChartData()\r\n  }, [chartData, pairAddress, updateChartData])\r\n  return chartData\r\n}\r\n\r\n/**\r\n * Get list of all pairs in VAREN\r\n */\r\nexport function useAllPairData() {\r\n  const [state] = usePairDataContext()\r\n  return state || {}\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\r\nimport { client } from '../apollo/client'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { useTimeframe } from './Application'\r\nimport {\r\n  getPercentChange,\r\n  getBlockFromTimestamp,\r\n  getBlocksFromTimestamps,\r\n  get2DayPercentChange,\r\n  getTimeframe,\r\n} from '../utils'\r\nimport {\r\n  GLOBAL_DATA,\r\n  GLOBAL_TXNS,\r\n  GLOBAL_CHART,\r\n  ETH_PRICE,\r\n  LINK_PRICE,\r\n  YFL_PRICE,\r\n  SYFL_PRICE,\r\n  YFLUSD_PRICE,\r\n  ALL_PAIRS,\r\n  ALL_TOKENS,\r\n  TOP_LPS_PER_PAIRS,\r\n} from '../apollo/queries'\r\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\r\nimport { useAllPairData } from './PairData'\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_TXNS = 'UPDATE_TXNS'\r\nconst UPDATE_CHART = 'UPDATE_CHART'\r\nconst UPDATE_ETH_PRICE = 'UPDATE_ETH_PRICE'\r\nconst UPDATE_LINK_PRICE = 'UPDATE_LINK_PRICE'\r\nconst UPDATE_SYFL_PRICE = 'UPDATE_SYFL_PRICE'\r\nconst UPDATE_YFL_PRICE = 'UPDATE_YFL_PRICE'\r\nconst UPDATE_YFLUSD_PRICE = 'UPDATE_YFLUSD_PRICE'\r\nconst ETH_PRICE_KEY = 'ETH_PRICE_KEY'\r\nconst LINK_PRICE_KEY = 'LINK_PRICE_KEY'\r\nconst YFL_PRICE_KEY = 'YFL_PRICE_KEY'\r\nconst SYFL_PRICE_KEY = 'SYFL_PRICE_KEY'\r\nconst YFLUSD_PRICE_KEY = 'YFLUSD_PRICE_KEY'\r\nconst UPDATE_ALL_PAIRS_IN_VAREN = 'UPDAUPDATE_ALL_PAIRS_IN_VARENTE_TOP_PAIRS'\r\nconst UPDATE_ALL_TOKENS_IN_VAREN = 'UPDATE_ALL_TOKENS_IN_VAREN'\r\nconst UPDATE_TOP_LPS = 'UPDATE_TOP_LPS'\r\n\r\n// format dayjs with the libraries that we need\r\ndayjs.extend(utc)\r\ndayjs.extend(weekOfYear)\r\n\r\nconst GlobalDataContext = createContext()\r\n\r\nfunction useGlobalDataContext() {\r\n  return useContext(GlobalDataContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { data } = payload\r\n      return {\r\n        ...state,\r\n        globalData: data,\r\n      }\r\n    }\r\n    case UPDATE_TXNS: {\r\n      const { transactions } = payload\r\n      return {\r\n        ...state,\r\n        transactions,\r\n      }\r\n    }\r\n    case UPDATE_CHART: {\r\n      const { daily, weekly } = payload\r\n      return {\r\n        ...state,\r\n        chartData: {\r\n          daily,\r\n          weekly,\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_ETH_PRICE: {\r\n      const { ethPrice, ethOneDayPrice, ethPriceChange } = payload\r\n      return {\r\n        ...state,\r\n        [ETH_PRICE_KEY]: ethPrice,\r\n        ethOneDayPrice,\r\n        ethPriceChange,\r\n      }\r\n    }\r\n\r\n    case UPDATE_LINK_PRICE: {\r\n      const { linkPrice, linkOneDayPrice, linkPriceChange } = payload\r\n      return {\r\n        ...state,\r\n        [LINK_PRICE_KEY]: linkPrice,\r\n        linkOneDayPrice,\r\n        linkPriceChange,\r\n      }\r\n    }\r\n\r\n    case UPDATE_YFL_PRICE: {\r\n      const { yflPrice, yflOneDayPrice, yflPriceChange } = payload\r\n      return {\r\n        ...state,\r\n        [YFL_PRICE_KEY]: yflPrice,\r\n        yflOneDayPrice,\r\n        yflPriceChange,\r\n      }\r\n    }\r\n\r\n    case UPDATE_SYFL_PRICE: {\r\n      const { syflPrice, syflOneDayPrice, syflPriceChange } = payload\r\n      return {\r\n        ...state,\r\n        [SYFL_PRICE_KEY]: syflPrice,\r\n        syflOneDayPrice,\r\n        syflPriceChange,\r\n      }\r\n    }\r\n\r\n    case UPDATE_YFLUSD_PRICE: {\r\n      const { yflusdPrice, yflusdOneDayPrice, yflusdPriceChange } = payload\r\n      return {\r\n        ...state,\r\n        [YFLUSD_PRICE_KEY]: yflusdPrice,\r\n        yflusdOneDayPrice,\r\n        yflusdPriceChange,\r\n      }\r\n    }\r\n\r\n    case UPDATE_ALL_PAIRS_IN_VAREN: {\r\n      const { allPairs } = payload\r\n      return {\r\n        ...state,\r\n        allPairs,\r\n      }\r\n    }\r\n\r\n    case UPDATE_ALL_TOKENS_IN_VAREN: {\r\n      const { allTokens } = payload\r\n      return {\r\n        ...state,\r\n        allTokens,\r\n      }\r\n    }\r\n\r\n    case UPDATE_TOP_LPS: {\r\n      const { topLps } = payload\r\n      return {\r\n        ...state,\r\n        topLps,\r\n      }\r\n    }\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {})\r\n  const update = useCallback((data) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTransactions = useCallback((transactions) => {\r\n    dispatch({\r\n      type: UPDATE_TXNS,\r\n      payload: {\r\n        transactions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateChart = useCallback((daily, weekly) => {\r\n    dispatch({\r\n      type: UPDATE_CHART,\r\n      payload: {\r\n        daily,\r\n        weekly,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateEthPrice = useCallback((ethPrice, ethOneDayPrice, ethPriceChange) => {\r\n    dispatch({\r\n      type: UPDATE_ETH_PRICE,\r\n      payload: {\r\n        ethPrice,\r\n        ethOneDayPrice,\r\n        ethPriceChange,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateLinkPrice = useCallback((linkPrice, linkOneDayPrice, linkPriceChange) => {\r\n    dispatch({\r\n      type: UPDATE_LINK_PRICE,\r\n      payload: {\r\n        linkPrice,\r\n        linkOneDayPrice,\r\n        linkPriceChange,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateYflPrice = useCallback((yflPrice, yflOneDayPrice, yflPriceChange) => {\r\n    dispatch({\r\n      type: UPDATE_YFL_PRICE,\r\n      payload: {\r\n        yflPrice,\r\n        yflOneDayPrice,\r\n        yflPriceChange,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateSYflPrice = useCallback((syflPrice, syflOneDayPrice, syflPriceChange) => {\r\n    dispatch({\r\n      type: UPDATE_SYFL_PRICE,\r\n      payload: {\r\n        syflPrice,\r\n        syflOneDayPrice,\r\n        syflPriceChange,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateYflusdPrice = useCallback((yflusdPrice, yflusdOneDayPrice, yflusdPriceChange) => {\r\n    dispatch({\r\n      type: UPDATE_YFLUSD_PRICE,\r\n      payload: {\r\n        yflusdPrice,\r\n        yflusdOneDayPrice,\r\n        yflusdPriceChange,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateAllPairsInDarkHorse = useCallback((allPairs) => {\r\n    dispatch({\r\n      type: UPDATE_ALL_PAIRS_IN_VAREN,\r\n      payload: {\r\n        allPairs,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateAllTokensInDarkHorse = useCallback((allTokens) => {\r\n    dispatch({\r\n      type: UPDATE_ALL_TOKENS_IN_VAREN,\r\n      payload: {\r\n        allTokens,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTopLps = useCallback((topLps) => {\r\n    dispatch({\r\n      type: UPDATE_TOP_LPS,\r\n      payload: {\r\n        topLps,\r\n      },\r\n    })\r\n  }, [])\r\n  return (\r\n    <GlobalDataContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updateTransactions,\r\n            updateChart,\r\n            updateEthPrice,\r\n            updateLinkPrice,\r\n            updateYflPrice,\r\n            updateSYflPrice,\r\n            updateYflusdPrice,\r\n            updateTopLps,\r\n            updateAllPairsInDarkHorse,\r\n            updateAllTokensInDarkHorse,\r\n          },\r\n        ],\r\n        [\r\n          state,\r\n          update,\r\n          updateTransactions,\r\n          updateTopLps,\r\n          updateChart,\r\n          updateEthPrice,\r\n          updateLinkPrice,\r\n          updateYflPrice,\r\n          updateSYflPrice,\r\n          updateYflusdPrice,\r\n          updateAllPairsInDarkHorse,\r\n          updateAllTokensInDarkHorse,\r\n        ]\r\n      )}\r\n    >\r\n      {children}\r\n    </GlobalDataContext.Provider>\r\n  )\r\n}\r\n\r\n/**\r\n * Gets all the global data for the overview page.\r\n * Needs current eth price and the old eth price to get\r\n * 24 hour USD changes.\r\n * @param {*} ethPrice\r\n * @param {*} oldEthPrice\r\n */\r\nasync function getGlobalData(ethPrice, oldEthPrice) {\r\n  // data for each day , historic data used for % changes\r\n  let data = {}\r\n  let oneDayData = {}\r\n  let twoDayData = {}\r\n\r\n  try {\r\n    // get timestamps for the days\r\n    const utcCurrentTime = dayjs()\r\n    const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\r\n    const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\r\n    const utcOneWeekBack = utcCurrentTime.subtract(1, 'week').unix()\r\n    const utcTwoWeeksBack = utcCurrentTime.subtract(2, 'week').unix()\r\n\r\n    // get the blocks needed for time travel queries\r\n    let [oneDayBlock, twoDayBlock, oneWeekBlock, twoWeekBlock] = await getBlocksFromTimestamps([\r\n      utcOneDayBack,\r\n      utcTwoDaysBack,\r\n      utcOneWeekBack,\r\n      utcTwoWeeksBack,\r\n    ])\r\n\r\n    // fetch the global data\r\n    let result = await client.query({\r\n      query: GLOBAL_DATA(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    data = result.data.linkswapFactories[0]\r\n\r\n    // fetch the historical data\r\n    let oneDayResult = await client.query({\r\n      query: GLOBAL_DATA(oneDayBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    oneDayData = oneDayResult.data.linkswapFactories[0]\r\n\r\n    let twoDayResult = await client.query({\r\n      query: GLOBAL_DATA(twoDayBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    twoDayData = twoDayResult.data.linkswapFactories[0]\r\n\r\n    let oneWeekResult = await client.query({\r\n      query: GLOBAL_DATA(oneWeekBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const oneWeekData = oneWeekResult.data.linkswapFactories[0]\r\n\r\n    let twoWeekResult = await client.query({\r\n      query: GLOBAL_DATA(twoWeekBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const twoWeekData = twoWeekResult.data.linkswapFactories[0]\r\n\r\n    if (data && oneDayData && twoDayData && twoWeekData) {\r\n      let [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n        data.totalVolumeUSD,\r\n        oneDayData.totalVolumeUSD ? oneDayData.totalVolumeUSD : 0,\r\n        twoDayData.totalVolumeUSD ? twoDayData.totalVolumeUSD : 0\r\n      )\r\n\r\n      const [oneWeekVolume, weeklyVolumeChange] = get2DayPercentChange(\r\n        data.totalVolumeUSD,\r\n        oneWeekData.totalVolumeUSD,\r\n        twoWeekData.totalVolumeUSD\r\n      )\r\n\r\n      const [oneDayTxns, txnChange] = get2DayPercentChange(\r\n        data.txCount,\r\n        oneDayData.txCount ? oneDayData.txCount : 0,\r\n        twoDayData.txCount ? twoDayData.txCount : 0\r\n      )\r\n\r\n      // format the total liquidity in USD\r\n      data.totalLiquidityUSD = data.totalLiquidityETH * ethPrice\r\n      const liquidityChangeUSD = getPercentChange(\r\n        data.totalLiquidityETH * ethPrice,\r\n        oneDayData.totalLiquidityETH * oldEthPrice\r\n      )\r\n\r\n      // add relevant fields with the calculated amounts\r\n      data.oneDayVolumeUSD = oneDayVolumeUSD\r\n      data.oneWeekVolume = oneWeekVolume\r\n      data.weeklyVolumeChange = weeklyVolumeChange\r\n      data.volumeChangeUSD = volumeChangeUSD\r\n      data.liquidityChangeUSD = liquidityChangeUSD\r\n      data.oneDayTxns = oneDayTxns\r\n      data.txnChange = txnChange\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return data\r\n}\r\n\r\n/**\r\n * Get historical data for volume and liquidity used in global charts\r\n * on main page\r\n * @param {*} oldestDateToFetch // start of window to fetch from\r\n */\r\nconst getChartData = async (oldestDateToFetch) => {\r\n  let data = []\r\n  let weeklyData = []\r\n  const utcEndTime = dayjs.utc()\r\n  let skip = 0\r\n  let allFound = false\r\n\r\n  try {\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: GLOBAL_CHART,\r\n        variables: {\r\n          startTime: oldestDateToFetch,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      skip += 1000\r\n      data = data.concat(result.data.linkswapDayDatas)\r\n      if (result.data.linkswapDayDatas.length < 1000) {\r\n        allFound = true\r\n      }\r\n    }\r\n\r\n    if (data) {\r\n      let dayIndexSet = new Set()\r\n      let dayIndexArray = []\r\n      const oneDay = 24 * 60 * 60\r\n\r\n      // for each day, parse the daily volume and format for chart array\r\n      data.forEach((dayData, i) => {\r\n        // add the day index to the set of days\r\n        dayIndexSet.add((data[i].date / oneDay).toFixed(0))\r\n        dayIndexArray.push(data[i])\r\n        dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\r\n      })\r\n\r\n      // fill in empty days ( there will be no day datas if no trades made that day )\r\n      let timestamp = data[0].date ? data[0].date : oldestDateToFetch\r\n      let latestLiquidityUSD = data[0].totalLiquidityUSD\r\n      let latestDayDats = data[0].mostLiquidTokens\r\n      let index = 1\r\n      while (timestamp < utcEndTime.unix() - oneDay) {\r\n        const nextDay = timestamp + oneDay\r\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\r\n        if (!dayIndexSet.has(currentDayIndex)) {\r\n          data.push({\r\n            date: nextDay,\r\n            dailyVolumeUSD: 0,\r\n            totalLiquidityUSD: latestLiquidityUSD,\r\n            mostLiquidTokens: latestDayDats,\r\n          })\r\n        } else {\r\n          latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\r\n          latestDayDats = dayIndexArray[index].mostLiquidTokens\r\n          index = index + 1\r\n        }\r\n        timestamp = nextDay\r\n      }\r\n    }\r\n\r\n    // format weekly data for weekly sized chunks\r\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\r\n    let startIndexWeekly = -1\r\n    let currentWeek = -1\r\n    data.forEach((entry, i) => {\r\n      const week = dayjs.utc(dayjs.unix(data[i].date)).week()\r\n      if (week !== currentWeek) {\r\n        currentWeek = week\r\n        startIndexWeekly++\r\n      }\r\n      weeklyData[startIndexWeekly] = weeklyData[startIndexWeekly] || {}\r\n      weeklyData[startIndexWeekly].date = data[i].date\r\n      weeklyData[startIndexWeekly].weeklyVolumeUSD =\r\n        (weeklyData[startIndexWeekly].weeklyVolumeUSD ?? 0) + data[i].dailyVolumeUSD\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return [data, weeklyData]\r\n}\r\n\r\n/**\r\n * Get and format transactions for global page\r\n */\r\nconst getGlobalTransactions = async () => {\r\n  let transactions = {}\r\n\r\n  try {\r\n    let result = await client.query({\r\n      query: GLOBAL_TXNS,\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    transactions.mints = []\r\n    transactions.burns = []\r\n    transactions.swaps = []\r\n    result?.data?.transactions &&\r\n      result.data.transactions.map((transaction) => {\r\n        if (transaction.mints.length > 0) {\r\n          transaction.mints.map((mint) => {\r\n            return transactions.mints.push(mint)\r\n          })\r\n        }\r\n        if (transaction.burns.length > 0) {\r\n          transaction.burns.map((burn) => {\r\n            return transactions.burns.push(burn)\r\n          })\r\n        }\r\n        if (transaction.swaps.length > 0) {\r\n          transaction.swaps.map((swap) => {\r\n            return transactions.swaps.push(swap)\r\n          })\r\n        }\r\n        return true\r\n      })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return transactions\r\n}\r\n\r\n/**\r\n * Gets the current price  of ETH, 24 hour price, and % change between them\r\n */\r\nconst getEthPrice = async () => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n\r\n  let ethPrice = 0\r\n  let ethPriceOneDay = 0\r\n  let priceChangeETH = 0\r\n\r\n  try {\r\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n    let result = await client.query({\r\n      query: ETH_PRICE(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    let resultOneDay = await client.query({\r\n      query: ETH_PRICE(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const currentPrice = result?.data?.bundles[0]?.ethPrice\r\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.ethPrice\r\n    priceChangeETH = getPercentChange(currentPrice, oneDayBackPrice)\r\n    ethPrice = currentPrice\r\n    ethPriceOneDay = oneDayBackPrice\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return [ethPrice, ethPriceOneDay, priceChangeETH]\r\n}\r\n\r\n/**\r\n * Gets the current price  of LINK, 24 hour price, and % change between them\r\n */\r\nconst getLinkPrice = async () => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n\r\n  let linkPrice = 0\r\n  let linkPriceOneDay = 0\r\n  let priceChangeLINK = 0\r\n\r\n  try {\r\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n    let result = await client.query({\r\n      query: LINK_PRICE(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    let resultOneDay = await client.query({\r\n      query: LINK_PRICE(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const currentPrice = result?.data?.bundles[0]?.linkPrice\r\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.linkPrice\r\n    priceChangeLINK = getPercentChange(currentPrice, oneDayBackPrice)\r\n    linkPrice = currentPrice\r\n    linkPriceOneDay = oneDayBackPrice\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return [linkPrice, linkPriceOneDay, priceChangeLINK]\r\n}\r\n\r\n/**\r\n * Gets the current price  of YFL, 24 hour price, and % change between them\r\n */\r\nconst getYflPrice = async () => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n\r\n  let yflPrice = 0\r\n  let yflPriceOneDay = 0\r\n  let priceChangeYFL = 0\r\n\r\n  try {\r\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n    let result = await client.query({\r\n      query: YFL_PRICE(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    let resultOneDay = await client.query({\r\n      query: YFL_PRICE(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const currentPrice = result?.data?.bundles[0]?.yflPrice\r\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.yflPrice\r\n    priceChangeYFL = getPercentChange(currentPrice, oneDayBackPrice)\r\n    yflPrice = currentPrice\r\n    yflPriceOneDay = oneDayBackPrice\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return [yflPrice, yflPriceOneDay, priceChangeYFL]\r\n}\r\n\r\n/**\r\n * Gets the current price  of sYFL, 24 hour price, and % change between them\r\n */\r\nconst getSYflPrice = async () => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n\r\n  let syflPrice = 0\r\n  let syflPriceOneDay = 0\r\n  let priceChangeSYFL = 0\r\n\r\n  try {\r\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n    let result = await client.query({\r\n      query: SYFL_PRICE(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    let resultOneDay = await client.query({\r\n      query: SYFL_PRICE(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const currentPrice = result?.data?.bundles[0]?.syflPrice\r\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.syflPrice\r\n    priceChangeSYFL = getPercentChange(currentPrice, oneDayBackPrice)\r\n    syflPrice = currentPrice\r\n    syflPriceOneDay = oneDayBackPrice\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return [syflPrice, syflPriceOneDay, priceChangeSYFL]\r\n}\r\n\r\n/**\r\n * Gets the current price  of YFLUSD, 24 hour price, and % change between them\r\n */\r\nconst getYflusdPrice = async () => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n\r\n  let yflusdPrice = 0\r\n  let yflusdPriceOneDay = 0\r\n  let priceChangeYFLUSD = 0\r\n\r\n  try {\r\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n    let result = await client.query({\r\n      query: YFLUSD_PRICE(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    let resultOneDay = await client.query({\r\n      query: YFLUSD_PRICE(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const currentPrice = result?.data?.bundles[0]?.yflusdPrice\r\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.yflusdPrice\r\n    priceChangeYFLUSD = getPercentChange(currentPrice, oneDayBackPrice)\r\n    yflusdPrice = currentPrice\r\n    yflusdPriceOneDay = oneDayBackPrice\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return [yflusdPrice, yflusdPriceOneDay, priceChangeYFLUSD]\r\n}\r\n\r\nconst PAIRS_TO_FETCH = 500\r\nconst TOKENS_TO_FETCH = 500\r\n\r\n/**\r\n * Loop through every pair on varen, used for search\r\n */\r\nasync function getAllPairsOnDarkHorse() {\r\n  try {\r\n    let allFound = false\r\n    let pairs = []\r\n    let skipCount = 0\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: ALL_PAIRS,\r\n        variables: {\r\n          skip: skipCount,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      skipCount = skipCount + PAIRS_TO_FETCH\r\n      pairs = pairs.concat(result?.data?.pairs)\r\n      if (result?.data?.pairs.length < PAIRS_TO_FETCH || pairs.length > PAIRS_TO_FETCH) {\r\n        allFound = true\r\n      }\r\n    }\r\n    return pairs\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n/**\r\n * Loop through every token on varen, used for search\r\n */\r\nasync function getAllTokensOnDarkHorse() {\r\n  try {\r\n    let allFound = false\r\n    let skipCount = 0\r\n    let tokens = []\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: ALL_TOKENS,\r\n        variables: {\r\n          skip: skipCount,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      tokens = tokens.concat(result?.data?.tokens)\r\n      if (result?.data?.tokens?.length < TOKENS_TO_FETCH || tokens.length > TOKENS_TO_FETCH) {\r\n        allFound = true\r\n      }\r\n      skipCount = skipCount += TOKENS_TO_FETCH\r\n    }\r\n    return tokens\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n/**\r\n * Hook that fetches overview data, plus all tokens and pairs for search\r\n */\r\nexport function useGlobalData() {\r\n  const [state, { update, updateAllPairsInDarkHorse, updateAllTokensInDarkHorse }] = useGlobalDataContext()\r\n  const [ethPrice, oldEthPrice] = useEthPrice()\r\n\r\n  const data = state?.globalData\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let globalData = await getGlobalData(ethPrice, oldEthPrice)\r\n      globalData && update(globalData)\r\n\r\n      let allPairs = await getAllPairsOnDarkHorse()\r\n      updateAllPairsInDarkHorse(allPairs)\r\n\r\n      let allTokens = await getAllTokensOnDarkHorse()\r\n      updateAllTokensInDarkHorse(allTokens)\r\n    }\r\n    if (!data && ethPrice && oldEthPrice) {\r\n      fetchData()\r\n    }\r\n  }, [ethPrice, oldEthPrice, update, data, updateAllPairsInDarkHorse, updateAllTokensInDarkHorse])\r\n\r\n  return data || {}\r\n}\r\n\r\nexport function useGlobalChartData() {\r\n  const [state, { updateChart }] = useGlobalDataContext()\r\n  const [oldestDateFetch, setOldestDateFetched] = useState()\r\n  const [activeWindow] = useTimeframe()\r\n\r\n  const chartDataDaily = state?.chartData?.daily\r\n  const chartDataWeekly = state?.chartData?.weekly\r\n\r\n  /**\r\n   * Keep track of oldest date fetched. Used to\r\n   * limit data fetched until its actually needed.\r\n   * (dont fetch year long stuff unless year option selected)\r\n   */\r\n  useEffect(() => {\r\n    // based on window, get starttime\r\n    let startTime = getTimeframe(activeWindow)\r\n\r\n    if ((activeWindow && startTime < oldestDateFetch) || !oldestDateFetch) {\r\n      setOldestDateFetched(startTime)\r\n    }\r\n  }, [activeWindow, oldestDateFetch])\r\n\r\n  /**\r\n   * Fetch data if none fetched or older data is needed\r\n   */\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // historical stuff for chart\r\n      let [newChartData, newWeeklyData] = await getChartData(oldestDateFetch)\r\n      updateChart(newChartData, newWeeklyData)\r\n    }\r\n    if (oldestDateFetch && !(chartDataDaily && chartDataWeekly)) {\r\n      fetchData()\r\n    }\r\n  }, [chartDataDaily, chartDataWeekly, oldestDateFetch, updateChart])\r\n\r\n  return [chartDataDaily, chartDataWeekly]\r\n}\r\n\r\nexport function useGlobalTransactions() {\r\n  const [state, { updateTransactions }] = useGlobalDataContext()\r\n  const transactions = state?.transactions\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!transactions) {\r\n        let txns = await getGlobalTransactions()\r\n        updateTransactions(txns)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [updateTransactions, transactions])\r\n  return transactions\r\n}\r\n\r\nexport function useEthPrice() {\r\n  const [state, { updateEthPrice }] = useGlobalDataContext()\r\n  const ethPrice = state?.[ETH_PRICE_KEY]\r\n  const ethPriceOld = state?.['ethOneDayPrice']\r\n  useEffect(() => {\r\n    async function checkForEthPrice() {\r\n      if (!ethPrice) {\r\n        let [newPrice, oneDayPrice, priceChange] = await getEthPrice()\r\n        updateEthPrice(newPrice, oneDayPrice, priceChange)\r\n      }\r\n    }\r\n    checkForEthPrice()\r\n  }, [ethPrice, updateEthPrice])\r\n\r\n  return [ethPrice, ethPriceOld]\r\n}\r\n\r\nexport function useLinkPrice() {\r\n  const [state, { updateLinkPrice }] = useGlobalDataContext()\r\n  const linkPrice = state?.[LINK_PRICE_KEY]\r\n  const linkPriceOld = state?.['linkOneDayPrice']\r\n  useEffect(() => {\r\n    async function checkForLinkPrice() {\r\n      if (!linkPrice) {\r\n        let [newPrice, oneDayPrice, priceChange] = await getLinkPrice()\r\n        updateLinkPrice(newPrice, oneDayPrice, priceChange)\r\n      }\r\n    }\r\n    checkForLinkPrice()\r\n  }, [linkPrice, updateLinkPrice])\r\n\r\n  return [linkPrice, linkPriceOld]\r\n}\r\n\r\nexport function useYflPrice() {\r\n  const [state, { updateYflPrice }] = useGlobalDataContext()\r\n  const yflPrice = state?.[YFL_PRICE_KEY]\r\n  const yflPriceOld = state?.['yflOneDayPrice']\r\n  useEffect(() => {\r\n    async function checkForYflPrice() {\r\n      if (!yflPrice) {\r\n        let [newPrice, oneDayPrice, priceChange] = await getYflPrice()\r\n        updateYflPrice(newPrice, oneDayPrice, priceChange)\r\n      }\r\n    }\r\n    checkForYflPrice()\r\n  }, [yflPrice, updateYflPrice])\r\n\r\n  return [yflPrice, yflPriceOld]\r\n}\r\n\r\nexport function useSYflPrice() {\r\n  const [state, { updateSYflPrice }] = useGlobalDataContext()\r\n  const syflPrice = state?.[SYFL_PRICE_KEY]\r\n  const syflPriceOld = state?.['syflOneDayPrice']\r\n  useEffect(() => {\r\n    async function checkForSYflPrice() {\r\n      if (!syflPrice) {\r\n        let [newPrice, oneDayPrice, priceChange] = await getSYflPrice()\r\n        updateSYflPrice(newPrice, oneDayPrice, priceChange)\r\n      }\r\n    }\r\n    checkForSYflPrice()\r\n  }, [syflPrice, updateSYflPrice])\r\n\r\n  return [syflPrice, syflPriceOld]\r\n}\r\n\r\nexport function useYflusdPrice() {\r\n  const [state, { updateYflusdPrice }] = useGlobalDataContext()\r\n  const yflusdPrice = state?.[YFLUSD_PRICE_KEY]\r\n  const yflusdPriceOld = state?.['yflusdOneDayPrice']\r\n  useEffect(() => {\r\n    async function checkForYflusdPrice() {\r\n      if (!yflusdPrice) {\r\n        let [newPrice, oneDayPrice, priceChange] = await getYflusdPrice()\r\n        updateYflusdPrice(newPrice, oneDayPrice, priceChange)\r\n      }\r\n    }\r\n    checkForYflusdPrice()\r\n  }, [yflusdPrice, updateYflusdPrice])\r\n\r\n  return [yflusdPrice, yflusdPriceOld]\r\n}\r\n\r\nexport function useAllPairsInDarkHorse() {\r\n  const [state] = useGlobalDataContext()\r\n  let allPairs = state?.allPairs\r\n\r\n  return allPairs || []\r\n}\r\n\r\nexport function useAllTokensInDarkHorse() {\r\n  const [state] = useGlobalDataContext()\r\n  let allTokens = state?.allTokens\r\n\r\n  return allTokens || []\r\n}\r\n\r\n/**\r\n * Get the top liquidity positions based on USD size\r\n * @TODO Not a perfect lookup needs improvement\r\n */\r\nexport function useTopLps() {\r\n  const [state, { updateTopLps }] = useGlobalDataContext()\r\n  let topLps = state?.topLps\r\n\r\n  const allPairs = useAllPairData()\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // get top 20 by reserves\r\n      let topPairs = Object.keys(allPairs)\r\n        ?.sort((a, b) => parseFloat(allPairs[a].reserveUSD > allPairs[b].reserveUSD ? -1 : 1))\r\n        ?.slice(0, 99)\r\n        .map((pair) => pair)\r\n\r\n      let topLpLists = await Promise.all(\r\n        topPairs.map(async (pair) => {\r\n          // for each one, fetch top LPs\r\n          try {\r\n            const { data: results } = await client.query({\r\n              query: TOP_LPS_PER_PAIRS,\r\n              variables: {\r\n                pair: pair.toString(),\r\n              },\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            if (results) {\r\n              return results.liquidityPositions\r\n            }\r\n          } catch (e) { }\r\n        })\r\n      )\r\n\r\n      // get the top lps from the results formatted\r\n      const topLps = []\r\n      topLpLists\r\n        .filter((i) => !!i) // check for ones not fetched correctly\r\n        .map((list) => {\r\n          return list.map((entry) => {\r\n            const pairData = allPairs[entry.pair.id]\r\n            return topLps.push({\r\n              user: entry.user,\r\n              pairName: pairData.token0.symbol + '-' + pairData.token1.symbol,\r\n              pairAddress: entry.pair.id,\r\n              token0: pairData.token0.id,\r\n              token1: pairData.token1.id,\r\n              usd:\r\n                (parseFloat(entry.liquidityTokenBalance) / parseFloat(pairData.totalSupply)) *\r\n                parseFloat(pairData.reserveUSD),\r\n            })\r\n          })\r\n        })\r\n\r\n      const sorted = topLps.sort((a, b) => (a.usd > b.usd ? -1 : 1))\r\n      const shorter = sorted.splice(0, 100)\r\n      updateTopLps(shorter)\r\n    }\r\n\r\n    if (!topLps && allPairs && Object.keys(allPairs).length > 0) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return topLps\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\r\n\r\nimport { client } from '../apollo/client'\r\nimport {\r\n  TOKEN_DATA,\r\n  FILTERED_TRANSACTIONS,\r\n  TOKEN_CHART,\r\n  TOKENS_CURRENT,\r\n  TOKENS_DYNAMIC,\r\n  PRICES_BY_BLOCK,\r\n  PAIR_DATA,\r\n} from '../apollo/queries'\r\n\r\nimport { useEthPrice } from './GlobalData'\r\n\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport {\r\n  get2DayPercentChange,\r\n  getPercentChange,\r\n  getBlockFromTimestamp,\r\n  isAddress,\r\n  getBlocksFromTimestamps,\r\n  splitQuery,\r\n} from '../utils'\r\nimport { timeframeOptions } from '../constants'\r\nimport { useLatestBlocks } from './Application'\r\nimport { updateNameData } from '../utils/data'\r\n\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_TOKEN_TXNS = 'UPDATE_TOKEN_TXNS'\r\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\r\nconst UPDATE_PRICE_DATA = 'UPDATE_PRICE_DATA'\r\nconst UPDATE_TOP_TOKENS = ' UPDATE_TOP_TOKENS'\r\nconst UPDATE_ALL_PAIRS = 'UPDATE_ALL_PAIRS'\r\n\r\nconst TOKEN_PAIRS_KEY = 'TOKEN_PAIRS_KEY'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst TokenDataContext = createContext()\r\n\r\nfunction useTokenDataContext() {\r\n  return useContext(TokenDataContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { tokenAddress, data } = payload\r\n      return {\r\n        ...state,\r\n        [tokenAddress]: {\r\n          ...state?.[tokenAddress],\r\n          ...data,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_TOP_TOKENS: {\r\n      const { topTokens } = payload\r\n      let added = {}\r\n      topTokens &&\r\n        topTokens.map((token) => {\r\n          return (added[token.id] = token)\r\n        })\r\n      return {\r\n        ...state,\r\n        ...added,\r\n      }\r\n    }\r\n\r\n    case UPDATE_TOKEN_TXNS: {\r\n      const { address, transactions } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          txns: transactions,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_CHART_DATA: {\r\n      const { address, chartData } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          chartData,\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_PRICE_DATA: {\r\n      const { address, data, timeWindow, interval } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          [timeWindow]: {\r\n            ...state?.[address]?.[timeWindow],\r\n            [interval]: data,\r\n          },\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_ALL_PAIRS: {\r\n      const { address, allPairs } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          [TOKEN_PAIRS_KEY]: allPairs,\r\n        },\r\n      }\r\n    }\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {})\r\n  const update = useCallback((tokenAddress, data) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        tokenAddress,\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTopTokens = useCallback((topTokens) => {\r\n    dispatch({\r\n      type: UPDATE_TOP_TOKENS,\r\n      payload: {\r\n        topTokens,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTokenTxns = useCallback((address, transactions) => {\r\n    dispatch({\r\n      type: UPDATE_TOKEN_TXNS,\r\n      payload: { address, transactions },\r\n    })\r\n  }, [])\r\n\r\n  const updateChartData = useCallback((address, chartData) => {\r\n    dispatch({\r\n      type: UPDATE_CHART_DATA,\r\n      payload: { address, chartData },\r\n    })\r\n  }, [])\r\n\r\n  const updateAllPairs = useCallback((address, allPairs) => {\r\n    dispatch({\r\n      type: UPDATE_ALL_PAIRS,\r\n      payload: { address, allPairs },\r\n    })\r\n  }, [])\r\n\r\n  const updatePriceData = useCallback((address, data, timeWindow, interval) => {\r\n    dispatch({\r\n      type: UPDATE_PRICE_DATA,\r\n      payload: { address, data, timeWindow, interval },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <TokenDataContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updateTokenTxns,\r\n            updateChartData,\r\n            updateTopTokens,\r\n            updateAllPairs,\r\n            updatePriceData,\r\n          },\r\n        ],\r\n        [state, update, updateTokenTxns, updateChartData, updateTopTokens, updateAllPairs, updatePriceData]\r\n      )}\r\n    >\r\n      {children}\r\n    </TokenDataContext.Provider>\r\n  )\r\n}\r\n\r\nconst getTopTokens = async (ethPrice, ethPriceOld) => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\r\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\r\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\r\n\r\n  try {\r\n    let current = await client.query({\r\n      query: TOKENS_CURRENT,\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let oneDayResult = await client.query({\r\n      query: TOKENS_DYNAMIC(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let twoDayResult = await client.query({\r\n      query: TOKENS_DYNAMIC(twoDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let oneDayData = oneDayResult?.data?.tokens.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let twoDayData = twoDayResult?.data?.tokens.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let bulkResults = await Promise.all(\r\n      current &&\r\n        oneDayData &&\r\n        twoDayData &&\r\n        current?.data?.tokens.map(async (token) => {\r\n          let data = token\r\n\r\n          // let liquidityDataThisToken = liquidityData?.[token.id]\r\n          let oneDayHistory = oneDayData?.[token.id]\r\n          let twoDayHistory = twoDayData?.[token.id]\r\n\r\n          // catch the case where token wasnt in top list in previous days\r\n          if (!oneDayHistory) {\r\n            let oneDayResult = await client.query({\r\n              query: TOKEN_DATA(token.id, oneDayBlock),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            oneDayHistory = oneDayResult.data.tokens[0]\r\n          }\r\n          if (!twoDayHistory) {\r\n            let twoDayResult = await client.query({\r\n              query: TOKEN_DATA(token.id, twoDayBlock),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            twoDayHistory = twoDayResult.data.tokens[0]\r\n          }\r\n\r\n          // calculate percentage changes and daily changes\r\n          const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n            data.tradeVolumeUSD,\r\n            oneDayHistory?.tradeVolumeUSD ?? 0,\r\n            twoDayHistory?.tradeVolumeUSD ?? 0\r\n          )\r\n          const [oneDayTxns, txnChange] = get2DayPercentChange(\r\n            data.txCount,\r\n            oneDayHistory?.txCount ?? 0,\r\n            twoDayHistory?.txCount ?? 0\r\n          )\r\n\r\n          const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\r\n          const oldLiquidityUSD = oneDayHistory?.totalLiquidity * ethPriceOld * oneDayHistory?.derivedETH\r\n\r\n          // percent changes\r\n          const priceChangeUSD = getPercentChange(\r\n            data?.derivedETH * ethPrice,\r\n            oneDayHistory?.derivedETH ? oneDayHistory?.derivedETH * ethPriceOld : 0\r\n          )\r\n\r\n          // set data\r\n          data.priceUSD = data?.derivedETH * ethPrice\r\n          data.totalLiquidityUSD = currentLiquidityUSD\r\n          data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\r\n          data.volumeChangeUSD = volumeChangeUSD\r\n          data.priceChangeUSD = priceChangeUSD\r\n          data.liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\r\n          data.oneDayTxns = oneDayTxns\r\n          data.txnChange = txnChange\r\n\r\n          // new tokens\r\n          if (!oneDayHistory && data) {\r\n            data.oneDayVolumeUSD = data.tradeVolumeUSD\r\n            data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\r\n            data.oneDayTxns = data.txCount\r\n          }\r\n\r\n          // update name data for\r\n          updateNameData({\r\n            token0: data,\r\n          })\r\n\r\n          return data\r\n        })\r\n    )\r\n\r\n    return bulkResults\r\n\r\n    // calculate percentage changes and daily changes\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getTokenData = async (address, ethPrice, ethPriceOld) => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\r\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\r\n\r\n  // initialize data arrays\r\n  let data = {}\r\n  let oneDayData = {}\r\n  let twoDayData = {}\r\n\r\n  try {\r\n    // fetch all current and historical data\r\n    let result = await client.query({\r\n      query: TOKEN_DATA(address),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    data = result?.data?.tokens?.[0]\r\n\r\n    // get results from 24 hours in past\r\n    let oneDayResult = await client.query({\r\n      query: TOKEN_DATA(address, oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    oneDayData = oneDayResult.data.tokens[0]\r\n\r\n    // get results from 48 hours in past\r\n    let twoDayResult = await client.query({\r\n      query: TOKEN_DATA(address, twoDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    twoDayData = twoDayResult.data.tokens[0]\r\n\r\n    // catch the case where token wasnt in top list in previous days\r\n    if (!oneDayData) {\r\n      let oneDayResult = await client.query({\r\n        query: TOKEN_DATA(address, oneDayBlock),\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      oneDayData = oneDayResult.data.tokens[0]\r\n    }\r\n    if (!twoDayData) {\r\n      let twoDayResult = await client.query({\r\n        query: TOKEN_DATA(address, twoDayBlock),\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      twoDayData = twoDayResult.data.tokens[0]\r\n    }\r\n\r\n    // calculate percentage changes and daily changes\r\n    const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n      data.tradeVolumeUSD,\r\n      oneDayData?.tradeVolumeUSD ?? 0,\r\n      twoDayData?.tradeVolumeUSD ?? 0\r\n    )\r\n\r\n    // calculate percentage changes and daily changes\r\n    const [oneDayVolumeUT, volumeChangeUT] = get2DayPercentChange(\r\n      data.untrackedVolumeUSD,\r\n      oneDayData?.untrackedVolumeUSD ?? 0,\r\n      twoDayData?.untrackedVolumeUSD ?? 0\r\n    )\r\n\r\n    // calculate percentage changes and daily changes\r\n    const [oneDayTxns, txnChange] = get2DayPercentChange(\r\n      data.txCount,\r\n      oneDayData?.txCount ?? 0,\r\n      twoDayData?.txCount ?? 0\r\n    )\r\n\r\n    const priceChangeUSD = getPercentChange(\r\n      data?.derivedETH * ethPrice,\r\n      parseFloat(oneDayData?.derivedETH ?? 0) * ethPriceOld\r\n    )\r\n\r\n    const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\r\n    const oldLiquidityUSD = oneDayData?.totalLiquidity * ethPriceOld * oneDayData?.derivedETH\r\n\r\n    // set data\r\n    data.priceUSD = data?.derivedETH * ethPrice\r\n    data.totalLiquidityUSD = currentLiquidityUSD\r\n    data.oneDayVolumeUSD = oneDayVolumeUSD\r\n    data.volumeChangeUSD = volumeChangeUSD\r\n    data.priceChangeUSD = priceChangeUSD\r\n    data.oneDayVolumeUT = oneDayVolumeUT\r\n    data.volumeChangeUT = volumeChangeUT\r\n    const liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\r\n    data.liquidityChangeUSD = liquidityChangeUSD\r\n    data.oneDayTxns = oneDayTxns\r\n    data.txnChange = txnChange\r\n\r\n    // new tokens\r\n    if (!oneDayData && data) {\r\n      data.oneDayVolumeUSD = data.tradeVolumeUSD\r\n      data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\r\n      data.oneDayTxns = data.txCount\r\n    }\r\n\r\n    // update name data for\r\n    updateNameData({\r\n      token0: data,\r\n    })\r\n\r\n    // HOTFIX for Aave\r\n    if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\r\n      const aaveData = await client.query({\r\n        query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      const result = aaveData.data.pairs[0]\r\n      data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\r\n      data.liquidityChangeUSD = 0\r\n      data.priceChangeUSD = 0\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return data\r\n}\r\n\r\nconst getTokenTransactions = async (allPairsFormatted) => {\r\n  const transactions = {}\r\n  try {\r\n    let result = await client.query({\r\n      query: FILTERED_TRANSACTIONS,\r\n      variables: {\r\n        allPairs: allPairsFormatted,\r\n      },\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    transactions.mints = result.data.mints\r\n    transactions.burns = result.data.burns\r\n    transactions.swaps = result.data.swaps\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return transactions\r\n}\r\n\r\nconst getTokenPairs = async (tokenAddress) => {\r\n  try {\r\n    // fetch all current and historical data\r\n    let result = await client.query({\r\n      query: TOKEN_DATA(tokenAddress),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    return result.data?.['pairs0'].concat(result.data?.['pairs1'])\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getIntervalTokenData = async (tokenAddress, startTime, interval = 3600, latestBlock) => {\r\n  const utcEndTime = dayjs.utc()\r\n  let time = startTime\r\n\r\n  // create an array of hour start times until we reach current hour\r\n  // buffer by half hour to catch case where graph isnt synced to latest block\r\n  const timestamps = []\r\n  while (time < utcEndTime.unix()) {\r\n    timestamps.push(time)\r\n    time += interval\r\n  }\r\n\r\n  // backout if invalid timestamp format\r\n  if (timestamps.length === 0) {\r\n    return []\r\n  }\r\n\r\n  // once you have all the timestamps, get the blocks for each timestamp in a bulk query\r\n  let blocks\r\n  try {\r\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\r\n\r\n    // catch failing case\r\n    if (!blocks || blocks.length === 0) {\r\n      return []\r\n    }\r\n\r\n    if (latestBlock) {\r\n      blocks = blocks.filter((b) => {\r\n        return parseFloat(b.number) <= parseFloat(latestBlock)\r\n      })\r\n    }\r\n\r\n    let result = await splitQuery(PRICES_BY_BLOCK, client, [tokenAddress], blocks, 50)\r\n\r\n    // format token ETH price results\r\n    let values = []\r\n    for (var row in result) {\r\n      let timestamp = row.split('t')[1]\r\n      let derivedETH = parseFloat(result[row]?.derivedETH)\r\n      if (timestamp) {\r\n        values.push({\r\n          timestamp,\r\n          derivedETH,\r\n        })\r\n      }\r\n    }\r\n\r\n    // go through eth usd prices and assign to original values array\r\n    let index = 0\r\n    for (var brow in result) {\r\n      let timestamp = brow.split('b')[1]\r\n      if (timestamp) {\r\n        values[index].priceUSD = parseFloat(result[brow]?.ethPrice) * values[index].derivedETH\r\n        index += 1\r\n      }\r\n    }\r\n\r\n    let formattedHistory = []\r\n\r\n    // for each hour, construct the open and close price\r\n    for (let i = 0; i < values.length - 1; i++) {\r\n      formattedHistory.push({\r\n        timestamp: values[i].timestamp,\r\n        open: parseFloat(values[i].priceUSD),\r\n        close: parseFloat(values[i + 1].priceUSD),\r\n      })\r\n    }\r\n\r\n    return formattedHistory\r\n  } catch (e) {\r\n    console.log(e)\r\n    console.log('error fetching blocks')\r\n    return []\r\n  }\r\n}\r\n\r\nconst getTokenChartData = async (tokenAddress) => {\r\n  let data = []\r\n  const utcEndTime = dayjs.utc()\r\n  let utcStartTime = utcEndTime.subtract(1, 'year')\r\n  let startTime = utcStartTime.startOf('minute').unix() - 1\r\n\r\n  try {\r\n    let allFound = false\r\n    let skip = 0\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: TOKEN_CHART,\r\n        variables: {\r\n          tokenAddr: tokenAddress,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      if (result.data.tokenDayDatas.length < 1000) {\r\n        allFound = true\r\n      }\r\n      skip += 1000\r\n      data = data.concat(result.data.tokenDayDatas)\r\n    }\r\n\r\n    let dayIndexSet = new Set()\r\n    let dayIndexArray = []\r\n    const oneDay = 24 * 60 * 60\r\n    data.forEach((dayData, i) => {\r\n      // add the day index to the set of days\r\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\r\n      dayIndexArray.push(data[i])\r\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\r\n    })\r\n\r\n    // fill in empty days\r\n    let timestamp = data[0] && data[0].date ? data[0].date : startTime\r\n    let latestLiquidityUSD = data[0] && data[0].totalLiquidityUSD\r\n    let latestPriceUSD = data[0] && data[0].priceUSD\r\n    let index = 1\r\n    while (timestamp < utcEndTime.startOf('minute').unix() - oneDay) {\r\n      const nextDay = timestamp + oneDay\r\n      let currentDayIndex = (nextDay / oneDay).toFixed(0)\r\n      if (!dayIndexSet.has(currentDayIndex)) {\r\n        data.push({\r\n          date: nextDay,\r\n          dayString: nextDay,\r\n          dailyVolumeUSD: 0,\r\n          priceUSD: latestPriceUSD,\r\n          totalLiquidityUSD: latestLiquidityUSD,\r\n        })\r\n      } else {\r\n        latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\r\n        latestPriceUSD = dayIndexArray[index].priceUSD\r\n        index = index + 1\r\n      }\r\n      timestamp = nextDay\r\n    }\r\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return data\r\n}\r\n\r\nexport function Updater() {\r\n  const [, { updateTopTokens }] = useTokenDataContext()\r\n  const [ethPrice, ethPriceOld] = useEthPrice()\r\n  useEffect(() => {\r\n    async function getData() {\r\n      // get top pairs for overview list\r\n      let topTokens = await getTopTokens(ethPrice, ethPriceOld)\r\n      topTokens && updateTopTokens(topTokens)\r\n    }\r\n    ethPrice && ethPriceOld && getData()\r\n  }, [ethPrice, ethPriceOld, updateTopTokens])\r\n  return null\r\n}\r\n\r\nexport function useTokenData(tokenAddress) {\r\n  const [state, { update }] = useTokenDataContext()\r\n  const [ethPrice, ethPriceOld] = useEthPrice()\r\n  const tokenData = state?.[tokenAddress]\r\n\r\n  useEffect(() => {\r\n    if (!tokenData && ethPrice && ethPriceOld && isAddress(tokenAddress)) {\r\n      getTokenData(tokenAddress, ethPrice, ethPriceOld).then((data) => {\r\n        update(tokenAddress, data)\r\n      })\r\n    }\r\n  }, [ethPrice, ethPriceOld, tokenAddress, tokenData, update])\r\n\r\n  return tokenData || {}\r\n}\r\n\r\nexport function useTokenTransactions(tokenAddress) {\r\n  const [state, { updateTokenTxns }] = useTokenDataContext()\r\n  const tokenTxns = state?.[tokenAddress]?.txns\r\n\r\n  const allPairsFormatted =\r\n    state[tokenAddress] &&\r\n    state[tokenAddress].TOKEN_PAIRS_KEY &&\r\n    state[tokenAddress].TOKEN_PAIRS_KEY.map((pair) => {\r\n      return pair.id\r\n    })\r\n\r\n  useEffect(() => {\r\n    async function checkForTxns() {\r\n      if (!tokenTxns && allPairsFormatted) {\r\n        let transactions = await getTokenTransactions(allPairsFormatted)\r\n        updateTokenTxns(tokenAddress, transactions)\r\n      }\r\n    }\r\n    checkForTxns()\r\n  }, [tokenTxns, tokenAddress, updateTokenTxns, allPairsFormatted])\r\n\r\n  return tokenTxns || []\r\n}\r\n\r\nexport function useTokenPairs(tokenAddress) {\r\n  const [state, { updateAllPairs }] = useTokenDataContext()\r\n  const tokenPairs = state?.[tokenAddress]?.[TOKEN_PAIRS_KEY]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let allPairs = await getTokenPairs(tokenAddress)\r\n      updateAllPairs(tokenAddress, allPairs)\r\n    }\r\n    if (!tokenPairs && isAddress(tokenAddress)) {\r\n      fetchData()\r\n    }\r\n  }, [tokenAddress, tokenPairs, updateAllPairs])\r\n\r\n  return tokenPairs || []\r\n}\r\n\r\nexport function useTokenChartData(tokenAddress) {\r\n  const [state, { updateChartData }] = useTokenDataContext()\r\n  const chartData = state?.[tokenAddress]?.chartData\r\n  useEffect(() => {\r\n    async function checkForChartData() {\r\n      if (!chartData) {\r\n        let data = await getTokenChartData(tokenAddress)\r\n        updateChartData(tokenAddress, data)\r\n      }\r\n    }\r\n    checkForChartData()\r\n  }, [chartData, tokenAddress, updateChartData])\r\n  return chartData\r\n}\r\n\r\n/**\r\n * get candlestick data for a token - saves in context based on the window and the\r\n * interval size\r\n * @param {*} tokenAddress\r\n * @param {*} timeWindow // a preset time window from constant - how far back to look\r\n * @param {*} interval  // the chunk size in seconds - default is 1 hour of 3600s\r\n */\r\nexport function useTokenPriceData(tokenAddress, timeWindow, interval = 3600) {\r\n  const [state, { updatePriceData }] = useTokenDataContext()\r\n  const chartData = state?.[tokenAddress]?.[timeWindow]?.[interval]\r\n  const [latestBlock] = useLatestBlocks()\r\n\r\n  useEffect(() => {\r\n    const currentTime = dayjs.utc()\r\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\r\n    const startTime =\r\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\r\n\r\n    async function fetch() {\r\n      let data = await getIntervalTokenData(tokenAddress, startTime, interval, latestBlock)\r\n      updatePriceData(tokenAddress, data, timeWindow, interval)\r\n    }\r\n    if (!chartData) {\r\n      fetch()\r\n    }\r\n  }, [chartData, interval, timeWindow, tokenAddress, updatePriceData, latestBlock])\r\n\r\n  return chartData\r\n}\r\n\r\nexport function useAllTokenData() {\r\n  const [state] = useTokenDataContext()\r\n  return state\r\n}\r\n","import { USER_MINTS_BUNRS_PER_PAIR } from '../apollo/queries'\r\nimport { client } from '../apollo/client'\r\nimport dayjs from 'dayjs'\r\nimport { getShareValueOverTime } from '.'\r\n\r\nexport const priceOverrides = [\r\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', // USDC\r\n  '0x6b175474e89094c44da98b954eedeac495271d0f', // DAI\r\n]\r\n\r\ninterface ReturnMetrics {\r\n  hodleReturn: number // difference in asset values t0 -> t1 with t0 deposit amounts\r\n  netReturn: number // net return from t0 -> t1\r\n  varenReturn: number // netReturn - hodlReturn\r\n  impLoss: number\r\n  fees: number\r\n}\r\n\r\n// used to calculate returns within a given window bounded by two positions\r\ninterface Position {\r\n  pair: any\r\n  liquidityTokenBalance: number\r\n  liquidityTokenTotalSupply: number\r\n  reserve0: number\r\n  reserve1: number\r\n  reserveUSD: number\r\n  token0PriceUSD: number\r\n  token1PriceUSD: number\r\n}\r\n\r\nconst PRICE_DISCOVERY_START_TIMESTAMP = 1589747086\r\n\r\nfunction formatPricesForEarlyTimestamps(position): Position {\r\n  if (position.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n    if (priceOverrides.includes(position?.pair?.token0.id)) {\r\n      position.token0PriceUSD = 1\r\n    }\r\n    if (priceOverrides.includes(position?.pair?.token1.id)) {\r\n      position.token1PriceUSD = 1\r\n    }\r\n    // WETH price\r\n    if (position.pair?.token0.id === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\r\n      position.token0PriceUSD = 203\r\n    }\r\n    if (position.pair?.token1.id === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\r\n      position.token1PriceUSD = 203\r\n    }\r\n  }\r\n  return position\r\n}\r\n\r\nasync function getPrincipalForUserPerPair(user: string, pairAddress: string) {\r\n  let usd = 0\r\n  let amount0 = 0\r\n  let amount1 = 0\r\n  // get all minst and burns to get principal amounts\r\n  const results = await client.query({\r\n    query: USER_MINTS_BUNRS_PER_PAIR,\r\n    variables: {\r\n      user,\r\n      pair: pairAddress,\r\n    },\r\n  })\r\n  for (const index in results.data.mints) {\r\n    const mint = results.data.mints[index]\r\n    const mintToken0 = mint.pair.token0.id\r\n    const mintToken1 = mint.pair.token1.id\r\n\r\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\r\n    if (priceOverrides.includes(mintToken0) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(mint.amount0) * 2\r\n    } else if (priceOverrides.includes(mintToken1) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(mint.amount1) * 2\r\n    } else {\r\n      usd += parseFloat(mint.amountUSD)\r\n    }\r\n    amount0 += amount0 + parseFloat(mint.amount0)\r\n    amount1 += amount1 + parseFloat(mint.amount1)\r\n  }\r\n\r\n  for (const index in results.data.burns) {\r\n    const burn = results.data.burns[index]\r\n    const burnToken0 = burn.pair.token0.id\r\n    const burnToken1 = burn.pair.token1.id\r\n\r\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\r\n    if (priceOverrides.includes(burnToken0) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(burn.amount0) * 2\r\n    } else if (priceOverrides.includes(burnToken1) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(burn.amount1) * 2\r\n    } else {\r\n      usd -= parseFloat(results.data.burns[index].amountUSD)\r\n    }\r\n\r\n    amount0 -= parseFloat(results.data.burns[index].amount0)\r\n    amount1 -= parseFloat(results.data.burns[index].amount1)\r\n  }\r\n\r\n  return { usd, amount0, amount1 }\r\n}\r\n\r\n/**\r\n * Core algorithm for calculating retursn within one time window.\r\n * @param positionT0 // users liquidity info and token rates at beginning of window\r\n * @param positionT1 // '' at the end of the window\r\n */\r\nexport function getMetricsForPositionWindow(positionT0: Position, positionT1: Position): ReturnMetrics {\r\n  positionT0 = formatPricesForEarlyTimestamps(positionT0)\r\n  positionT1 = formatPricesForEarlyTimestamps(positionT1)\r\n\r\n  // calculate ownership at ends of window, for end of window we need original LP token balance / new total supply\r\n  const t0Ownership = positionT0.liquidityTokenBalance / positionT0.liquidityTokenTotalSupply\r\n  const t1Ownership = positionT0.liquidityTokenBalance / positionT1.liquidityTokenTotalSupply\r\n\r\n  // get starting amounts of token0 and token1 deposited by LP\r\n  const token0_amount_t0 = t0Ownership * positionT0.reserve0\r\n  const token1_amount_t0 = t0Ownership * positionT0.reserve1\r\n\r\n  // get current token values\r\n  const token0_amount_t1 = t1Ownership * positionT1.reserve0\r\n  const token1_amount_t1 = t1Ownership * positionT1.reserve1\r\n\r\n  // calculate squares to find imp loss and fee differences\r\n  const sqrK_t0 = Math.sqrt(token0_amount_t0 * token1_amount_t0)\r\n  // eslint-disable-next-line eqeqeq\r\n  const priceRatioT1 = positionT1.token0PriceUSD != 0 ? positionT1.token1PriceUSD / positionT1.token0PriceUSD : 0\r\n\r\n  const token0_amount_no_fees = positionT1.token1PriceUSD && priceRatioT1 ? sqrK_t0 * Math.sqrt(priceRatioT1) : 0\r\n  const token1_amount_no_fees =\r\n    Number(positionT1.token1PriceUSD) && priceRatioT1 ? sqrK_t0 / Math.sqrt(priceRatioT1) : 0\r\n  const no_fees_usd =\r\n    token0_amount_no_fees * positionT1.token0PriceUSD + token1_amount_no_fees * positionT1.token1PriceUSD\r\n\r\n  const difference_fees_token0 = token0_amount_t1 - token0_amount_no_fees\r\n  const difference_fees_token1 = token1_amount_t1 - token1_amount_no_fees\r\n  const difference_fees_usd =\r\n    difference_fees_token0 * positionT1.token0PriceUSD + difference_fees_token1 * positionT1.token1PriceUSD\r\n\r\n  // calculate USD value at t0 and t1 using initial token deposit amounts for asset return\r\n  const assetValueT0 = token0_amount_t0 * positionT0.token0PriceUSD + token1_amount_t0 * positionT0.token1PriceUSD\r\n  const assetValueT1 = token0_amount_t0 * positionT1.token0PriceUSD + token1_amount_t0 * positionT1.token1PriceUSD\r\n\r\n  const imp_loss_usd = no_fees_usd - assetValueT1\r\n  const varen_return = difference_fees_usd + imp_loss_usd\r\n\r\n  // get net value change for combined data\r\n  const netValueT0 = t0Ownership * positionT0.reserveUSD\r\n  const netValueT1 = t1Ownership * positionT1.reserveUSD\r\n\r\n  return {\r\n    hodleReturn: assetValueT1 - assetValueT0,\r\n    netReturn: netValueT1 - netValueT0,\r\n    varenReturn: varen_return,\r\n    impLoss: imp_loss_usd,\r\n    fees: difference_fees_usd,\r\n  }\r\n}\r\n\r\n/**\r\n * formats data for historical chart for an LPs position in 1 pair over time\r\n * @param startDateTimestamp // day to start tracking at\r\n * @param currentPairData // current stat of the pair\r\n * @param pairSnapshots // history of entries and exits for lp on this pair\r\n * @param currentETHPrice // current price of eth used for usd conversions\r\n */\r\nexport async function getHistoricalPairReturns(startDateTimestamp, currentPairData, pairSnapshots, currentETHPrice) {\r\n  // catch case where data not puplated yet\r\n  if (!currentPairData.createdAtTimestamp) {\r\n    return []\r\n  }\r\n  let dayIndex: number = Math.round(startDateTimestamp / 86400) // get unique day bucket unix\r\n  const currentDayIndex: number = Math.round(dayjs.utc().unix() / 86400)\r\n  const sortedPositions = pairSnapshots.sort((a, b) => {\r\n    return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\r\n  })\r\n  if (sortedPositions[0].timestamp > startDateTimestamp) {\r\n    dayIndex = Math.round(sortedPositions[0].timestamp / 86400)\r\n  }\r\n\r\n  const dayTimestamps = []\r\n  while (dayIndex < currentDayIndex) {\r\n    // only account for days where this pair existed\r\n    if (dayIndex * 86400 >= parseInt(currentPairData.createdAtTimestamp)) {\r\n      dayTimestamps.push(dayIndex * 86400)\r\n    }\r\n    dayIndex = dayIndex + 1\r\n  }\r\n\r\n  const shareValues = await getShareValueOverTime(currentPairData.id, dayTimestamps)\r\n  const shareValuesFormatted = {}\r\n  shareValues?.map((share) => {\r\n    shareValuesFormatted[share.timestamp] = share\r\n  })\r\n\r\n  // set the default position and data\r\n  let positionT0 = pairSnapshots[0]\r\n  const formattedHistory = []\r\n  let netFees = 0\r\n\r\n  // keep track of up to date metrics as we parse each day\r\n  for (const index in dayTimestamps) {\r\n    // get the bounds on the day\r\n    const dayTimestamp = dayTimestamps[index]\r\n    const timestampCeiling = dayTimestamp + 86400\r\n\r\n    // for each change in position value that day, create a window and update\r\n    const dailyChanges = pairSnapshots.filter((snapshot) => {\r\n      return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\r\n    })\r\n    for (let i = 0; i < dailyChanges.length; i++) {\r\n      const positionT1 = dailyChanges[i]\r\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\r\n      netFees = netFees + localReturns.fees\r\n      positionT0 = positionT1\r\n    }\r\n\r\n    // now treat the end of the day as a hypothetical position\r\n    let positionT1 = shareValuesFormatted[dayTimestamp + 86400]\r\n    if (!positionT1) {\r\n      positionT1 = {\r\n        pair: currentPairData.id,\r\n        liquidityTokenBalance: positionT0.liquidityTokenBalance,\r\n        totalSupply: currentPairData.totalSupply,\r\n        reserve0: currentPairData.reserve0,\r\n        reserve1: currentPairData.reserve1,\r\n        reserveUSD: currentPairData.reserveUSD,\r\n        token0PriceUSD: currentPairData.token0.derivedETH * currentETHPrice,\r\n        token1PriceUSD: currentPairData.token1.derivedETH * currentETHPrice,\r\n      }\r\n    }\r\n\r\n    if (positionT1) {\r\n      positionT1.liquidityTokenTotalSupply = positionT1.totalSupply\r\n      positionT1.liquidityTokenBalance = positionT0.liquidityTokenBalance\r\n      const currentLiquidityValue =\r\n        (parseFloat(positionT1.liquidityTokenBalance) / parseFloat(positionT1.liquidityTokenTotalSupply)) *\r\n        parseFloat(positionT1.reserveUSD)\r\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\r\n      const localFees = netFees + localReturns.fees\r\n\r\n      formattedHistory.push({\r\n        date: dayTimestamp,\r\n        usdValue: currentLiquidityValue,\r\n        fees: localFees,\r\n      })\r\n    }\r\n  }\r\n\r\n  return formattedHistory\r\n}\r\n\r\n/**\r\n * For a given pair and user, get the return metrics\r\n * @param user\r\n * @param pair\r\n * @param ethPrice\r\n */\r\nexport async function getLPReturnsOnPair(user: string, pair, ethPrice: number, snapshots) {\r\n  // initialize values\r\n  const principal = await getPrincipalForUserPerPair(user, pair.id)\r\n  let hodlReturn = 0\r\n  let netReturn = 0\r\n  let varenReturn = 0\r\n  let fees = 0\r\n\r\n  snapshots = snapshots.filter((entry) => {\r\n    return entry.pair.id === pair.id\r\n  })\r\n\r\n  // get data about the current position\r\n  const currentPosition: Position = {\r\n    pair,\r\n    liquidityTokenBalance: snapshots[snapshots.length - 1]?.liquidityTokenBalance,\r\n    liquidityTokenTotalSupply: pair.totalSupply,\r\n    reserve0: pair.reserve0,\r\n    reserve1: pair.reserve1,\r\n    reserveUSD: pair.reserveUSD,\r\n    token0PriceUSD: pair.token0.derivedETH * ethPrice,\r\n    token1PriceUSD: pair.token1.derivedETH * ethPrice,\r\n  }\r\n\r\n  for (const index in snapshots) {\r\n    // get positions at both bounds of the window\r\n    const positionT0 = snapshots[index]\r\n    const positionT1 = parseInt(index) === snapshots.length - 1 ? currentPosition : snapshots[parseInt(index) + 1]\r\n\r\n    const results = getMetricsForPositionWindow(positionT0, positionT1)\r\n    hodlReturn = hodlReturn + results.hodleReturn\r\n    netReturn = netReturn + results.netReturn\r\n    varenReturn = varenReturn + results.varenReturn\r\n    fees = fees + results.fees\r\n  }\r\n\r\n  return {\r\n    principal,\r\n    net: {\r\n      return: netReturn,\r\n    },\r\n    varen: {\r\n      return: varenReturn,\r\n    },\r\n    fees: {\r\n      sum: fees,\r\n    },\r\n  }\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\r\nimport { useAllPairData, usePairData } from './PairData'\r\nimport { client, stakingClient } from '../apollo/client'\r\nimport {\r\n  USER_TRANSACTIONS,\r\n  USER_POSITIONS,\r\n  USER_HISTORY,\r\n  PAIR_DAY_DATA_BULK,\r\n  MINING_POSITIONS,\r\n} from '../apollo/queries'\r\nimport { useTimeframe, useStartTimestamp } from './Application'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { useEthPrice } from './GlobalData'\r\nimport { getLPReturnsOnPair, getHistoricalPairReturns } from '../utils/returns'\r\nimport { timeframeOptions } from '../constants'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst UPDATE_TRANSACTIONS = 'UPDATE_TRANSACTIONS'\r\nconst UPDATE_POSITIONS = 'UPDATE_POSITIONS '\r\nconst UPDATE_MINING_POSITIONS = 'UPDATE_MINING_POSITIONS'\r\nconst UPDATE_USER_POSITION_HISTORY = 'UPDATE_USER_POSITION_HISTORY'\r\nconst UPDATE_USER_PAIR_RETURNS = 'UPDATE_USER_PAIR_RETURNS'\r\n\r\nconst TRANSACTIONS_KEY = 'TRANSACTIONS_KEY'\r\nconst POSITIONS_KEY = 'POSITIONS_KEY'\r\nconst MINING_POSITIONS_KEY = 'MINING_POSITIONS_KEY'\r\nconst USER_SNAPSHOTS = 'USER_SNAPSHOTS'\r\nconst USER_PAIR_RETURNS_KEY = 'USER_PAIR_RETURNS_KEY'\r\n\r\nconst UserContext = createContext()\r\n\r\nfunction useUserContext() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE_TRANSACTIONS: {\r\n      const { account, transactions } = payload\r\n      return {\r\n        ...state,\r\n        [account]: {\r\n          ...state?.[account],\r\n          [TRANSACTIONS_KEY]: transactions,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_POSITIONS: {\r\n      const { account, positions } = payload\r\n      return {\r\n        ...state,\r\n        [account]: { ...state?.[account], [POSITIONS_KEY]: positions },\r\n      }\r\n    }\r\n    case UPDATE_MINING_POSITIONS: {\r\n      const { account, miningPositions } = payload\r\n      return {\r\n        ...state,\r\n        [account]: { ...state?.[account], [MINING_POSITIONS_KEY]: miningPositions },\r\n      }\r\n    }\r\n    case UPDATE_USER_POSITION_HISTORY: {\r\n      const { account, historyData } = payload\r\n      return {\r\n        ...state,\r\n        [account]: { ...state?.[account], [USER_SNAPSHOTS]: historyData },\r\n      }\r\n    }\r\n\r\n    case UPDATE_USER_PAIR_RETURNS: {\r\n      const { account, pairAddress, data } = payload\r\n      return {\r\n        ...state,\r\n        [account]: {\r\n          ...state?.[account],\r\n          [USER_PAIR_RETURNS_KEY]: {\r\n            ...state?.[account]?.[USER_PAIR_RETURNS_KEY],\r\n            [pairAddress]: data,\r\n          },\r\n        },\r\n      }\r\n    }\r\n\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nconst INITIAL_STATE = {}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\r\n\r\n  const updateTransactions = useCallback((account, transactions) => {\r\n    dispatch({\r\n      type: UPDATE_TRANSACTIONS,\r\n      payload: {\r\n        account,\r\n        transactions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updatePositions = useCallback((account, positions) => {\r\n    dispatch({\r\n      type: UPDATE_POSITIONS,\r\n      payload: {\r\n        account,\r\n        positions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateMiningPositions = useCallback((account, miningPositions) => {\r\n    dispatch({\r\n      type: UPDATE_MINING_POSITIONS,\r\n      payload: {\r\n        account,\r\n        miningPositions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateUserSnapshots = useCallback((account, historyData) => {\r\n    dispatch({\r\n      type: UPDATE_USER_POSITION_HISTORY,\r\n      payload: {\r\n        account,\r\n        historyData,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateUserPairReturns = useCallback((account, pairAddress, data) => {\r\n    dispatch({\r\n      type: UPDATE_USER_PAIR_RETURNS,\r\n      payload: {\r\n        account,\r\n        pairAddress,\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          { updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns },\r\n        ],\r\n        [state, updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns]\r\n      )}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useUserTransactions(account) {\r\n  const [state, { updateTransactions }] = useUserContext()\r\n  const transactions = state?.[account]?.[TRANSACTIONS_KEY]\r\n  useEffect(() => {\r\n    async function fetchData(account) {\r\n      try {\r\n        let result = await client.query({\r\n          query: USER_TRANSACTIONS,\r\n          variables: {\r\n            user: account,\r\n          },\r\n          fetchPolicy: 'no-cache',\r\n        })\r\n        if (result?.data) {\r\n          updateTransactions(account, result?.data)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    if (!transactions && account) {\r\n      fetchData(account)\r\n    }\r\n  }, [account, transactions, updateTransactions])\r\n\r\n  return transactions || {}\r\n}\r\n\r\n/**\r\n * Store all the snapshots of liquidity activity for this account.\r\n * Each snapshot is a moment when an LP position was created or updated.\r\n * @param {*} account\r\n */\r\nexport function useUserSnapshots(account) {\r\n  const [state, { updateUserSnapshots }] = useUserContext()\r\n  const snapshots = state?.[account]?.[USER_SNAPSHOTS]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let skip = 0\r\n        let allResults = []\r\n        let found = false\r\n        while (!found) {\r\n          let result = await client.query({\r\n            query: USER_HISTORY,\r\n            variables: {\r\n              skip: skip,\r\n              user: account,\r\n            },\r\n            fetchPolicy: 'cache-first',\r\n          })\r\n          allResults = allResults.concat(result.data.liquidityPositionSnapshots)\r\n          if (result.data.liquidityPositionSnapshots.length < 1000) {\r\n            found = true\r\n          } else {\r\n            skip += 1000\r\n          }\r\n        }\r\n        if (allResults) {\r\n          updateUserSnapshots(account, allResults)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    if (!snapshots && account) {\r\n      fetchData()\r\n    }\r\n  }, [account, snapshots, updateUserSnapshots])\r\n\r\n  return snapshots\r\n}\r\n\r\n/**\r\n * For a given position (data about holding) and user, get the chart\r\n * data for the fees and liquidity over time\r\n * @param {*} position\r\n * @param {*} account\r\n */\r\nexport function useUserPositionChart(position, account) {\r\n  const pairAddress = position?.pair?.id\r\n  const [state, { updateUserPairReturns }] = useUserContext()\r\n\r\n  // get oldest date of data to fetch\r\n  const startDateTimestamp = useStartTimestamp()\r\n\r\n  // get users adds and removes on this pair\r\n  const snapshots = useUserSnapshots(account)\r\n  const pairSnapshots =\r\n    snapshots &&\r\n    position &&\r\n    snapshots.filter((currentSnapshot) => {\r\n      return currentSnapshot.pair.id === position.pair.id\r\n    })\r\n\r\n  // get data needed for calculations\r\n  const currentPairData = usePairData(pairAddress)\r\n  const [currentETHPrice] = useEthPrice()\r\n\r\n  // formatetd array to return for chart data\r\n  const formattedHistory = state?.[account]?.[USER_PAIR_RETURNS_KEY]?.[pairAddress]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let fetchedData = await getHistoricalPairReturns(\r\n        startDateTimestamp,\r\n        currentPairData,\r\n        pairSnapshots,\r\n        currentETHPrice\r\n      )\r\n      updateUserPairReturns(account, pairAddress, fetchedData)\r\n    }\r\n    if (\r\n      account &&\r\n      startDateTimestamp &&\r\n      pairSnapshots &&\r\n      !formattedHistory &&\r\n      currentPairData &&\r\n      Object.keys(currentPairData).length > 0 &&\r\n      pairAddress &&\r\n      currentETHPrice\r\n    ) {\r\n      fetchData()\r\n    }\r\n  }, [\r\n    account,\r\n    startDateTimestamp,\r\n    pairSnapshots,\r\n    formattedHistory,\r\n    pairAddress,\r\n    currentPairData,\r\n    currentETHPrice,\r\n    updateUserPairReturns,\r\n    position.pair.id,\r\n  ])\r\n\r\n  return formattedHistory\r\n}\r\n\r\n/**\r\n * For each day starting with min(first position timestamp, beginning of time window),\r\n * get total liquidity supplied by user in USD. Format in array with date timestamps\r\n * and usd liquidity value.\r\n */\r\nexport function useUserLiquidityChart(account) {\r\n  const history = useUserSnapshots(account)\r\n  // formatetd array to return for chart data\r\n  const [formattedHistory, setFormattedHistory] = useState()\r\n\r\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\r\n  const [activeWindow] = useTimeframe()\r\n\r\n  // monitor the old date fetched\r\n  useEffect(() => {\r\n    const utcEndTime = dayjs.utc()\r\n    // based on window, get starttime\r\n    let utcStartTime\r\n    switch (activeWindow) {\r\n      case timeframeOptions.WEEK:\r\n        utcStartTime = utcEndTime.subtract(1, 'week').startOf('day')\r\n        break\r\n      case timeframeOptions.ALL_TIME:\r\n        utcStartTime = utcEndTime.subtract(1, 'year')\r\n        break\r\n      default:\r\n        utcStartTime = utcEndTime.subtract(1, 'year').startOf('year')\r\n        break\r\n    }\r\n    let startTime = utcStartTime.unix() - 1\r\n    if ((activeWindow && startTime < startDateTimestamp) || !startDateTimestamp) {\r\n      setStartDateTimestamp(startTime)\r\n    }\r\n  }, [activeWindow, startDateTimestamp])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let dayIndex = parseInt(startDateTimestamp / 86400) // get unique day bucket unix\r\n      const currentDayIndex = parseInt(dayjs.utc().unix() / 86400)\r\n\r\n      // sort snapshots in order\r\n      let sortedPositions = history.sort((a, b) => {\r\n        return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\r\n      })\r\n      // if UI start time is > first position time - bump start index to this time\r\n      if (parseInt(sortedPositions[0].timestamp) > dayIndex) {\r\n        dayIndex = parseInt(parseInt(sortedPositions[0].timestamp) / 86400)\r\n      }\r\n\r\n      const dayTimestamps = []\r\n      // get date timestamps for all days in view\r\n      while (dayIndex < currentDayIndex) {\r\n        dayTimestamps.push(parseInt(dayIndex) * 86400)\r\n        dayIndex = dayIndex + 1\r\n      }\r\n\r\n      const pairs = history.reduce((pairList, position) => {\r\n        return [...pairList, position.pair.id]\r\n      }, [])\r\n\r\n      // get all day datas where date is in this list, and pair is in pair list\r\n      let {\r\n        data: { pairDayDatas },\r\n      } = await client.query({\r\n        query: PAIR_DAY_DATA_BULK(pairs, startDateTimestamp),\r\n      })\r\n\r\n      const formattedHistory = []\r\n\r\n      // map of current pair => ownership %\r\n      const ownershipPerPair = {}\r\n      for (const index in dayTimestamps) {\r\n        const dayTimestamp = dayTimestamps[index]\r\n        const timestampCeiling = dayTimestamp + 86400\r\n\r\n        // cycle through relevant positions and update ownership for any that we need to\r\n        const relevantPositions = history.filter((snapshot) => {\r\n          return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\r\n        })\r\n        for (const index in relevantPositions) {\r\n          const position = relevantPositions[index]\r\n          // case where pair not added yet\r\n          if (!ownershipPerPair[position.pair.id]) {\r\n            ownershipPerPair[position.pair.id] = {\r\n              lpTokenBalance: position.liquidityTokenBalance,\r\n              timestamp: position.timestamp,\r\n            }\r\n          }\r\n          // case where more recent timestamp is found for pair\r\n          if (ownershipPerPair[position.pair.id] && ownershipPerPair[position.pair.id].timestamp < position.timestamp) {\r\n            ownershipPerPair[position.pair.id] = {\r\n              lpTokenBalance: position.liquidityTokenBalance,\r\n              timestamp: position.timestamp,\r\n            }\r\n          }\r\n        }\r\n\r\n        const relavantDayDatas = Object.keys(ownershipPerPair).map((pairAddress) => {\r\n          // find last day data after timestamp update\r\n          const dayDatasForThisPair = pairDayDatas.filter((dayData) => {\r\n            return dayData.pairAddress === pairAddress\r\n          })\r\n          // find the most recent reference to pair liquidity data\r\n          let mostRecent = dayDatasForThisPair[0]\r\n          for (const index in dayDatasForThisPair) {\r\n            const dayData = dayDatasForThisPair[index]\r\n            if (dayData.date < dayTimestamp && dayData.date > mostRecent.date) {\r\n              mostRecent = dayData\r\n            }\r\n          }\r\n          return mostRecent\r\n        })\r\n\r\n        // now cycle through pair day datas, for each one find usd value = ownership[address] * reserveUSD\r\n        const dailyUSD = relavantDayDatas.reduce((totalUSD, dayData) => {\r\n          if (dayData) {\r\n            return (totalUSD =\r\n              totalUSD +\r\n              (ownershipPerPair[dayData.pairAddress]\r\n                ? (parseFloat(ownershipPerPair[dayData.pairAddress].lpTokenBalance) / parseFloat(dayData.totalSupply)) *\r\n                  parseFloat(dayData.reserveUSD)\r\n                : 0))\r\n          } else {\r\n            return totalUSD\r\n          }\r\n        }, 0)\r\n\r\n        formattedHistory.push({\r\n          date: dayTimestamp,\r\n          valueUSD: dailyUSD,\r\n        })\r\n      }\r\n\r\n      setFormattedHistory(formattedHistory)\r\n    }\r\n    if (history && startDateTimestamp && history.length > 0) {\r\n      fetchData()\r\n    }\r\n  }, [history, startDateTimestamp])\r\n\r\n  return formattedHistory\r\n}\r\n\r\nexport function useUserPositions(account) {\r\n  const [state, { updatePositions }] = useUserContext()\r\n  const positions = state?.[account]?.[POSITIONS_KEY]\r\n\r\n  const snapshots = useUserSnapshots(account)\r\n  const [ethPrice] = useEthPrice()\r\n\r\n  useEffect(() => {\r\n    async function fetchData(account) {\r\n      try {\r\n        let result = await client.query({\r\n          query: USER_POSITIONS,\r\n          variables: {\r\n            user: account,\r\n          },\r\n          fetchPolicy: 'no-cache',\r\n        })\r\n        if (result?.data?.liquidityPositions) {\r\n          let formattedPositions = await Promise.all(\r\n            result?.data?.liquidityPositions.map(async (positionData) => {\r\n              const returnData = await getLPReturnsOnPair(account, positionData.pair, ethPrice, snapshots)\r\n              return {\r\n                ...positionData,\r\n                ...returnData,\r\n              }\r\n            })\r\n          )\r\n          updatePositions(account, formattedPositions)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    if (!positions && account && ethPrice && snapshots) {\r\n      fetchData(account)\r\n    }\r\n  }, [account, positions, updatePositions, ethPrice, snapshots])\r\n\r\n  return positions\r\n}\r\n\r\nexport function useMiningPositions(account) {\r\n  const [state, { updateMiningPositions }] = useUserContext()\r\n  const allPairData = useAllPairData()\r\n  const miningPositions = state?.[account]?.[MINING_POSITIONS_KEY]\r\n\r\n  const snapshots = useUserSnapshots(account)\r\n\r\n  useEffect(() => {\r\n    async function fetchData(account) {\r\n      try {\r\n        let miningPositionData = []\r\n        let result = await stakingClient.query({\r\n          query: MINING_POSITIONS(account),\r\n          fetchPolicy: 'no-cache',\r\n        })\r\n        if (!result?.data?.user?.miningPosition) {\r\n          return\r\n        }\r\n        miningPositionData = result.data.user.miningPosition\r\n        for (const miningPosition of miningPositionData) {\r\n          const pairAddress = miningPosition.miningPool.pair.id\r\n          miningPosition.pairData = allPairData[pairAddress]\r\n        }\r\n        updateMiningPositions(account, miningPositionData)\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n\r\n    if (!miningPositions && account && snapshots) {\r\n      fetchData(account)\r\n    }\r\n  }, [account, miningPositions, updateMiningPositions, snapshots, allPairData])\r\n  return miningPositions\r\n}\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: center;\r\n  align-items: ${({ align }) => align && align};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  justify-content: ${({ justify }) => justify};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)`\r\n  flex-wrap: ${({ wrap }) => wrap ?? 'nowrap'};\r\n  margin: -${({ gap }) => gap};\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)`\r\n  width: fit-content;\r\n`\r\n\r\nexport default Row\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n  pointer-events: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  ${(props) =>\r\n  props.fill && !props.height\r\n    ? css`\r\n          height: 100vh;\r\n        `\r\n    : css`\r\n          height: 180px;\r\n        `}\r\n`\r\n\r\nconst Loader = styled.div`\r\n  margin: 100px auto;\r\n  width: 40px;\r\n  height: 40px;\r\n  position: relative;\r\n  z-index: 5;\r\n  \r\n  .sk-child {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n  \r\n    :before {\r\n      content: '';\r\n      display: block;\r\n      margin: 0 auto;\r\n      width: 15%;\r\n      height: 15%;\r\n      background-color: #bebebe;\r\n      border-radius: 100%;\r\n      animation: sk-circleBounceDelay 1.2s infinite ease-in-out both;\r\n    }\r\n  }\r\n  \r\n  .sk-circle2 {\r\n    transform: rotate(30deg); \r\n  }\r\n  .sk-circle3 {\r\n    transform: rotate(60deg); \r\n  }\r\n  .sk-circle4 {\r\n    transform: rotate(90deg); \r\n  }\r\n  .sk-circle5 {\r\n    transform: rotate(120deg); \r\n  }\r\n  .sk-circle6 {\r\n    transform: rotate(150deg); \r\n  }\r\n  .sk-circle7 {\r\n    transform: rotate(180deg); \r\n  }\r\n  .sk-circle8 {\r\n    transform: rotate(210deg); \r\n  }\r\n  .sk-circle9 {\r\n    transform: rotate(240deg); \r\n  }\r\n  .sk-circle10 {\r\n    transform: rotate(270deg); \r\n  }\r\n  .sk-circle11 {\r\n    transform: rotate(300deg); \r\n  }\r\n  .sk-circle12 {\r\n    transform: rotate(330deg); \r\n  }\r\n  .sk-circle2:before {\r\n    animation-delay: -1.1s; \r\n  }\r\n  .sk-circle3:before {\r\n    animation-delay: -1s; \r\n  }\r\n  .sk-circle4:before {\r\n    animation-delay: -0.9s; \r\n  }\r\n  .sk-circle5:before {\r\n    animation-delay: -0.8s; \r\n  }\r\n  .sk-circle6:before {\r\n    animation-delay: -0.7s; \r\n  }\r\n  .sk-circle7:before {\r\n    animation-delay: -0.6s; \r\n  }\r\n  .sk-circle8:before {\r\n    animation-delay: -0.5s; \r\n  }\r\n  .sk-circle9:before {\r\n    animation-delay: -0.4s; \r\n  }\r\n  .sk-circle10:before {\r\n    animation-delay: -0.3s; \r\n  }\r\n  .sk-circle11:before {\r\n    animation-delay: -0.2s; \r\n  }\r\n  .sk-circle12:before {\r\n    animation-delay: -0.1s; \r\n  }\r\n`\r\n\r\nconst LocalLoader = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Loader>\r\n          <div className=\"sk-circle1 sk-child\" />\r\n          <div className=\"sk-circle2 sk-child\" />\r\n          <div className=\"sk-circle3 sk-child\" />\r\n          <div className=\"sk-circle4 sk-child\" />\r\n          <div className=\"sk-circle5 sk-child\" />\r\n          <div className=\"sk-circle6 sk-child\" />\r\n          <div className=\"sk-circle7 sk-child\" />\r\n          <div className=\"sk-circle8 sk-child\" />\r\n          <div className=\"sk-circle9 sk-child\" />\r\n          <div className=\"sk-circle10 sk-child\" />\r\n          <div className=\"sk-circle11 sk-child\" />\r\n          <div className=\"sk-circle12 sk-child\" />\r\n      </Loader>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default LocalLoader\r\n","import React from 'react'\r\nimport { Link as RebassLink } from 'rebass'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { lighten, darken } from 'polished'\r\n\r\nconst WrappedLink = ({ external, children, ...rest }) => (\r\n  <RebassLink\r\n    target={external ? '_blank' : null}\r\n    rel={external ? 'noopener noreferrer' : null}\r\n    {...rest}\r\n  >\r\n    {children}\r\n  </RebassLink>\r\n)\r\n\r\nWrappedLink.propTypes = {\r\n  external: PropTypes.bool,\r\n}\r\n\r\nconst Link = styled(WrappedLink)`\r\n  color: ${({ theme }) => theme.grey};\r\n \r\n  &:hover {\r\n    color: ${({ theme }) => theme.white};\r\n  }\r\n`\r\n\r\nexport default Link\r\n\r\nexport const CustomLink = styled(RouterLink)`\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: ${({ color, theme }) => (color ? color : theme.link)};\r\n\r\n  &:visited {\r\n    color: ${({ color, theme }) => (color ? lighten(0.1, color) : lighten(0.1, theme.link))};\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    underline: none;\r\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.link))};\r\n  }\r\n`\r\n\r\nexport const BasicLink = styled(RouterLink)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    underline: none;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Box } from 'rebass'\r\n\r\nimport Link from './Link'\r\n\r\nimport { urls } from '../utils'\r\n\r\nconst Divider = styled(Box)`\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.divider};\r\n`\r\n\r\nexport const IconWrapper = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  border-radius: 3px;\r\n  height: 16px;\r\n  width: 16px;\r\n  padding: 0px;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst Hint = ({ children, ...rest }) => (\r\n  <Text fontSize={16} weight={500} {...rest}>\r\n    {children}\r\n  </Text>\r\n)\r\n\r\nconst Address = ({ address, token, ...rest }) => (\r\n  <Link\r\n    color=\"button\"\r\n    href={token ? urls.showToken(address) : urls.showAddress(address)}\r\n    external\r\n    style={{ wordBreak: 'break-all' }}\r\n    {...rest}\r\n  >\r\n    {address}\r\n  </Link>\r\n)\r\n\r\nexport const Hover = styled.div`\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: ${({ fade }) => fade && '0.7'};\r\n  }\r\n`\r\n\r\nexport const StyledIcon = styled.div`\r\n  color: ${({ theme }) => theme.text1};\r\n`\r\n\r\nconst EmptyCard = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 200px;\r\n  border-radius: 20px;\r\n  color: ${({ theme }) => theme.text1};\r\n  height: ${({ height }) => height && height};\r\n`\r\n\r\nexport const SideBar = styled.span`\r\n  display: grid;\r\n  grid-gap: 24px;\r\n  position: sticky;\r\n  top: 4rem;\r\n`\r\n\r\nexport const SubNav = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 0;\r\n  margin-bottom: 2rem;\r\n`\r\nexport const SubNavEl = styled.li`\r\n  list-style: none;\r\n  display: flex;\r\n  padding-bottom: 0.5rem;\r\n  margin-right: 1rem;\r\n  font-weight: ${({ isActive }) => (isActive ? 600 : 500)};\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0);\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    border-bottom: 1px solid ${({ theme }) => theme.bg4};\r\n  }\r\n`\r\n\r\nexport const PageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 36px;\r\n  padding-bottom: 80px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    & > * {\r\n      padding: 0 12px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const ContentWrapper = styled.div`\r\n  display: grid;\r\n  justify-content: start;\r\n  align-items: start;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 24px;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  box-sizing: border-box;\r\n  overflow-x: hidden;\r\n  position: relative;\r\n  z-index: 99;\r\n   \r\n  @media screen and (max-width: 1180px) {\r\n    grid-template-columns: 1fr;\r\n    padding: 0 1rem;\r\n  }\r\n \r\n`\r\n\r\nexport const ContentWrapperLarge = styled.div`\r\n  display: grid;\r\n  justify-content: start;\r\n  align-items: start;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 24px;\r\n  padding: 0 2rem;\r\n  margin: 0 auto;\r\n  box-sizing: border-box;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 99;\r\n  \r\n  @media screen and (max-width: 1282px) {\r\n    grid-template-columns: 1fr;\r\n    padding: 0 1rem;\r\n  }\r\n`\r\n\r\nexport const FullWrapper = styled.div`\r\n  display: grid;\r\n  justify-content: start;\r\n  align-items: start;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 24px;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  z-index: 99;\r\n  \r\n  @media screen and (max-width: 1180px) {\r\n    grid-template-columns: 1fr;\r\n    padding: 0 1rem;\r\n  }\r\n`\r\n\r\nexport const FixedMenu = styled.div`\r\n  z-index: 99;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 1rem;\r\n  box-sizing: border-box;\r\n  margin-bottom: 2rem;\r\n  max-width: 100vw;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nexport { Hint, Divider, Address, EmptyCard }\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { isAddress } from '../../utils/index.js'\r\nimport EthereumLogo from '../../assets/eth.png'\r\n\r\nconst BAD_IMAGES = {}\r\n\r\nconst Inline = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  align-self: center;\r\n`\r\n\r\nconst Image = styled.img`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n  border-radius: 50%;\r\n`\r\n\r\nconst StyledEthereumLogo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  > img {\r\n    width: ${({ size }) => size};\r\n    height: ${({ size }) => size};\r\n  }\r\n`\r\n\r\nexport default function TokenLogo({ address, header = false, size = '24px', ...rest }) {\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setError(false)\r\n  }, [address])\r\n\r\n  if (error || BAD_IMAGES[address]) {\r\n    return <Inline />\r\n  }\r\n\r\n  if (address?.toLowerCase() === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\r\n    return (\r\n      <StyledEthereumLogo size={size} {...rest}>\r\n        <img\r\n          src={EthereumLogo}\r\n          style={{\r\n            boxShadow: '0px 6px 10px rgba(0, 0, 0, 0.075)',\r\n            borderRadius: '24px'\r\n          }}\r\n          alt=\"\"\r\n        />\r\n      </StyledEthereumLogo>\r\n    )\r\n  }\r\n\r\n  const path = `https://logos.varen.finance/${isAddress(address)}.png`.toLowerCase()\r\n\r\n  return (\r\n    <Inline>\r\n      <Image\r\n        {...rest}\r\n        alt={''}\r\n        src={path}\r\n        size={size}\r\n        onError={event => {\r\n          BAD_IMAGES[address] = true\r\n          setError(true)\r\n          event.preventDefault()\r\n        }}\r\n      />\r\n    </Inline>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport TokenLogo from '../TokenLogo'\r\n\r\nexport default function DoubleTokenLogo({ a0, a1, size = 24, margin = false }) {\r\n  const TokenWrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-right: ${({ sizeraw, margin }) => margin && (sizeraw / 3 + 8).toString() + 'px'};\r\n  `\r\n\r\n  const HigherLogo = styled(TokenLogo)`\r\n    z-index: 2;\r\n    border-radius: 50%;\r\n  `\r\n\r\n  const CoveredLogo = styled(TokenLogo)`\r\n    position: absolute;\r\n    left: ${({ sizeraw }) => (sizeraw / 2).toString() + 'px'};\r\n    border-radius: 50%;\r\n  `\r\n\r\n  return (\r\n    <TokenWrapper sizeraw={size} margin={margin}>\r\n      <HigherLogo address={a0} size={size.toString() + 'px'} sizeraw={size} />\r\n      <CoveredLogo address={a1} size={size.toString() + 'px'} sizeraw={size} />\r\n    </TokenWrapper>\r\n  )\r\n}\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.bg2};\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\r\n  color: ${({ theme }) => theme.text2};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    border: 1px solid ${({ theme }) => theme.bg4};\r\n    transform: rotate(45deg);\r\n    background: ${({ theme }) => theme.bg2};\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n\r\n  useInterval(update, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useCallback, useEffect, useRef } from 'react'\r\nimport copy from 'copy-to-clipboard'\r\n\r\nexport function useColor() {\r\n  return '#bebebe'\r\n}\r\n\r\nexport function useCopyClipboard(timeout = 500) {\r\n  const [isCopied, setIsCopied] = useState(false)\r\n\r\n  const staticCopy = useCallback((text) => {\r\n    const didCopy = copy(text)\r\n    setIsCopied(didCopy)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isCopied) {\r\n      const hide = setTimeout(() => {\r\n        setIsCopied(false)\r\n      }, timeout)\r\n\r\n      return () => {\r\n        clearTimeout(hide)\r\n      }\r\n    }\r\n  }, [isCopied, setIsCopied, timeout])\r\n\r\n  return [isCopied, staticCopy]\r\n}\r\n\r\nexport const useOutsideClick = (ref, ref2, callback) => {\r\n  const handleClick = (e) => {\r\n    if (ref.current && ref.current && !ref2.current) {\r\n      callback(true)\r\n    } else if (ref.current && !ref.current.contains(e.target) && ref2.current && !ref2.current.contains(e.target)) {\r\n      callback(true)\r\n    } else {\r\n      callback(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  })\r\n}\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const current = savedCallback.current\r\n      current && current()\r\n    }\r\n\r\n    if (delay !== null) {\r\n      tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return\r\n  }, [delay])\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { HelpCircle as Question } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  color: ${({ theme }) => theme.text2};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 400;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n}\r\n\r\nexport function Tooltip({ text, ...rest }: TooltipProps) {\r\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n}\r\n\r\nexport default function QuestionHelper({ text, disabled }: { text: string; disabled?: boolean }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4 }}>\r\n      <Tooltip text={text} show={show && !disabled}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <Question size={16} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tooltip } from '../QuestionHelper'\r\n\r\nconst TextWrapper = styled.div`\r\n  position: relative;\r\n  margin-left: ${({ margin }) => margin && '4px'};\r\n  color: ${({ theme, link }) => (link ? theme.grey : theme.text1)};\r\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\r\n\r\n  :hover {\r\n    color: ${({ theme, link }) => (link ? theme.white : theme.text1)};\r\n    color: ${({ link }) => (link ? 'pointer' : 'default')};\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\r\n  }\r\n`\r\n\r\nconst FormattedName = ({ text, maxCharacters, margin = false, adjustSize = false, fontSize, link, ...rest }) => {\r\n  const [showHover, setShowHover] = useState(false)\r\n\r\n  if (!text) {\r\n    return ''\r\n  }\r\n\r\n  if (text.length > maxCharacters) {\r\n    return (\r\n      <Tooltip text={text} show={showHover}>\r\n        <TextWrapper\r\n          onMouseEnter={() => setShowHover(true)}\r\n          onMouseLeave={() => setShowHover(false)}\r\n          margin={margin}\r\n          adjustSize={adjustSize}\r\n          link={link}\r\n          fontSize={fontSize}\r\n          {...rest}\r\n        >\r\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\r\n        </TextWrapper>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <TextWrapper margin={margin} adjustSize={adjustSize} link={link} fontSize={fontSize} {...rest}>\r\n      {text}\r\n    </TextWrapper>\r\n  )\r\n}\r\n\r\nexport default FormattedName\r\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '../../components'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, formattedPercent } from '../../utils'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport FormattedName from '../FormattedName'\nimport QuestionHelper from '../QuestionHelper'\nimport { TYPE } from '../../Theme'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'name liq vol';\n  padding: 0 1.125rem;\n\n  > * {\n    justify-content: flex-end;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 740px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr};\n    grid-template-areas: ' name liq vol pool ';\n  }\n\n  @media screen and (min-width: 1080px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n  }\n`\n\nconst SORT_FIELD = {\n  LIQ: 0,\n  VOL: 1,\n  VOL_7DAYS: 3,\n  FEES: 4,\n  APY: 5,\n}\n\nconst FIELD_TO_VALUE = {\n  [SORT_FIELD.LIQ]: 'trackedReserveUSD', // sort with tracked volume only\n  [SORT_FIELD.VOL]: 'oneDayVolumeUSD',\n  [SORT_FIELD.VOL_7DAYS]: 'oneWeekVolumeUSD',\n  [SORT_FIELD.FEES]: 'oneDayVolumeUSD',\n}\n\nfunction PairList({ pairs, color, disbaleLinks, maxItems = 10 }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below740 = useMedia('(max-width: 740px)')\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [pairs])\n\n  useEffect(() => {\n    if (pairs) {\n      let extraPages = 1\n      if (Object.keys(pairs).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(pairs).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, pairs])\n\n  const ListItem = ({ pairAddress, index }) => {\n    const pairData = pairs[pairAddress]\n\n    if (pairData && pairData.token0 && pairData.token1) {\n      const liquidity = formattedNum(pairData.reserveUSD, true)\n      const volume = formattedNum(pairData.oneDayVolumeUSD, true)\n      const apy = formattedPercent((pairData.oneDayVolumeUSD * 0.003 * 365 * 100) / pairData.reserveUSD)\n\n      let token0 = pairData.token0\n      let token1 = pairData.token1\n\n      if (\n        token1.symbol === 'ETH' ||\n        (token1.symbol === 'LINK' && token0.symbol !== 'ETH') ||\n        (token1.symbol === 'YFLUSD' && token0.symbol !== 'ETH' && token0.symbol !== 'LINK')\n      ) {\n        token0 = pairData.token1\n        token1 = pairData.token0\n      }\n\n      return (\n        <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\n          <DataText area=\"name\" fontWeight=\"500\">\n            {!below600 && <div style={{ marginRight: '20px', width: '10px' }}>{index}</div>}\n            <DoubleTokenLogo size={below600 ? 16 : 20} a0={token0.id} a1={token1.id} margin={!below740} />\n            <CustomLink style={{ marginLeft: '20px', whiteSpace: 'nowrap' }} to={'/pair/' + pairAddress} color={color}>\n              <FormattedName\n                text={token0.symbol + '-' + token1.symbol}\n                maxCharacters={below600 ? 8 : 16}\n                adjustSize={true}\n                link={true}\n              />\n            </CustomLink>\n          </DataText>\n          <DataText area=\"liq\">{liquidity}</DataText>\n          <DataText area=\"vol\">{volume}</DataText>\n          {!below1080 && <DataText area=\"volWeek\">{formattedNum(pairData.oneWeekVolumeUSD, true)}</DataText>}\n          {!below1080 && <DataText area=\"fees\">{formattedNum(pairData.oneDayVolumeUSD * 0.003, true)}</DataText>}\n          {!below1080 && <DataText area=\"apy\">{apy}</DataText>}\n        </DashGrid>\n      )\n    } else {\n      return ''\n    }\n  }\n\n  const pairList =\n    pairs &&\n    Object.keys(pairs)\n      .sort((addressA, addressB) => {\n        const pairA = pairs[addressA]\n        const pairB = pairs[addressB]\n        if (sortedColumn === SORT_FIELD.APY) {\n          const apy0 = parseFloat(pairA.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairA.reserveUSD)\n          const apy1 = parseFloat(pairB.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairB.reserveUSD)\n          return apy0 > apy1 ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\n        }\n        return parseFloat(pairA[FIELD_TO_VALUE[sortedColumn]]) > parseFloat(pairB[FIELD_TO_VALUE[sortedColumn]])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((pairAddress, index) => {\n        return (\n          pairAddress && (\n            <div key={index}>\n              <ListItem key={index} index={(page - 1) * ITEMS_PER_PAGE + index + 1} pairAddress={pairAddress} />\n              <Divider />\n            </div>\n          )\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid\n        center={true}\n        disbaleLinks={disbaleLinks}\n        style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}\n      >\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <TYPE.main area=\"name\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"liq\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.LIQ)\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\n            }}\n          >\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"vol\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VOL)\n              setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection)\n            }}\n          >\n            Volume (24hrs)\n            {sortedColumn === SORT_FIELD.VOL ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"volWeek\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.VOL_7DAYS)\n                setSortDirection(sortedColumn !== SORT_FIELD.VOL_7DAYS ? true : !sortDirection)\n              }}\n            >\n              Volume (7d) {sortedColumn === SORT_FIELD.VOL_7DAYS ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"fees\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.FEES)\n                setSortDirection(sortedColumn !== SORT_FIELD.FEES ? true : !sortDirection)\n              }}\n            >\n              Fees (24hr) {sortedColumn === SORT_FIELD.FEES ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"apy\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.APY)\n                setSortDirection(sortedColumn !== SORT_FIELD.APY ? true : !sortDirection)\n              }}\n            >\n              1y Fees / Liquidity {sortedColumn === SORT_FIELD.APY ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n            <QuestionHelper text={'Based on 24hr volume annualized'} />\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!pairList ? <LocalLoader /> : pairList}</List>\n      <PageButtons>\n        <div\n          onClick={(e) => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div\n          onClick={(e) => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PairList)\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport TokenLogo from '../TokenLogo'\r\nimport { CustomLink } from '../Link'\r\nimport Row from '../Row'\r\nimport { Divider } from '..'\r\n\r\nimport { formattedNum, formattedPercent } from '../../utils'\r\nimport { useMedia } from 'react-use'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { OVERVIEW_TOKEN_BLACKLIST } from '../../constants'\r\nimport FormattedName from '../FormattedName'\r\nimport { TYPE } from '../../Theme'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 2em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: ${({ theme }) => theme.primary1};\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 100px 1fr 1fr;\r\n  grid-template-areas: 'name liq vol';\r\n  padding: 0 1.125rem;\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n\r\n    &:first-child {\r\n      justify-content: flex-start;\r\n      text-align: left;\r\n      width: 100px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 680px) {\r\n    display: grid;\r\n    grid-gap: 1em;\r\n    grid-template-columns: 180px 1fr 1fr 1fr;\r\n    grid-template-areas: 'name symbol liq vol ';\r\n\r\n    > * {\r\n      justify-content: flex-end;\r\n      width: 100%;\r\n\r\n      &:first-child {\r\n        justify-content: flex-start;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1080px) {\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n    grid-template-columns: 1.5fr 0.6fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'name symbol liq vol price change';\r\n  }\r\n`\r\n\r\nconst ListWrapper = styled.div``\r\n\r\nconst ClickableText = styled(Text)`\r\n  text-align: end;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n  user-select: none;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 0.85rem;\r\n  }\r\n`\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  & > * {\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  LIQ: 'totalLiquidityUSD',\r\n  VOL: 'oneDayVolumeUSD',\r\n  SYMBOL: 'symbol',\r\n  NAME: 'name',\r\n  PRICE: 'priceUSD',\r\n  CHANGE: 'priceChangeUSD',\r\n}\r\n\r\n// @TODO rework into virtualized list\r\nfunction TopTokenList({ tokens, itemMax = 10 }) {\r\n  // page state\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n\r\n  // sorting\r\n  const [sortDirection, setSortDirection] = useState(true)\r\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below680 = useMedia('(max-width: 680px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [tokens])\r\n\r\n  const formattedTokens = useMemo(() => {\r\n    return (\r\n      tokens &&\r\n      Object.keys(tokens)\r\n        .filter((key) => {\r\n          return !OVERVIEW_TOKEN_BLACKLIST.includes(key)\r\n        })\r\n        .map((key) => tokens[key])\r\n    )\r\n  }, [tokens])\r\n\r\n  useEffect(() => {\r\n    if (tokens && formattedTokens) {\r\n      let extraPages = 1\r\n      if (formattedTokens.length % itemMax === 0) {\r\n        extraPages = 0\r\n      }\r\n      setMaxPage(Math.floor(formattedTokens.length / itemMax) + extraPages)\r\n    }\r\n  }, [tokens, formattedTokens, itemMax])\r\n\r\n  const filteredList = useMemo(() => {\r\n    return (\r\n      formattedTokens &&\r\n      formattedTokens\r\n        .sort((a, b) => {\r\n          if (sortedColumn === SORT_FIELD.SYMBOL || sortedColumn === SORT_FIELD.NAME) {\r\n            return a[sortedColumn] > b[sortedColumn] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\r\n          }\r\n          return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\r\n            ? (sortDirection ? -1 : 1) * 1\r\n            : (sortDirection ? -1 : 1) * -1\r\n        })\r\n        .slice(itemMax * (page - 1), page * itemMax)\r\n    )\r\n  }, [formattedTokens, itemMax, page, sortDirection, sortedColumn])\r\n\r\n  const ListItem = ({ item, index }) => {\r\n    return (\r\n      <DashGrid style={{ height: '48px' }} focus={true}>\r\n        <DataText area=\"name\" fontWeight=\"500\">\r\n          <Row>\r\n            {!below680 && <div style={{ marginRight: '1rem', width: '10px' }}>{index}</div>}\r\n            <TokenLogo address={item.id} />\r\n            <CustomLink style={{ marginLeft: '16px', whiteSpace: 'nowrap' }} to={'/token/' + item.id}>\r\n              <FormattedName\r\n                text={below680 ? item.symbol : item.name}\r\n                maxCharacters={below600 ? 8 : 16}\r\n                adjustSize={true}\r\n                link={true}\r\n              />\r\n            </CustomLink>\r\n          </Row>\r\n        </DataText>\r\n        {!below680 && (\r\n          <DataText area=\"symbol\" color=\"text\" fontWeight=\"500\">\r\n            <FormattedName text={item.symbol} maxCharacters={5} />\r\n          </DataText>\r\n        )}\r\n        <DataText area=\"liq\">{formattedNum(item.totalLiquidityUSD, true)}</DataText>\r\n        <DataText area=\"vol\">{formattedNum(item.oneDayVolumeUSD, true)}</DataText>\r\n        {!below1080 && (\r\n          <DataText area=\"price\" fontWeight=\"500\">\r\n            {formattedNum(item.priceUSD, true)}\r\n          </DataText>\r\n        )}\r\n        {!below1080 && <DataText area=\"change\">{formattedPercent(item.priceChangeUSD)}</DataText>}\r\n      </DashGrid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}>\r\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\r\n          <ClickableText\r\n            area=\"name\"\r\n            fontWeight=\"500\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.NAME)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.NAME ? true : !sortDirection)\r\n            }}\r\n          >\r\n            {below680 ? 'Symbol' : 'Name'} {sortedColumn === SORT_FIELD.NAME ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below680 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"symbol\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.SYMBOL)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.SYMBOL ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Symbol {sortedColumn === SORT_FIELD.SYMBOL ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n\r\n        <Flex alignItems=\"center\">\r\n          <ClickableText\r\n            area=\"liq\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.LIQ)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        <Flex alignItems=\"center\">\r\n          <ClickableText\r\n            area=\"vol\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.VOL)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Volume (24hrs)\r\n            {sortedColumn === SORT_FIELD.VOL ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below1080 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"price\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.PRICE)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.PRICE ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Price {sortedColumn === SORT_FIELD.PRICE ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n        {!below1080 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"change\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.CHANGE)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.CHANGE ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Price Change (24hrs)\r\n              {sortedColumn === SORT_FIELD.CHANGE ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>\r\n        {filteredList &&\r\n          filteredList.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <ListItem key={index} index={(page - 1) * itemMax + index + 1} item={item} />\r\n                <Divider />\r\n              </div>\r\n            )\r\n          })}\r\n      </List>\r\n      <PageButtons>\r\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\r\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\r\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </ListWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(TopTokenList)\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Row, { RowBetween } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\nimport { ChevronDown as Arrow } from 'react-feather'\r\nimport { TYPE } from '../../Theme'\r\nimport { StyledIcon } from '..'\r\n\r\nconst Wrapper = styled.div`\r\n  z-index: 20;\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  border: 1px solid ${({ open, color }) => (open ? color : 'rgba(0, 0, 0, 0.15);')} \r\n  width: 100px;\r\n  padding: 4px 10px;\r\n  padding-right: 6px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Dropdown = styled.div`\r\n  position: absolute;\r\n  top: 34px;\r\n  padding-top: 40px;\r\n  width: calc(100% - 40px);\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  border: 1px solid rgba(0, 0, 0, 0.15);\r\n  padding: 10px 10px;\r\n  border-radius: 8px;\r\n  width: calc(100% - 20px);\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n  color: black;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ArrowStyled = styled(Arrow)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-left: 6px;\r\n`\r\n\r\nconst DropdownSelect = ({ options, active, setActive, color }) => {\r\n  const [showDropdown, toggleDropdown] = useState(false)\r\n\r\n  return (\r\n    <Wrapper open={showDropdown} color={color}>\r\n      <RowBetween onClick={() => toggleDropdown(!showDropdown)} justify=\"center\">\r\n        <TYPE.main>{active}</TYPE.main>\r\n        <StyledIcon>\r\n          <ArrowStyled />\r\n        </StyledIcon>\r\n      </RowBetween>\r\n      {showDropdown && (\r\n        <Dropdown>\r\n          <AutoColumn gap=\"20px\">\r\n            {Object.keys(options).map((key, index) => {\r\n              let option = options[key]\r\n              return (\r\n                option !== active && (\r\n                  <Row\r\n                    onClick={() => {\r\n                      toggleDropdown(!showDropdown)\r\n                      setActive(option)\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    <TYPE.body fontSize={14}>{option}</TYPE.body>\r\n                  </Row>\r\n                )\r\n              )\r\n            })}\r\n          </AutoColumn>\r\n        </Dropdown>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DropdownSelect\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport { formatTime, formattedNum, urls } from '../../utils'\r\nimport { useMedia } from 'react-use'\r\nimport { useCurrentCurrency } from '../../contexts/Application'\r\nimport { RowFixed, RowBetween } from '../Row'\r\n\r\nimport LocalLoader from '../LocalLoader'\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport Link from '../Link'\r\nimport { Divider, EmptyCard } from '..'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport FormattedName from '../FormattedName'\r\nimport { TYPE } from '../../Theme'\r\nimport { updateNameData } from '../../utils/data'\r\n\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: ${({ theme }) => theme.grey};\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n   color: ${({ theme }) => theme.white};\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 100px 1fr 1fr;\r\n  grid-template-areas: 'txn value time';\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n\r\n    &:first-child {\r\n      justify-content: flex-start;\r\n      text-align: left;\r\n      width: 100px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 500px) {\r\n    > * {\r\n      &:first-child {\r\n        width: 180px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 780px) {\r\n    max-width: 1320px;\r\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'txn value amountToken amountOther time';\r\n\r\n    > * {\r\n      &:first-child {\r\n        width: 180px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1080px) {\r\n    max-width: 1320px;\r\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'txn value amountToken amountOther account time';\r\n  }\r\n`\r\n\r\nconst ClickableText = styled(Text)`\r\n  color: ${({ theme }) => theme.text1};\r\n  user-select: none;\r\n  text-align: end;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: right;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  & > * {\r\n    font-size: 1em;\r\n  }\r\n\r\n  @media screen and (max-width: 40em) {\r\n    font-size: 0.85rem;\r\n  }\r\n`\r\n\r\nconst SortText = styled.button`\r\n  cursor: pointer;\r\n  font-weight: ${({ active, theme }) => (active ? 500 : 400)};\r\n  margin-right: 0.75rem !important;\r\n  border: none;\r\n  background-color: transparent;\r\n  font-size: 1rem;\r\n  padding: 0px;\r\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text3)};\r\n  outline: none;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  VALUE: 'amountUSD',\r\n  AMOUNT0: 'token0Amount',\r\n  AMOUNT1: 'token1Amount',\r\n  TIMESTAMP: 'timestamp',\r\n}\r\n\r\nconst TXN_TYPE = {\r\n  ALL: 'All',\r\n  SWAP: 'Swaps',\r\n  ADD: 'Adds',\r\n  REMOVE: 'Removes',\r\n}\r\n\r\nconst ITEMS_PER_PAGE = 10\r\n\r\nfunction getTransactionType(event, symbol0, symbol1) {\r\n  const formattedS0 = symbol0?.length > 8 ? symbol0.slice(0, 7) + '...' : symbol0\r\n  const formattedS1 = symbol1?.length > 8 ? symbol1.slice(0, 7) + '...' : symbol1\r\n  switch (event) {\r\n    case TXN_TYPE.ADD:\r\n      return 'Add ' + formattedS0 + ' and ' + formattedS1\r\n    case TXN_TYPE.REMOVE:\r\n      return 'Remove ' + formattedS0 + ' and ' + formattedS1\r\n    case TXN_TYPE.SWAP:\r\n      return 'Swap ' + formattedS0 + ' for ' + formattedS1\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n\r\nfunction TxnList({ transactions, symbol0Override, symbol1Override, color }) {\r\n  // page state\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n\r\n  // sorting\r\n  const [sortDirection, setSortDirection] = useState(true)\r\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.TIMESTAMP)\r\n  const [filteredItems, setFilteredItems] = useState()\r\n  const [txFilter, setTxFilter] = useState(TXN_TYPE.ALL)\r\n\r\n  const [currency] = useCurrentCurrency()\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [transactions])\r\n\r\n  // parse the txns and format for UI\r\n  useEffect(() => {\r\n    if (transactions && transactions.mints && transactions.burns && transactions.swaps) {\r\n      let newTxns = []\r\n      if (transactions.mints.length > 0) {\r\n        transactions.mints.map((mint) => {\r\n          let newTxn = {}\r\n          newTxn.hash = mint.transaction.id\r\n          newTxn.timestamp = mint.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.ADD\r\n          newTxn.token0Amount = mint.amount0\r\n          newTxn.token1Amount = mint.amount1\r\n          newTxn.account = mint.to\r\n          newTxn.token0Symbol = updateNameData(mint.pair).token0.symbol\r\n          newTxn.token1Symbol = updateNameData(mint.pair).token1.symbol\r\n          newTxn.amountUSD = mint.amountUSD\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n      if (transactions.burns.length > 0) {\r\n        transactions.burns.map((burn) => {\r\n          let newTxn = {}\r\n          newTxn.hash = burn.transaction.id\r\n          newTxn.timestamp = burn.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.REMOVE\r\n          newTxn.token0Amount = burn.amount0\r\n          newTxn.token1Amount = burn.amount1\r\n          newTxn.account = burn.sender\r\n          newTxn.token0Symbol = updateNameData(burn.pair).token0.symbol\r\n          newTxn.token1Symbol = updateNameData(burn.pair).token1.symbol\r\n          newTxn.amountUSD = burn.amountUSD\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n      if (transactions.swaps.length > 0) {\r\n        transactions.swaps.map((swap) => {\r\n          const netToken0 = swap.amount0In - swap.amount0Out\r\n          const netToken1 = swap.amount1In - swap.amount1Out\r\n\r\n          let newTxn = {}\r\n\r\n          if (netToken0 < 0) {\r\n            newTxn.token0Symbol = updateNameData(swap.pair).token0.symbol\r\n            newTxn.token1Symbol = updateNameData(swap.pair).token1.symbol\r\n            newTxn.token0Amount = Math.abs(netToken0)\r\n            newTxn.token1Amount = Math.abs(netToken1)\r\n          } else if (netToken1 < 0) {\r\n            newTxn.token0Symbol = updateNameData(swap.pair).token1.symbol\r\n            newTxn.token1Symbol = updateNameData(swap.pair).token0.symbol\r\n            newTxn.token0Amount = Math.abs(netToken1)\r\n            newTxn.token1Amount = Math.abs(netToken0)\r\n          }\r\n\r\n          newTxn.hash = swap.transaction.id\r\n          newTxn.timestamp = swap.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.SWAP\r\n\r\n          newTxn.amountUSD = swap.amountUSD\r\n          newTxn.account = swap.to\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n\r\n      const filtered = newTxns.filter((item) => {\r\n        if (txFilter !== TXN_TYPE.ALL) {\r\n          return item.type === txFilter\r\n        }\r\n        return true\r\n      })\r\n      setFilteredItems(filtered)\r\n      let extraPages = 1\r\n      if (filtered.length % ITEMS_PER_PAGE === 0) {\r\n        extraPages = 0\r\n      }\r\n      if (filtered.length === 0) {\r\n        setMaxPage(1)\r\n      } else {\r\n        setMaxPage(Math.floor(filtered.length / ITEMS_PER_PAGE) + extraPages)\r\n      }\r\n    }\r\n  }, [transactions, txFilter])\r\n\r\n  useEffect(() => {\r\n    setPage(1)\r\n  }, [txFilter])\r\n\r\n  const filteredList =\r\n    filteredItems &&\r\n    filteredItems\r\n      .sort((a, b) => {\r\n        return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\r\n          ? (sortDirection ? -1 : 1) * 1\r\n          : (sortDirection ? -1 : 1) * -1\r\n      })\r\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below780 = useMedia('(max-width: 780px)')\r\n\r\n  const ListItem = ({ item }) => {\r\n    if(item.token0Amount === null) {\r\n      return true\r\n    } else {\r\n\r\n    return (\r\n      <DashGrid style={{ height: '48px' }}>\r\n        <DataText area=\"txn\" fontWeight=\"500\">\r\n          <Link external href={urls.showTransaction(item.hash)}>\r\n            {getTransactionType(item.type, item.token1Symbol, item.token0Symbol)}\r\n          </Link>\r\n        </DataText>\r\n        <DataText area=\"value\">\r\n          {currency === 'ETH' ? 'Ξ ' + formattedNum(item.valueETH) : formattedNum(item.amountUSD, true)}\r\n        </DataText>\r\n        {!below780 && (\r\n          <>\r\n            <DataText area=\"amountOther\">\r\n              {formattedNum(item.token1Amount) + ' '}{' '}\r\n              <FormattedName text={item.token1Symbol} maxCharacters={5} margin={true} />\r\n            </DataText>\r\n            <DataText area=\"amountToken\">\r\n              {formattedNum(item.token0Amount) + ' '}{' '}\r\n              <FormattedName text={item.token0Symbol} maxCharacters={5} margin={true} />\r\n            </DataText>\r\n          </>\r\n        )}\r\n        {!below1080 && (\r\n          <DataText area=\"account\">\r\n            <Link color={color} external href={'https://etherscan.io/address/' + item.account}>\r\n              {item.account && item.account.slice(0, 6) + '...' + item.account.slice(38, 42)}\r\n            </Link>\r\n          </DataText>\r\n        )}\r\n        <DataText area=\"time\">{formatTime(item.timestamp)}</DataText>\r\n      </DashGrid>\r\n    )\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\r\n        {below780 ? (\r\n          <RowBetween area=\"txn\">\r\n            <DropdownSelect options={TXN_TYPE} active={txFilter} setActive={setTxFilter} color={color} />\r\n          </RowBetween>\r\n        ) : (\r\n          <RowFixed area=\"txn\" gap=\"10px\" pl={4}>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.ALL)\r\n              }}\r\n              active={txFilter === TXN_TYPE.ALL}\r\n            >\r\n              All\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.SWAP)\r\n              }}\r\n              active={txFilter === TXN_TYPE.SWAP}\r\n            >\r\n              Swaps\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.ADD)\r\n              }}\r\n              active={txFilter === TXN_TYPE.ADD}\r\n            >\r\n              Adds\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.REMOVE)\r\n              }}\r\n              active={txFilter === TXN_TYPE.REMOVE}\r\n            >\r\n              Removes\r\n            </SortText>\r\n          </RowFixed>\r\n        )}\r\n\r\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\r\n          <ClickableText\r\n            color=\"textDim\"\r\n            area=\"value\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.VALUE)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Total Value {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below780 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"amountToken\"\r\n              color=\"textDim\"\r\n              onClick={() => {\r\n                setSortedColumn(SORT_FIELD.AMOUNT0)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT0 ? true : !sortDirection)\r\n              }}\r\n            >\r\n              {symbol0Override ? symbol0Override + ' Amount' : 'Token Amount'}{' '}\r\n              {sortedColumn === SORT_FIELD.AMOUNT0 ? (sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n        <>\r\n          {!below780 && (\r\n            <Flex alignItems=\"center\">\r\n              <ClickableText\r\n                area=\"amountOther\"\r\n                color=\"textDim\"\r\n                onClick={() => {\r\n                  setSortedColumn(SORT_FIELD.AMOUNT1)\r\n                  setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT1 ? true : !sortDirection)\r\n                }}\r\n              >\r\n                {symbol1Override ? symbol1Override + ' Amount' : 'Token Amount'}{' '}\r\n                {sortedColumn === SORT_FIELD.AMOUNT1 ? (sortDirection ? '↑' : '↓') : ''}\r\n              </ClickableText>\r\n            </Flex>\r\n          )}\r\n          {!below1080 && (\r\n            <Flex alignItems=\"center\">\r\n              <TYPE.body area=\"account\">Account</TYPE.body>\r\n            </Flex>\r\n          )}\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"time\"\r\n              color=\"textDim\"\r\n              onClick={() => {\r\n                setSortedColumn(SORT_FIELD.TIMESTAMP)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.TIMESTAMP ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Time {sortedColumn === SORT_FIELD.TIMESTAMP ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        </>\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>\r\n        {!filteredList ? (\r\n          <LocalLoader />\r\n        ) : filteredList.length === 0 ? (\r\n          <EmptyCard>No recent transactions found.</EmptyCard>\r\n        ) : (\r\n          filteredList.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <ListItem key={index} index={index + 1} item={item} />\r\n                <Divider />\r\n              </div>\r\n            )\r\n          })\r\n        )}\r\n      </List>\r\n      <PageButtons>\r\n        <div\r\n          onClick={(e) => {\r\n            setPage(page === 1 ? page : page - 1)\r\n          }}\r\n        >\r\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div\r\n          onClick={(e) => {\r\n            setPage(page === maxPage ? page : page + 1)\r\n          }}\r\n        >\r\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TxnList\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { createChart } from 'lightweight-charts'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { formattedNum } from '../../utils'\r\nimport styled from 'styled-components'\r\nimport { usePrevious } from 'react-use'\r\nimport { Play } from 'react-feather'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\nimport { IconWrapper } from '..'\r\n\r\ndayjs.extend(utc)\r\n\r\nexport const CHART_TYPES = {\r\n  BAR: 'BAR',\r\n  AREA: 'AREA',\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\n// constant height for charts\r\nconst HEIGHT = 300\r\n\r\nconst TradingViewChart = ({\r\n  type = CHART_TYPES.BAR,\r\n  data,\r\n  base,\r\n  baseChange,\r\n  field,\r\n  title,\r\n  width,\r\n  useWeekly = false,\r\n}) => {\r\n  // reference for DOM element to create with chart\r\n  const ref = useRef()\r\n\r\n  // pointer to the chart object\r\n  const [chartCreated, setChartCreated] = useState(false)\r\n  const dataPrev = usePrevious(data)\r\n\r\n  useEffect(() => {\r\n    if (data !== dataPrev && chartCreated && type === CHART_TYPES.BAR) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id' + type)\r\n      let node = document.getElementById('test-id' + type)\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, data, dataPrev, type])\r\n\r\n  // parese the data and format for tardingview consumption\r\n  const formattedData = data?.map((entry) => {\r\n    return {\r\n      time: dayjs.unix(entry.date).utc().format('YYYY-MM-DD'),\r\n      value: parseFloat(entry[field]),\r\n    }\r\n  })\r\n\r\n  // adjust the scale based on the type of chart\r\n  const topScale = type === CHART_TYPES.AREA ? 0.32 : 0.2\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n  const previousTheme = usePrevious(darkMode)\r\n\r\n  // reset the chart if them switches\r\n  useEffect(() => {\r\n    if (chartCreated && previousTheme !== darkMode) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id' + type)\r\n      let node = document.getElementById('test-id' + type)\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, darkMode, previousTheme, type])\r\n\r\n  // if no chart created yet, create one with options and add to DOM manually\r\n  useEffect(() => {\r\n    if (!chartCreated && formattedData) {\r\n      var chart = createChart(ref.current, {\r\n        width: width,\r\n        height: HEIGHT,\r\n        layout: {\r\n          backgroundColor: 'transparent',\r\n          textColor: textColor,\r\n        },\r\n        rightPriceScale: {\r\n          scaleMargins: {\r\n            top: topScale,\r\n            bottom: 0,\r\n          },\r\n          borderVisible: false,\r\n        },\r\n        timeScale: {\r\n          borderVisible: false,\r\n        },\r\n        grid: {\r\n          horzLines: {\r\n            color: 'rgba(197, 203, 206, 0.5)',\r\n            visible: false,\r\n          },\r\n          vertLines: {\r\n            color: 'rgba(197, 203, 206, 0.5)',\r\n            visible: false,\r\n          },\r\n        },\r\n        crosshair: {\r\n          horzLine: {\r\n            visible: false,\r\n            labelVisible: false,\r\n          },\r\n          vertLine: {\r\n            visible: true,\r\n            style: 0,\r\n            width: 2,\r\n            color: 'rgba(32, 38, 46, 0.1)',\r\n            labelVisible: false,\r\n          },\r\n        },\r\n        localization: {\r\n          priceFormatter: (val) => formattedNum(val, true),\r\n        },\r\n      })\r\n\r\n      var series =\r\n        type === CHART_TYPES.BAR\r\n          ? chart.addHistogramSeries({\r\n              color: '#bebebe',\r\n              priceFormat: {\r\n                type: 'volume',\r\n              },\r\n              scaleMargins: {\r\n                top: 0.32,\r\n                bottom: 0,\r\n              },\r\n              lineColor: '#dddddd',\r\n              lineWidth: 3,\r\n            })\r\n          : chart.addAreaSeries({\r\n              topColor: '#bebebe',\r\n              bottomColor: 'rgba(255, 255, 255, 0)',\r\n              lineColor: '#bebebe',\r\n              lineWidth: 3,\r\n            })\r\n\r\n      series.setData(formattedData)\r\n      var toolTip = document.createElement('div')\r\n      toolTip.setAttribute('id', 'tooltip-id' + type)\r\n      toolTip.className = darkMode ? 'three-line-legend-dark' : 'three-line-legend'\r\n      ref.current.appendChild(toolTip)\r\n      toolTip.style.display = 'block'\r\n      toolTip.style.fontWeight = '500'\r\n      toolTip.style.left = -4 + 'px'\r\n      toolTip.style.top = '-' + 8 + 'px'\r\n      toolTip.style.backgroundColor = 'transparent'\r\n\r\n      // format numbers\r\n      let percentChange = baseChange?.toFixed(2)\r\n      let formattedPercentChange = (percentChange > 0 ? '+' : '') + percentChange + '%'\r\n      let color = percentChange >= 0 ? 'green' : 'red'\r\n\r\n      // get the title of the chart\r\n      function setLastBarText() {\r\n        toolTip.innerHTML =\r\n          `<div style=\"font-size: 16px; margin: 4px 0px; color: ${textColor};\">${title} ${\r\n            type === CHART_TYPES.BAR && !useWeekly ? '(24hr)' : ''\r\n          }</div>` +\r\n          `<div style=\"font-size: 22px; margin: 4px 0px; color:${textColor}\" >` +\r\n          formattedNum(base ?? 0, true) +\r\n          `<span style=\"margin-left: 10px; font-size: 16px; color: ${color};\">${formattedPercentChange}</span>` +\r\n          '</div>'\r\n      }\r\n      setLastBarText()\r\n\r\n      // update the title when hovering on the chart\r\n      chart.subscribeCrosshairMove(function (param) {\r\n        if (\r\n          param === undefined ||\r\n          param.time === undefined ||\r\n          param.point.x < 0 ||\r\n          param.point.x > width ||\r\n          param.point.y < 0 ||\r\n          param.point.y > HEIGHT\r\n        ) {\r\n          setLastBarText()\r\n        } else {\r\n          let dateStr = useWeekly\r\n            ? dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\r\n                .startOf('week')\r\n                .format('MMMM D, YYYY') +\r\n              '-' +\r\n              dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\r\n                .endOf('week')\r\n                .format('MMMM D, YYYY')\r\n            : dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day).format('MMMM D, YYYY')\r\n          var price = param.seriesPrices.get(series)\r\n\r\n          toolTip.innerHTML =\r\n            `<div style=\"font-size: 16px; margin: 4px 0px; color: ${textColor};\">${title}</div>` +\r\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\r\n            formattedNum(price, true) +\r\n            '</div>' +\r\n            '<div>' +\r\n            dateStr +\r\n            '</div>'\r\n        }\r\n      })\r\n\r\n      chart.timeScale().fitContent()\r\n\r\n      setChartCreated(chart)\r\n    }\r\n  }, [\r\n    base,\r\n    baseChange,\r\n    chartCreated,\r\n    darkMode,\r\n    data,\r\n    formattedData,\r\n    textColor,\r\n    title,\r\n    topScale,\r\n    type,\r\n    useWeekly,\r\n    width,\r\n  ])\r\n\r\n  // responsiveness\r\n  useEffect(() => {\r\n    if (width) {\r\n      chartCreated && chartCreated.resize(width, HEIGHT)\r\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\r\n    }\r\n  }, [chartCreated, width])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div ref={ref} id={'test-id' + type} />\r\n      <IconWrapper>\r\n        <Play\r\n          onClick={() => {\r\n            chartCreated && chartCreated.timeScale().fitContent()\r\n          }}\r\n        />\r\n      </IconWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TradingViewChart\r\n","import React from 'react'\r\nimport { Button as RebassButton } from 'rebass/styled-components'\r\nimport styled from 'styled-components'\r\nimport { Plus, ChevronDown, ChevronUp } from 'react-feather'\r\nimport { darken, transparentize } from 'polished'\r\nimport { RowBetween } from '../Row'\r\nimport { StyledIcon } from '..'\r\n\r\nconst Base = styled(RebassButton)`\r\n  padding: 8px 12px;\r\n  font-size: 0.825rem;\r\n  font-weight: 600;\r\n  border-radius: 12px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: 1px solid transparent;\r\n  outline: none;\r\n  border-bottom-right-radius: ${({ open }) => open && '0'};\r\n  border-bottom-left-radius: ${({ open }) => open && '0'};\r\n`\r\n\r\nconst BaseCustom = styled(RebassButton)`\r\n  padding: 16px 12px;\r\n  font-size: 0.825rem;\r\n  font-weight: 400;\r\n  border-radius: 12px;\r\n  cursor: pointer;\r\n  outline: none;\r\n`\r\n\r\nconst Dull = styled(Base)`\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  color: black;\r\n  height: 100%;\r\n  font-weight: 400;\r\n  &:hover,\r\n  :focus {\r\n    background-color: rgba(255, 255, 255, 0.25);\r\n    border-color: rgba(255, 255, 255, 0.25);\r\n  }\r\n  &:focus {\r\n    box-shadow: 0 0 0 1pt rgba(255, 255, 255, 0.25);\r\n  }\r\n  &:active {\r\n    background-color: rgba(255, 255, 255, 0.25);\r\n    border-color: rgba(255, 255, 255, 0.25);\r\n  }\r\n`\r\n\r\nexport default function ButtonStyled({ children, ...rest }) {\r\n  return <Base {...rest}>{children}</Base>\r\n}\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const ButtonLight = styled(Base)`\r\n  background-color: ${({ color, theme }) => (color ? transparentize(0.9, color) : transparentize(0.9, theme.primary1))};\r\n  color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\r\n\r\n  min-width: fit-content;\r\n  border-radius: 12px;\r\n  white-space: nowrap;\r\n\r\n  a {\r\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\r\n  }\r\n\r\n  :hover {\r\n    background-color: ${({ color, theme }) =>\r\n      color ? transparentize(0.8, color) : transparentize(0.8, theme.primary1)};\r\n  }\r\n`\r\n\r\nexport function ButtonDropdown({ disabled = false, children, open, ...rest }) {\r\n  return (\r\n    <ButtonFaded {...rest} disabled={disabled} open={open}>\r\n      <RowBetween>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\r\n        {open ? (\r\n          <StyledIcon>\r\n            <ChevronUp size={24} />\r\n          </StyledIcon>\r\n        ) : (\r\n          <StyledIcon>\r\n            <ChevronDown size={24} />\r\n          </StyledIcon>\r\n        )}\r\n      </RowBetween>\r\n    </ButtonFaded>\r\n  )\r\n}\r\n\r\nexport const ButtonDark = styled(Base)`\r\n  background-color: ${({ color, theme }) => (color ? color : theme.primary1)};\r\n  color: white;\r\n  width: fit-content;\r\n  border-radius: 12px;\r\n  white-space: nowrap;\r\n\r\n  :hover {\r\n    background-color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.primary1))};\r\n  }\r\n`\r\n\r\nexport const ButtonFaded = styled(Base)`\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  color: (255, 255, 255, 0.5);\r\n  white-space: nowrap;\r\n\r\n  :hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\nexport function ButtonPlusDull({ disabled, children, ...rest }) {\r\n  return (\r\n    <Dull {...rest}>\r\n      <ContentWrapper>\r\n        <Plus size={16} />\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\r\n      </ContentWrapper>\r\n    </Dull>\r\n  )\r\n}\r\n\r\nexport function ButtonCustom({ children, bgColor, color, ...rest }) {\r\n  return (\r\n    <BaseCustom bg={bgColor} color={color} {...rest}>\r\n      {children}\r\n    </BaseCustom>\r\n  )\r\n}\r\n\r\nexport const OptionButton = styled.div`\r\n  font-weight: 500;\r\n  width: fit-content;\r\n  white-space: nowrap;\r\n  padding: 6px;\r\n  border-radius: 6px;\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n  background-color: ${({ active, theme }) => active && theme.bg3};\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  :hover {\r\n    cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  }\r\n`\r\n","import React, { useState, useMemo, useEffect, useRef } from 'react'\r\nimport { ResponsiveContainer } from 'recharts'\r\nimport { timeframeOptions } from '../../constants'\r\nimport { useGlobalChartData, useGlobalData } from '../../contexts/GlobalData'\r\nimport { useMedia } from 'react-use'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport TradingViewChart, { CHART_TYPES } from '../TradingviewChart'\r\nimport { RowFixed } from '../Row'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { getTimeframe } from '../../utils'\r\nimport { TYPE } from '../../Theme'\r\n\r\nconst CHART_VIEW = {\r\n  VOLUME: 'Volume',\r\n  LIQUIDITY: 'Liquidity',\r\n}\r\n\r\nconst VOLUME_WINDOW = {\r\n  WEEKLY: 'WEEKLY',\r\n  DAYS: 'DAYS',\r\n}\r\nconst GlobalChart = ({ display }) => {\r\n  // chart options\r\n  const [chartView, setChartView] = useState(display === 'volume' ? CHART_VIEW.VOLUME : CHART_VIEW.LIQUIDITY)\r\n\r\n  // time window and window size for chart\r\n  const timeWindow = timeframeOptions.ALL_TIME\r\n  const [volumeWindow, setVolumeWindow] = useState(VOLUME_WINDOW.DAYS)\r\n\r\n  // global historical data\r\n  const [dailyData, weeklyData] = useGlobalChartData()\r\n  const {\r\n    totalLiquidityUSD,\r\n    oneDayVolumeUSD,\r\n    volumeChangeUSD,\r\n    liquidityChangeUSD,\r\n    oneWeekVolume,\r\n    weeklyVolumeChange,\r\n  } = useGlobalData()\r\n\r\n  // based on window, get starttim\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n\r\n  const chartDataFiltered = useMemo(() => {\r\n    let currentData = volumeWindow === VOLUME_WINDOW.DAYS ? dailyData : weeklyData\r\n    return (\r\n      currentData &&\r\n      Object.keys(currentData)\r\n        ?.map((key) => {\r\n          let item = currentData[key]\r\n          if (item.date > utcStartTime) {\r\n            return item\r\n          } else {\r\n            return\r\n          }\r\n        })\r\n        .filter((item) => {\r\n          return !!item\r\n        })\r\n    )\r\n  }, [dailyData, utcStartTime, volumeWindow, weeklyData])\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  // update the width on a window resize\r\n  const ref = useRef()\r\n  const isClient = typeof window === 'object'\r\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n    function handleResize() {\r\n      setWidth(ref?.current?.container?.clientWidth ?? width)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return chartDataFiltered ? (\r\n    <>\r\n      {below800 && (\r\n        <DropdownSelect options={CHART_VIEW} active={chartView} setActive={setChartView} color={'#295bdb'} />\r\n      )}\r\n\r\n      {chartDataFiltered && chartView === CHART_VIEW.LIQUIDITY && (\r\n        <ResponsiveContainer aspect={60 / 28} ref={ref}>\r\n          <TradingViewChart\r\n            data={dailyData}\r\n            base={totalLiquidityUSD}\r\n            baseChange={liquidityChangeUSD}\r\n            title=\"Liquidity\"\r\n            field=\"totalLiquidityUSD\"\r\n            width={width}\r\n            type={CHART_TYPES.AREA}\r\n          />\r\n        </ResponsiveContainer>\r\n      )}\r\n      {chartDataFiltered && chartView === CHART_VIEW.VOLUME && (\r\n        <ResponsiveContainer aspect={60 / 28}>\r\n          <TradingViewChart\r\n            data={chartDataFiltered}\r\n            base={volumeWindow === VOLUME_WINDOW.WEEKLY ? oneWeekVolume : oneDayVolumeUSD}\r\n            baseChange={volumeWindow === VOLUME_WINDOW.WEEKLY ? weeklyVolumeChange : volumeChangeUSD}\r\n            title={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'Volume (7d)' : 'Volume'}\r\n            field={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'weeklyVolumeUSD' : 'dailyVolumeUSD'}\r\n            width={width}\r\n            type={CHART_TYPES.BAR}\r\n            useWeekly={volumeWindow === VOLUME_WINDOW.WEEKLY}\r\n          />\r\n        </ResponsiveContainer>\r\n      )}\r\n      {display === 'volume' && (\r\n        <RowFixed\r\n          style={{\r\n            bottom: '70px',\r\n            position: 'absolute',\r\n            left: '20px',\r\n            zIndex: 10,\r\n          }}\r\n        >\r\n          <OptionButton\r\n            active={volumeWindow === VOLUME_WINDOW.DAYS}\r\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.DAYS)}\r\n          >\r\n            <TYPE.body>D</TYPE.body>\r\n          </OptionButton>\r\n          <OptionButton\r\n            style={{ marginLeft: '4px' }}\r\n            active={volumeWindow === VOLUME_WINDOW.WEEKLY}\r\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.WEEKLY)}\r\n          >\r\n            <TYPE.body>W</TYPE.body>\r\n          </OptionButton>\r\n        </RowFixed>\r\n      )}\r\n    </>\r\n  ) : (\r\n    ''\r\n  )\r\n}\r\n\r\nexport default GlobalChart\r\n","import React, { useState, useEffect, useMemo, useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Row, { RowFixed } from '../Row'\r\nimport TokenLogo from '../TokenLogo'\r\nimport { Search as SearchIcon, X } from 'react-feather'\r\nimport { BasicLink } from '../Link'\r\n\r\nimport { useAllTokenData, useTokenData } from '../../contexts/TokenData'\r\nimport { useAllPairData, usePairData } from '../../contexts/PairData'\r\nimport DoubleTokenLogo from '../DoubleLogo'\r\nimport { useMedia } from 'react-use'\r\nimport { useAllPairsInDarkHorse, useAllTokensInDarkHorse } from '../../contexts/GlobalData'\r\nimport { OVERVIEW_TOKEN_BLACKLIST, PAIR_BLACKLIST } from '../../constants'\r\n\r\nimport { transparentize } from 'polished'\r\nimport { client } from '../../apollo/client'\r\nimport { PAIR_SEARCH, TOKEN_SEARCH } from '../../apollo/queries'\r\nimport FormattedName from '../FormattedName'\r\nimport { TYPE } from '../../Theme'\r\nimport { updateNameData } from '../../utils/data'\r\n\r\nconst Container = styled.div`\r\n  height: 48px;\r\n  z-index: 30;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 12px 16px;\r\n  border-radius: 12px;\r\n  background: ${({ theme, small, open }) =>\r\n    small ? (open ? transparentize(0.4, theme.bg1) : 'none') : transparentize(0.4, theme.bg6)};\r\n  border-bottom-right-radius: ${({ open }) => (open ? '0px' : '12px')};\r\n  border-bottom-left-radius: ${({ open }) => (open ? '0px' : '12px')};\r\n  z-index: 9999;\r\n  width: 100%;\r\n  min-width: 300px;\r\n  box-sizing: border-box;\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n  box-shadow: ${({ open, small }) =>\r\n    !open && !small\r\n      ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\r\n      : 'none'};\r\n  @media screen and (max-width: 500px) {\r\n    background: ${({ theme }) => transparentize(0.4, theme.bg1)};\r\n    box-shadow: ${({ open }) =>\r\n      !open\r\n        ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\r\n        : 'none'};\r\n  }\r\n`\r\nconst Input = styled.input`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  width: 100%;\r\n  color: ${({ theme }) => theme.text1};\r\n  font-size: ${({ large }) => (large ? '20px' : '14px')};\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.text3};\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    ::placeholder {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst SearchIconLarge = styled(SearchIcon)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 0.5rem;\r\n  position: absolute;\r\n  right: 10px;\r\n  pointer-events: none;\r\n  color: ${({ theme }) => theme.text3};\r\n`\r\n\r\nconst CloseIcon = styled(X)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 0.5rem;\r\n  position: absolute;\r\n  right: 10px;\r\n  color: ${({ theme }) => theme.text3};\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 9999;\r\n  width: 100%;\r\n  top: 50px;\r\n  max-height: 540px;\r\n  overflow: auto;\r\n  left: 0;\r\n  padding-bottom: 20px;\r\n  background: ${({ theme }) => theme.bg6};\r\n  border-bottom-right-radius: 12px;\r\n  border-bottom-left-radius: 12px;\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.04);\r\n  display: ${({ hide }) => hide && 'none'};\r\n`\r\n\r\nconst MenuItem = styled(Row)`\r\n  padding: 1rem;\r\n  font-size: 0.85rem;\r\n  & > * {\r\n    margin-right: 6px;\r\n  }\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.bg2};\r\n  }\r\n`\r\n\r\nconst Heading = styled(Row)`\r\n  padding: 1rem;\r\n  display: ${({ hide = false }) => hide && 'none'};\r\n`\r\n\r\nconst Gray = styled.span`\r\n  color: #888d9b;\r\n`\r\n\r\nconst Blue = styled.span`\r\n  color: #bebebe;\r\n  :hover {\r\n    color: #ffffff;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const Search = ({ small = false }) => {\r\n  let allTokens = useAllTokensInDarkHorse()\r\n  const allTokenData = useAllTokenData()\r\n\r\n  let allPairs = useAllPairsInDarkHorse()\r\n  const allPairData = useAllPairData()\r\n\r\n  const [showMenu, toggleMenu] = useState(false)\r\n  const [value, setValue] = useState('')\r\n  const [, toggleShadow] = useState(false)\r\n  const [, toggleBottomShadow] = useState(false)\r\n\r\n  // fetch new data on tokens and pairs if needed\r\n  useTokenData(value)\r\n  usePairData(value)\r\n\r\n  const below700 = useMedia('(max-width: 700px)')\r\n  const below470 = useMedia('(max-width: 470px)')\r\n  const below410 = useMedia('(max-width: 410px)')\r\n\r\n  useEffect(() => {\r\n    if (value !== '') {\r\n      toggleMenu(true)\r\n    } else {\r\n      toggleMenu(false)\r\n    }\r\n  }, [value])\r\n\r\n  const [searchedTokens, setSearchedTokens] = useState([])\r\n  const [searchedPairs, setSearchedPairs] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        if (value?.length > 0) {\r\n          let tokens = await client.query({\r\n            query: TOKEN_SEARCH,\r\n            variables: {\r\n              value: value ? value.toUpperCase() : '',\r\n              id: value\r\n            }\r\n          })\r\n\r\n          let pairs = await client.query({\r\n            query: PAIR_SEARCH,\r\n            variables: {\r\n              tokens: tokens.data.asSymbol?.map(t => t.id),\r\n              id: value\r\n            }\r\n          })\r\n\r\n          setSearchedPairs(\r\n            updateNameData(pairs.data.as0)\r\n              .concat(updateNameData(pairs.data.as1))\r\n              .concat(updateNameData(pairs.data.asAddress))\r\n          )\r\n          const foundTokens = tokens.data.asSymbol.concat(tokens.data.asAddress).concat(tokens.data.asName)\r\n          setSearchedTokens(foundTokens)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [value])\r\n\r\n  function escapeRegExp(string) {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n  }\r\n\r\n  // add the searched tokens to the list if not found yet\r\n  allTokens = allTokens.concat(\r\n    searchedTokens.filter(searchedToken => {\r\n      let included = false\r\n      updateNameData()\r\n      allTokens.map(token => {\r\n        if (token.id === searchedToken.id) {\r\n          included = true\r\n        }\r\n        return true\r\n      })\r\n      return !included\r\n    })\r\n  )\r\n\r\n  let uniqueTokens = []\r\n  let found = {}\r\n  allTokens &&\r\n    allTokens.map(token => {\r\n      if (!found[token.id]) {\r\n        found[token.id] = true\r\n        uniqueTokens.push(token)\r\n      }\r\n      return true\r\n    })\r\n\r\n  allPairs = allPairs.concat(\r\n    searchedPairs.filter(searchedPair => {\r\n      let included = false\r\n      allPairs.map(pair => {\r\n        if (pair.id === searchedPair.id) {\r\n          included = true\r\n        }\r\n        return true\r\n      })\r\n      return !included\r\n    })\r\n  )\r\n\r\n  let uniquePairs = []\r\n  let pairsFound = {}\r\n  allPairs &&\r\n    allPairs.map(pair => {\r\n      if (!pairsFound[pair.id]) {\r\n        pairsFound[pair.id] = true\r\n        uniquePairs.push(pair)\r\n      }\r\n      return true\r\n    })\r\n\r\n  const filteredTokenList = useMemo(() => {\r\n    return uniqueTokens\r\n      ? uniqueTokens\r\n          .sort((a, b) => {\r\n            if (OVERVIEW_TOKEN_BLACKLIST.includes(a.id)) {\r\n              return 1\r\n            }\r\n            if (OVERVIEW_TOKEN_BLACKLIST.includes(b.id)) {\r\n              return -1\r\n            }\r\n            const tokenA = allTokenData[a.id]\r\n            const tokenB = allTokenData[b.id]\r\n            if (tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\r\n              return tokenA.oneDayVolumeUSD > tokenB.oneDayVolumeUSD ? -1 : 1\r\n            }\r\n            if (tokenA?.oneDayVolumeUSD && !tokenB?.oneDayVolumeUSD) {\r\n              return -1\r\n            }\r\n            if (!tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\r\n              return tokenA?.totalLiquidity > tokenB?.totalLiquidity ? -1 : 1\r\n            }\r\n            return 1\r\n          })\r\n          .filter(token => {\r\n            if (OVERVIEW_TOKEN_BLACKLIST.includes(token.id)) {\r\n              return false\r\n            }\r\n            const regexMatches = Object.keys(token).map(tokenEntryKey => {\r\n              const isAddress = value.slice(0, 2) === '0x'\r\n              if (tokenEntryKey === 'id' && isAddress) {\r\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n              }\r\n              if (tokenEntryKey === 'symbol' && !isAddress) {\r\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n              }\r\n              if (tokenEntryKey === 'name' && !isAddress) {\r\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n              }\r\n              return false\r\n            })\r\n            return regexMatches.some(m => m)\r\n          })\r\n      : []\r\n  }, [allTokenData, uniqueTokens, value])\r\n\r\n  const filteredPairList = useMemo(() => {\r\n    return uniquePairs\r\n      ? uniquePairs\r\n          .sort((a, b) => {\r\n            const pairA = allPairData[a.id]\r\n            const pairB = allPairData[b.id]\r\n            if (pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\r\n              return parseFloat(pairA.trackedReserveETH) > parseFloat(pairB.trackedReserveETH) ? -1 : 1\r\n            }\r\n            if (pairA?.trackedReserveETH && !pairB?.trackedReserveETH) {\r\n              return -1\r\n            }\r\n            if (!pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\r\n              return 1\r\n            }\r\n            return 0\r\n          })\r\n          .filter(pair => {\r\n            if (PAIR_BLACKLIST.includes(pair.id)) {\r\n              return false\r\n            }\r\n            if (value && value.includes(' ')) {\r\n              const pairA = value.split(' ')[0]?.toUpperCase()\r\n              const pairB = value.split(' ')[1]?.toUpperCase()\r\n              return (\r\n                (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\r\n                (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\r\n              )\r\n            }\r\n            if (value && value.includes('-')) {\r\n              const pairA = value.split('-')[0]?.toUpperCase()\r\n              const pairB = value.split('-')[1]?.toUpperCase()\r\n              return (\r\n                (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\r\n                (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\r\n              )\r\n            }\r\n            const regexMatches = Object.keys(pair).map(field => {\r\n              const isAddress = value.slice(0, 2) === '0x'\r\n              if (field === 'id' && isAddress) {\r\n                return pair[field].match(new RegExp(escapeRegExp(value), 'i'))\r\n              }\r\n              if (field === 'token0') {\r\n                return (\r\n                  pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\r\n                  pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\r\n                )\r\n              }\r\n              if (field === 'token1') {\r\n                return (\r\n                  pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\r\n                  pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\r\n                )\r\n              }\r\n              return false\r\n            })\r\n            return regexMatches.some(m => m)\r\n          })\r\n      : []\r\n  }, [allPairData, uniquePairs, value])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(filteredTokenList).length > 2) {\r\n      toggleShadow(true)\r\n    } else {\r\n      toggleShadow(false)\r\n    }\r\n  }, [filteredTokenList])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(filteredPairList).length > 2) {\r\n      toggleBottomShadow(true)\r\n    } else {\r\n      toggleBottomShadow(false)\r\n    }\r\n  }, [filteredPairList])\r\n\r\n  const [tokensShown, setTokensShown] = useState(3)\r\n  const [pairsShown, setPairsShown] = useState(3)\r\n\r\n  function onDismiss() {\r\n    setPairsShown(3)\r\n    setTokensShown(3)\r\n    toggleMenu(false)\r\n    setValue('')\r\n  }\r\n\r\n  // refs to detect clicks outside modal\r\n  const wrapperRef = useRef()\r\n  const menuRef = useRef()\r\n\r\n  const handleClick = e => {\r\n    if (\r\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\r\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\r\n    ) {\r\n      setPairsShown(3)\r\n      setTokensShown(3)\r\n      toggleMenu(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container small={small}>\r\n      <Wrapper open={showMenu} shadow={true} small={small}>\r\n        <Input\r\n          large={!small}\r\n          type={'text'}\r\n          ref={wrapperRef}\r\n          placeholder={\r\n            small\r\n              ? ''\r\n              : below410\r\n              ? 'Search...'\r\n              : below470\r\n              ? 'Search Varen Finance...'\r\n              : below700\r\n              ? 'Search pairs and tokens...'\r\n              : 'Search Varen Finance pairs and tokens...'\r\n          }\r\n          value={value}\r\n          onChange={e => {\r\n            setValue(e.target.value)\r\n          }}\r\n          onFocus={() => {\r\n            if (!showMenu) {\r\n              toggleMenu(true)\r\n            }\r\n          }}\r\n        />\r\n        {!showMenu ? <SearchIconLarge /> : <CloseIcon onClick={() => toggleMenu(false)} />}\r\n      </Wrapper>\r\n      <Menu hide={!showMenu} ref={menuRef}>\r\n        <Heading>\r\n          <Gray>Pairs</Gray>\r\n        </Heading>\r\n        <div>\r\n          {filteredPairList && Object.keys(filteredPairList).length === 0 && (\r\n            <MenuItem>\r\n              <TYPE.body>No results</TYPE.body>\r\n            </MenuItem>\r\n          )}\r\n          {filteredPairList &&\r\n            filteredPairList.slice(0, pairsShown).map(pair => {\r\n              //format incorrect names\r\n              updateNameData(pair)\r\n              return (\r\n                <BasicLink to={'/pair/' + pair.id} key={pair.id} onClick={onDismiss}>\r\n                  <MenuItem>\r\n                    <DoubleTokenLogo a0={pair?.token0?.id} a1={pair?.token1?.id} margin={true} />\r\n                    <TYPE.body style={{ marginLeft: '10px' }}>\r\n                      {pair.token0.symbol + '-' + pair.token1.symbol} Pair\r\n                    </TYPE.body>\r\n                  </MenuItem>\r\n                </BasicLink>\r\n              )\r\n            })}\r\n          <Heading\r\n            hide={!(Object.keys(filteredPairList).length > 3 && Object.keys(filteredPairList).length >= pairsShown)}\r\n          >\r\n            <Blue\r\n              onClick={() => {\r\n                setPairsShown(pairsShown + 5)\r\n              }}\r\n            >\r\n              See more...\r\n            </Blue>\r\n          </Heading>\r\n        </div>\r\n        <Heading>\r\n          <Gray>Tokens</Gray>\r\n        </Heading>\r\n        <div>\r\n          {Object.keys(filteredTokenList).length === 0 && (\r\n            <MenuItem>\r\n              <TYPE.body>No results</TYPE.body>\r\n            </MenuItem>\r\n          )}\r\n          {filteredTokenList.slice(0, tokensShown).map(token => {\r\n            // update displayed names\r\n            updateNameData({ token0: token })\r\n            return (\r\n              <BasicLink to={'/token/' + token.id} key={token.id} onClick={onDismiss}>\r\n                <MenuItem>\r\n                  <RowFixed>\r\n                    <TokenLogo address={token.id} style={{ marginRight: '10px' }} />\r\n                    <FormattedName text={token.name} maxCharacters={20} style={{ marginRight: '6px' }} />\r\n                    (<FormattedName text={token.symbol} maxCharacters={6} />)\r\n                  </RowFixed>\r\n                </MenuItem>\r\n              </BasicLink>\r\n            )\r\n          })}\r\n\r\n          <Heading\r\n            hide={!(Object.keys(filteredTokenList).length > 3 && Object.keys(filteredTokenList).length >= tokensShown)}\r\n          >\r\n            <Blue\r\n              onClick={() => {\r\n                setTokensShown(tokensShown + 5)\r\n              }}\r\n            >\r\n              See more...\r\n            </Blue>\r\n          </Heading>\r\n        </div>\r\n      </Menu>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { RowFixed, RowBetween } from '../Row'\r\nimport { useMedia } from 'react-use'\r\nimport { useGlobalData, useEthPrice, useLinkPrice, useYflPrice, useSYflPrice, useYflusdPrice } from '../../contexts/GlobalData'\r\nimport { formattedNum, localNumber } from '../../utils'\r\n\r\nimport { TYPE } from '../../Theme'\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  position: sticky;\r\n  top: 0;\r\n`\r\n\r\nconst Medium = styled.span`\r\n  font-weight: 500;\r\n`\r\n\r\nexport default function GlobalStats() {\r\n  const below1295 = useMedia('(max-width: 1295px)')\r\n  const below1180 = useMedia('(max-width: 1180px)')\r\n  const below1024 = useMedia('(max-width: 1024px)')\r\n  const below400 = useMedia('(max-width: 400px)')\r\n  const below816 = useMedia('(max-width: 816px)')\r\n\r\n  const { oneDayVolumeUSD, oneDayTxns, pairCount } = useGlobalData()\r\n  const [ethPrice] = useEthPrice()\r\n  const formattedEthPrice = ethPrice ? formattedNum(ethPrice, true) : '-'\r\n  const oneDayFees = oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD * 0.003, true) : ''\r\n\r\n  return (\r\n    <Header>\r\n      <RowBetween style={{ padding: below816 ? '0.5rem' : '.5rem' }}>\r\n        <RowFixed>\r\n          {!below400 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              ETH Price: <Medium>{formattedEthPrice}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n\r\n          {!below1180 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              Transactions (24H): <Medium>{localNumber(oneDayTxns)}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n          {!below1024 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              Pairs: <Medium>{localNumber(pairCount)}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n          {!below1295 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              Fees (24H): <Medium>{oneDayFees}</Medium>&nbsp;\r\n            </TYPE.main>\r\n          )}\r\n        </RowFixed>\r\n      </RowBetween>\r\n    </Header>\r\n  )\r\n}\r\n","import { Box as RebassBox } from 'rebass'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst panelPseudo = css`\r\n  :after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    height: 10px;\r\n  }\r\n\r\n  @media only screen and (min-width: 40em) {\r\n    :after {\r\n      content: unset;\r\n    }\r\n  }\r\n`\r\n\r\nconst Panel = styled(RebassBox)`\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.advancedBG};\r\n  padding: 1.25rem;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  border-radius: 8px;\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.05); /* box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.01), 0px 16px 24px rgba(0, 0, 0, 0.01), 0px 24px 32px rgba(0, 0, 0, 0.01); */\r\n  :hover {\r\n    cursor: ${({ hover }) => hover && 'pointer'};\r\n    border: ${({ hover, theme }) => hover && '1px solid' + theme.bg5};\r\n  }\r\n\r\n  ${(props) => props.background && `background-color: ${props.theme.advancedBG};`}\r\n\r\n  ${(props) => (props.area ? `grid-area: ${props.area};` : null)}\r\n\r\n  ${(props) =>\r\n    props.grouped &&\r\n    css`\r\n      @media only screen and (min-width: 40em) {\r\n        &:first-of-type {\r\n          border-radius: 20px 20px 0 0;\r\n        }\r\n        &:last-of-type {\r\n          border-radius: 0 0 20px 20px;\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.rounded &&\r\n    css`\r\n      border-radius: 8px;\r\n      @media only screen and (min-width: 40em) {\r\n        border-radius: 10px;\r\n      }\r\n    `};\r\n\r\n  ${(props) => !props.last && panelPseudo}\r\n`\r\n\r\nexport default Panel\r\n","import React, { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Box } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { AutoRow, RowBetween } from '../components/Row'\r\nimport { AutoColumn } from '../components/Column'\r\nimport PairList from '../components/PairList'\r\nimport TopTokenList from '../components/TokenList'\r\nimport TxnList from '../components/TxnList'\r\nimport GlobalChart from '../components/GlobalChart'\r\nimport Search from '../components/Search'\r\nimport GlobalStats from '../components/GlobalStats'\r\n\r\nimport { useGlobalData, useGlobalTransactions } from '../contexts/GlobalData'\r\nimport { useAllPairData } from '../contexts/PairData'\r\nimport { useMedia } from 'react-use'\r\nimport Panel from '../components/Panel'\r\nimport { useAllTokenData } from '../contexts/TokenData'\r\nimport { formattedNum, formattedPercent } from '../utils'\r\nimport {TYPE, ThemedBackground} from '../Theme'\r\nimport { CustomLink } from '../components/Link'\r\n\r\nimport { PageWrapper, ContentWrapper } from '../components'\r\n\r\nconst ListOptions = styled(AutoRow)`\r\n  height: 40px;\r\n  width: 100%;\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 1rem;\r\n  }\r\n`\r\n\r\nconst GridRow = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  grid-template-columns: 1fr 1fr;\r\n  column-gap: 6px;\r\n  align-items: start;\r\n  justify-content: space-between;\r\n`\r\n\r\nfunction GlobalPage() {\r\n  // get data for lists and totals\r\n  const allPairs = useAllPairData()\r\n  const allTokens = useAllTokenData()\r\n  const transactions = useGlobalTransactions()\r\n  const { totalLiquidityUSD, oneDayVolumeUSD, volumeChangeUSD, liquidityChangeUSD } = useGlobalData()\r\n\r\n  // breakpoints\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  // scrolling refs\r\n\r\n  useEffect(() => {\r\n    document.querySelector('body').scrollTo({\r\n      behavior: 'smooth',\r\n      top: 0,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ThemedBackground/>\r\n      <ContentWrapper>\r\n        <div>\r\n          <AutoColumn gap=\"24px\" style={{ paddingBottom: below800 ? '0' : '24px' }}>\r\n            <TYPE.largeHeader>{below800 ? 'Protocol Analytics' : 'Varen Finance Protocol Analytics'}</TYPE.largeHeader>\r\n            <Search />\r\n            <GlobalStats />\r\n          </AutoColumn>\r\n          {below800 && ( // mobile card\r\n            <Box mb={20}>\r\n              <Panel>\r\n                <Box>\r\n                  <AutoColumn gap=\"36px\">\r\n                    <AutoColumn gap=\"20px\">\r\n                      <RowBetween>\r\n                        <TYPE.main>Volume (24hrs)</TYPE.main>\r\n                        <div />\r\n                      </RowBetween>\r\n                      <RowBetween align=\"flex-end\">\r\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\r\n                          {formattedNum(oneDayVolumeUSD, true)}\r\n                        </TYPE.main>\r\n                        <TYPE.main fontSize={12}>{formattedPercent(volumeChangeUSD)}</TYPE.main>\r\n                      </RowBetween>\r\n                    </AutoColumn>\r\n                    <AutoColumn gap=\"20px\">\r\n                      <RowBetween>\r\n                        <TYPE.main>Total Liquidity</TYPE.main>\r\n                        <div />\r\n                      </RowBetween>\r\n                      <RowBetween align=\"flex-end\">\r\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\r\n                          {formattedNum(totalLiquidityUSD, true)}\r\n                        </TYPE.main>\r\n                        <TYPE.main fontSize={12}>{formattedPercent(liquidityChangeUSD)}</TYPE.main>\r\n                      </RowBetween>\r\n                    </AutoColumn>\r\n                  </AutoColumn>\r\n                </Box>\r\n              </Panel>\r\n            </Box>\r\n          )}\r\n          {!below800 && (\r\n            <GridRow>\r\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\r\n                <GlobalChart display=\"liquidity\" />\r\n              </Panel>\r\n              <Panel style={{ height: '100%' }}>\r\n                <GlobalChart display=\"volume\" />\r\n              </Panel>\r\n            </GridRow>\r\n          )}\r\n          {below800 && (\r\n            <AutoColumn style={{ marginTop: '6px' }} gap=\"24px\">\r\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\r\n                <GlobalChart display=\"liquidity\" />\r\n              </Panel>\r\n            </AutoColumn>\r\n          )}\r\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\r\n            <RowBetween>\r\n              <TYPE.main fontSize={'1.125rem'}>Top Tokens</TYPE.main>\r\n              <CustomLink to={'/tokens'}>See All</CustomLink>\r\n            </RowBetween>\r\n          </ListOptions>\r\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\r\n            <TopTokenList tokens={allTokens} />\r\n          </Panel>\r\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\r\n            <RowBetween>\r\n              <TYPE.main fontSize={'1rem'}>Top Pairs</TYPE.main>\r\n              <CustomLink to={'/pairs'}>See All</CustomLink>\r\n            </RowBetween>\r\n          </ListOptions>\r\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\r\n            <PairList pairs={allPairs} />\r\n          </Panel>\r\n\r\n          <span>\r\n            <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\r\n              Transactions\r\n            </TYPE.main>\r\n          </span>\r\n          <Panel style={{ margin: '1rem 0' }}>\r\n            <TxnList transactions={transactions} />\r\n          </Panel>\r\n        </div>\r\n      </ContentWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(GlobalPage)\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { createChart, CrosshairMode } from 'lightweight-charts'\r\nimport dayjs from 'dayjs'\r\nimport { formattedNum } from '../../utils'\r\nimport { usePrevious } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Play } from 'react-feather'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst IconWrapper = styled.div`\r\n  position: absolute;\r\n  right: 10px;\r\n  color: ${({ theme }) => theme.text1}\r\n  border-radius: 3px;\r\n  height: 16px;\r\n  width: 16px;\r\n  padding: 0px;\r\n  bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst CandleStickChart = ({\r\n  data,\r\n  width,\r\n  height = 300,\r\n  base,\r\n  margin = true,\r\n  valueFormatter = (val) => formattedNum(val, true),\r\n}) => {\r\n  // reference for DOM element to create with chart\r\n  const ref = useRef()\r\n\r\n  const formattedData = data?.map((entry) => {\r\n    return {\r\n      time: parseFloat(entry.timestamp),\r\n      open: parseFloat(entry.open),\r\n      low: parseFloat(entry.open),\r\n      close: parseFloat(entry.close),\r\n      high: parseFloat(entry.close),\r\n    }\r\n  })\r\n\r\n  if (formattedData && formattedData.length > 0) {\r\n    formattedData.push({\r\n      time: dayjs().unix(),\r\n      open: parseFloat(formattedData[formattedData.length - 1].close),\r\n      close: parseFloat(base),\r\n      low: Math.min(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\r\n      high: Math.max(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\r\n    })\r\n  }\r\n\r\n  // pointer to the chart object\r\n  const [chartCreated, setChartCreated] = useState(false)\r\n  const dataPrev = usePrevious(data)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n  const previousTheme = usePrevious(darkMode)\r\n\r\n  // reset the chart if theme switches\r\n  useEffect(() => {\r\n    if (chartCreated && previousTheme !== darkMode) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id')\r\n      let node = document.getElementById('test-id')\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, darkMode, previousTheme])\r\n\r\n  useEffect(() => {\r\n    if (data !== dataPrev && chartCreated) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id')\r\n      let node = document.getElementById('test-id')\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, data, dataPrev])\r\n\r\n  // if no chart created yet, create one with options and add to DOM manually\r\n  useEffect(() => {\r\n    if (!chartCreated) {\r\n      const chart = createChart(ref.current, {\r\n        width: width,\r\n        height: height,\r\n        layout: {\r\n          backgroundColor: 'transparent',\r\n          textColor: textColor,\r\n        },\r\n        grid: {\r\n          vertLines: {\r\n            color: 'rgba(255, 255, 255, 0.2)',\r\n          },\r\n          horzLines: {\r\n            color: 'rgba(255, 255, 255, 0.2)',\r\n          },\r\n        },\r\n        crosshair: {\r\n          mode: CrosshairMode.Normal,\r\n        },\r\n        rightPriceScale: {\r\n          borderColor: 'rgba(197, 203, 206, 0.8)',\r\n          visible: true,\r\n        },\r\n        timeScale: {\r\n          borderColor: 'rgba(197, 203, 206, 0.8)',\r\n        },\r\n        localization: {\r\n          priceFormatter: (val) => formattedNum(val),\r\n        },\r\n      })\r\n\r\n      var candleSeries = chart.addCandlestickSeries({\r\n        upColor: 'green',\r\n        downColor: 'red',\r\n        borderDownColor: 'red',\r\n        borderUpColor: 'green',\r\n        wickDownColor: 'red',\r\n        wickUpColor: 'green',\r\n      })\r\n\r\n      candleSeries.setData(formattedData)\r\n\r\n      var toolTip = document.createElement('div')\r\n      toolTip.setAttribute('id', 'tooltip-id')\r\n      toolTip.className = 'three-line-legend'\r\n      ref.current.appendChild(toolTip)\r\n      toolTip.style.display = 'block'\r\n      toolTip.style.left = (margin ? 116 : 10) + 'px'\r\n      toolTip.style.top = 50 + 'px'\r\n      toolTip.style.backgroundColor = 'transparent'\r\n\r\n      // get the title of the chart\r\n      function setLastBarText() {\r\n        toolTip.innerHTML = base\r\n          ? `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` + valueFormatter(base) + '</div>'\r\n          : ''\r\n      }\r\n      setLastBarText()\r\n\r\n      // update the title when hovering on the chart\r\n      chart.subscribeCrosshairMove(function (param) {\r\n        if (\r\n          param === undefined ||\r\n          param.time === undefined ||\r\n          param.point.x < 0 ||\r\n          param.point.x > width ||\r\n          param.point.y < 0 ||\r\n          param.point.y > height\r\n        ) {\r\n          setLastBarText()\r\n        } else {\r\n          var price = param.seriesPrices.get(candleSeries).close\r\n          const time = dayjs.unix(param.time).format('MM/DD h:mm A')\r\n          toolTip.innerHTML =\r\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\r\n            valueFormatter(price) +\r\n            `<span style=\"font-size: 12px; margin: 4px 6px; color: ${textColor}\">` +\r\n            time +\r\n            ' UTC' +\r\n            '</span>' +\r\n            '</div>'\r\n        }\r\n      })\r\n\r\n      chart.timeScale().fitContent()\r\n\r\n      setChartCreated(chart)\r\n    }\r\n  }, [chartCreated, formattedData, width, height, valueFormatter, base, margin, textColor])\r\n\r\n  // responsiveness\r\n  useEffect(() => {\r\n    if (width) {\r\n      chartCreated && chartCreated.resize(width, height)\r\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\r\n    }\r\n  }, [chartCreated, height, width])\r\n\r\n  return (\r\n    <div>\r\n      <div ref={ref} id=\"test-id\" />\r\n      <IconWrapper>\r\n        <Play\r\n          onClick={() => {\r\n            chartCreated && chartCreated.timeScale().fitContent()\r\n          }}\r\n        />\r\n      </IconWrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CandleStickChart\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\r\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\r\n\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { darken } from 'polished'\r\nimport { useMedia, usePrevious } from 'react-use'\r\nimport { timeframeOptions } from '../../constants'\r\nimport { useTokenChartData, useTokenPriceData } from '../../contexts/TokenData'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport CandleStickChart from '../CandleChart'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { AutoColumn } from '../Column'\r\nimport { Activity } from 'react-feather'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 100%;\r\n  min-height: 300px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst PriceOption = styled(OptionButton)`\r\n  border-radius: 2px;\r\n`\r\n\r\nconst CHART_VIEW = {\r\n  VOLUME: 'Volume',\r\n  LIQUIDITY: 'Liquidity',\r\n  PRICE: 'Price',\r\n  LINE_PRICE: 'Price (Line)',\r\n}\r\n\r\nconst DATA_FREQUENCY = {\r\n  DAY: 'DAY',\r\n  HOUR: 'HOUR',\r\n  LINE: 'LINE',\r\n}\r\n\r\nconst TokenChart = ({ address, color, base }) => {\r\n  // settings for the window and candle width\r\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.PRICE)\r\n  const [frequency, setFrequency] = useState(DATA_FREQUENCY.HOUR)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  // reset view on new address\r\n  const addressPrev = usePrevious(address)\r\n  useEffect(() => {\r\n    if (address !== addressPrev && addressPrev) {\r\n      setChartFilter(CHART_VIEW.LIQUIDITY)\r\n    }\r\n  }, [address, addressPrev])\r\n\r\n  let chartData = useTokenChartData(address)\r\n\r\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.WEEK)\r\n  const prevWindow = usePrevious(timeWindow)\r\n\r\n  // hourly and daily price data based on the current time window\r\n  const hourlyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 3600)\r\n  const hourlyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 3600)\r\n  const hourlyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 3600)\r\n  const dailyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 86400)\r\n  const dailyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 86400)\r\n  const dailyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 86400)\r\n\r\n  const priceData =\r\n    timeWindow === timeframeOptions.MONTH\r\n      ? // monthly selected\r\n        frequency === DATA_FREQUENCY.DAY\r\n        ? dailyMonth\r\n        : hourlyMonth\r\n      : // weekly selected\r\n      timeWindow === timeframeOptions.WEEK\r\n      ? frequency === DATA_FREQUENCY.DAY\r\n        ? dailyWeek\r\n        : hourlyWeek\r\n      : // all time selected\r\n      frequency === DATA_FREQUENCY.DAY\r\n      ? dailyAll\r\n      : hourlyAll\r\n\r\n  // switch to hourly data when switched to week window\r\n  useEffect(() => {\r\n    if (timeWindow === timeframeOptions.WEEK && prevWindow && prevWindow !== timeframeOptions.WEEK) {\r\n      setFrequency(DATA_FREQUENCY.HOUR)\r\n    }\r\n  }, [prevWindow, timeWindow])\r\n\r\n  // switch to daily data if switche to month or all time view\r\n  useEffect(() => {\r\n    if (timeWindow === timeframeOptions.MONTH && prevWindow && prevWindow !== timeframeOptions.MONTH) {\r\n      setFrequency(DATA_FREQUENCY.DAY)\r\n    }\r\n    if (timeWindow === timeframeOptions.ALL_TIME && prevWindow && prevWindow !== timeframeOptions.ALL_TIME) {\r\n      setFrequency(DATA_FREQUENCY.DAY)\r\n    }\r\n  }, [prevWindow, timeWindow])\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\r\n  const aspect = below1080 ? 60 / 32 : below600 ? 60 / 42 : 60 / 22\r\n\r\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\r\n\r\n  // update the width on a window resize\r\n  const ref = useRef()\r\n  const isClient = typeof window === 'object'\r\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n    function handleResize() {\r\n      setWidth(ref?.current?.container?.clientWidth ?? width)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\r\n        </RowBetween>\r\n      ) : (\r\n        <RowBetween\r\n          mb={\r\n            chartFilter === CHART_VIEW.LIQUIDITY ||\r\n            chartFilter === CHART_VIEW.VOLUME ||\r\n            (chartFilter === CHART_VIEW.PRICE && frequency === DATA_FREQUENCY.LINE)\r\n              ? 40\r\n              : 0\r\n          }\r\n          align=\"flex-start\"\r\n        >\r\n          <AutoColumn gap=\"8px\">\r\n            <RowFixed>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.LIQUIDITY}\r\n                onClick={() => setChartFilter(CHART_VIEW.LIQUIDITY)}\r\n                style={{ marginRight: '6px' }}\r\n              >\r\n                Liquidity\r\n              </OptionButton>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.VOLUME}\r\n                onClick={() => setChartFilter(CHART_VIEW.VOLUME)}\r\n                style={{ marginRight: '6px' }}\r\n              >\r\n                Volume\r\n              </OptionButton>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.PRICE}\r\n                onClick={() => {\r\n                  setChartFilter(CHART_VIEW.PRICE)\r\n                }}\r\n              >\r\n                Price\r\n              </OptionButton>\r\n            </RowFixed>\r\n            {chartFilter === CHART_VIEW.PRICE && (\r\n              <AutoRow gap=\"4px\">\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.DAY}\r\n                  onClick={() => {\r\n                    setTimeWindow(timeframeOptions.MONTH)\r\n                    setFrequency(DATA_FREQUENCY.DAY)\r\n                  }}\r\n                >\r\n                  D\r\n                </PriceOption>\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.HOUR}\r\n                  onClick={() => setFrequency(DATA_FREQUENCY.HOUR)}\r\n                >\r\n                  H\r\n                </PriceOption>\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.LINE}\r\n                  onClick={() => setFrequency(DATA_FREQUENCY.LINE)}\r\n                >\r\n                  <Activity size={14} />\r\n                </PriceOption>\r\n              </AutoRow>\r\n            )}\r\n          </AutoColumn>\r\n          <AutoRow justify=\"flex-end\" gap=\"6px\" align=\"flex-start\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </RowBetween>\r\n      )}\r\n      {chartFilter === CHART_VIEW.LIQUIDITY && chartData && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={16}\r\n              minTickGap={120}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Area\r\n              key={'other'}\r\n              dataKey={'totalLiquidityUSD'}\r\n              stackId=\"2\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n              type=\"monotone\"\r\n              name={'Liquidity'}\r\n              yAxisId={0}\r\n              stroke={darken(0.12, color)}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n      {chartFilter === CHART_VIEW.PRICE &&\r\n        (frequency === DATA_FREQUENCY.LINE ? (\r\n          <ResponsiveContainer aspect={below1080 ? 60 / 32 : 60 / 16}>\r\n            <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n              <defs>\r\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                  <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n                </linearGradient>\r\n              </defs>\r\n              <XAxis\r\n                tickLine={false}\r\n                axisLine={false}\r\n                interval=\"preserveEnd\"\r\n                tickMargin={16}\r\n                minTickGap={120}\r\n                tickFormatter={(tick) => toNiceDate(tick)}\r\n                dataKey=\"date\"\r\n                tick={{ fill: textColor }}\r\n                type={'number'}\r\n                domain={domain}\r\n              />\r\n              <YAxis\r\n                type=\"number\"\r\n                orientation=\"right\"\r\n                tickFormatter={(tick) => '$' + toK(tick)}\r\n                axisLine={false}\r\n                tickLine={false}\r\n                interval=\"preserveEnd\"\r\n                minTickGap={80}\r\n                yAxisId={0}\r\n                tick={{ fill: textColor }}\r\n              />\r\n              <Tooltip\r\n                cursor={true}\r\n                formatter={(val) => formattedNum(val, true)}\r\n                labelFormatter={(label) => toNiceDateYear(label)}\r\n                labelStyle={{ paddingTop: 4 }}\r\n                contentStyle={{\r\n                  padding: '10px 14px',\r\n                  borderRadius: 10,\r\n                  borderColor: color,\r\n                  color: 'black',\r\n                }}\r\n                wrapperStyle={{ top: -70, left: -10 }}\r\n              />\r\n              <Area\r\n                key={'other'}\r\n                dataKey={'priceUSD'}\r\n                stackId=\"2\"\r\n                strokeWidth={2}\r\n                dot={false}\r\n                type=\"monotone\"\r\n                name={'Price'}\r\n                yAxisId={0}\r\n                stroke={darken(0.12, color)}\r\n                fill=\"url(#colorUv)\"\r\n              />\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        ) : priceData ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart data={priceData} width={width} base={base} />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.VOLUME && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <BarChart margin={{ top: 0, right: 10, bottom: 6, left: 10 }} barCategoryGap={1} data={chartData}>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              tickMargin={14}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              axisLine={false}\r\n              tickMargin={16}\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              tickLine={false}\r\n              orientation=\"right\"\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={{ fill: color, opacity: 0.1 }}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Bar\r\n              type=\"monotone\"\r\n              name={'Volume'}\r\n              dataKey={'dailyVolumeUSD'}\r\n              fill={color}\r\n              opacity={'0.4'}\r\n              yAxisId={0}\r\n              stroke={color}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default TokenChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useCopyClipboard } from '../../hooks'\r\nimport { CheckCircle, Copy } from 'react-feather'\r\nimport { StyledIcon } from '..'\r\n\r\nconst CopyIcon = styled.div`\r\n  color: #aeaeae;\r\n  flex-shrink: 0;\r\n  margin-right: 1rem;\r\n  margin-left: 0.5rem;\r\n  text-decoration: none;\r\n  :hover,\r\n  :active,\r\n  :focus {\r\n    text-decoration: none;\r\n    opacity: 0.8;\r\n    cursor: pointer;\r\n  }\r\n`\r\nconst TransactionStatusText = styled.span`\r\n  margin-left: 0.25rem;\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  color: black;\r\n`\r\n\r\nexport default function CopyHelper({ toCopy }) {\r\n  const [isCopied, setCopied] = useCopyClipboard()\r\n\r\n  return (\r\n    <CopyIcon onClick={() => setCopied(toCopy)}>\r\n      {isCopied ? (\r\n        <TransactionStatusText>\r\n          <StyledIcon>\r\n            <CheckCircle size={'14'} />\r\n          </StyledIcon>\r\n        </TransactionStatusText>\r\n      ) : (\r\n        <TransactionStatusText>\r\n          <StyledIcon>\r\n            <Copy size={'14'} />\r\n          </StyledIcon>\r\n        </TransactionStatusText>\r\n      )}\r\n    </CopyIcon>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport 'feather-icons'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'rebass'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport { ButtonDark } from '../ButtonStyled'\r\nimport { AutoColumn } from '../Column'\r\nimport { Hover } from '..'\r\nimport Link from '../Link'\r\nimport { useMedia } from 'react-use'\r\n\r\nconst WarningWrapper = styled.div`\r\n  border-radius: 20px;\r\n  border: 1px solid #f82d3a;\r\n  background: rgba(248, 45, 58, 0.05);\r\n  padding: 1rem;\r\n  color: #f82d3a;\r\n  display: ${({ show }) => !show && 'none'};\r\n  margin: 0 2rem 2rem 2rem;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 80% !important;\r\n    margin-left: 5%;\r\n  }\r\n`\r\n\r\nconst StyledWarningIcon = styled(AlertTriangle)`\r\n  min-height: 20px;\r\n  min-width: 20px;\r\n  stroke: red;\r\n`\r\n\r\nexport default function Warning({ type, show, setShow, address }) {\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  const textContent = below800 ? (\r\n    <div>\r\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\r\n        Anyone can create and name any ERC20 token on Ethereum, including creating fake versions of existing tokens and\r\n        tokens that claim to represent projects that do not have a token.\r\n      </Text>\r\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\r\n        Similar to Etherscan, this site automatically tracks analytics for all ERC20 tokens independent of token\r\n        integrity. Please do your own research before interacting with any ERC20 token.\r\n      </Text>\r\n    </div>\r\n  ) : (\r\n    <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\r\n      Anyone can create and name any ERC20 token on Ethereum, including creating fake versions of existing tokens and\r\n      tokens that claim to represent projects that do not have a token. Similar to Etherscan, this site automatically\r\n      tracks analytics for all ERC20 tokens independent of token integrity. Please do your own research before\r\n      interacting with any ERC20 token.\r\n    </Text>\r\n  )\r\n\r\n  return (\r\n    <WarningWrapper show={show}>\r\n      <AutoColumn gap=\"4px\">\r\n        <RowFixed>\r\n          <StyledWarningIcon />\r\n          <Text fontWeight={600} lineHeight={'145.23%'} ml={'10px'}>\r\n            Token Safety Alert\r\n          </Text>\r\n        </RowFixed>\r\n        {textContent}\r\n        {below800 ? (\r\n          <div>\r\n            <Hover style={{ marginTop: '10px' }}>\r\n              <Link\r\n                fontWeight={500}\r\n                lineHeight={'145.23%'}\r\n                color={'#2172E5'}\r\n                href={'https://etherscan.io/address/' + address}\r\n                target=\"_blank\"\r\n              >\r\n                View {type === 'token' ? 'token' : 'pair'} contract on Etherscan\r\n              </Link>\r\n            </Hover>\r\n            <RowBetween style={{ marginTop: '20px' }}>\r\n              <div />\r\n              <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\r\n                I understand\r\n              </ButtonDark>\r\n            </RowBetween>\r\n          </div>\r\n        ) : (\r\n          <RowBetween style={{ marginTop: '10px' }}>\r\n            <Hover>\r\n              <Link\r\n                fontWeight={500}\r\n                lineHeight={'145.23%'}\r\n                color={'#2172E5'}\r\n                href={'https://etherscan.io/address/' + address}\r\n                target=\"_blank\"\r\n              >\r\n                View {type === 'token' ? 'token' : 'pair'} contract on Etherscan\r\n              </Link>\r\n            </Hover>\r\n            <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\r\n              I understand\r\n            </ButtonDark>\r\n          </RowBetween>\r\n        )}\r\n      </AutoColumn>\r\n    </WarningWrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport 'feather-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\nimport Link from '../components/Link'\r\nimport Panel from '../components/Panel'\r\nimport TokenLogo from '../components/TokenLogo'\r\nimport PairList from '../components/PairList'\r\nimport Loader from '../components/LocalLoader'\r\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\r\nimport Column, { AutoColumn } from '../components/Column'\r\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\r\nimport TxnList from '../components/TxnList'\r\nimport TokenChart from '../components/TokenChart'\r\nimport { BasicLink } from '../components/Link'\r\nimport Search from '../components/Search'\r\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink, localNumber } from '../utils'\r\nimport { useTokenData, useTokenTransactions, useTokenPairs } from '../contexts/TokenData'\r\nimport { TYPE, ThemedBackground } from '../Theme'\r\nimport { useColor } from '../hooks'\r\nimport CopyHelper from '../components/Copy'\r\nimport { useMedia } from 'react-use'\r\nimport { useDataForList } from '../contexts/PairData'\r\nimport { useEffect } from 'react'\r\nimport Warning from '../components/Warning'\r\nimport { usePathDismissed, useSavedTokens } from '../contexts/LocalStorage'\r\nimport { Hover, PageWrapper, ContentWrapper, StyledIcon } from '../components'\r\nimport { PlusCircle, Bookmark } from 'react-feather'\r\nimport FormattedName from '../components/FormattedName'\r\nimport { useListedTokens } from '../contexts/Application'\r\n\r\nconst DashboardWrapper = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nconst PanelWrapper = styled.div`\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: max-content;\r\n  gap: 6px;\r\n  display: inline-grid;\r\n  width: 100%;\r\n  align-items: start;\r\n  @media screen and (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    align-items: stretch;\r\n    > * {\r\n      grid-column: 1 / 4;\r\n    }\r\n\r\n    > * {\r\n      &:first-child {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst TokenDetailsLayout = styled.div`\r\n  display: inline-grid;\r\n  width: 100%;\r\n  grid-template-columns: auto auto auto 1fr;\r\n  column-gap: 30px;\r\n  align-items: start;\r\n\r\n  &:last-child {\r\n    align-items: center;\r\n    justify-items: end;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    align-items: stretch;\r\n    > * {\r\n      grid-column: 1 / 4;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    &:last-child {\r\n      align-items: start;\r\n      justify-items: start;\r\n    }\r\n  }\r\n`\r\n\r\nconst WarningGrouping = styled.div`\r\n  opacity: ${({ disabled }) => disabled && '0.4'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n`\r\n\r\nfunction TokenPage({ address, history }) {\r\n  const {\r\n    name,\r\n    symbol,\r\n    priceUSD,\r\n    oneDayVolumeUSD,\r\n    totalLiquidityUSD,\r\n    volumeChangeUSD,\r\n    oneDayVolumeUT,\r\n    volumeChangeUT,\r\n    priceChangeUSD,\r\n    liquidityChangeUSD,\r\n    oneDayTxns,\r\n    txnChange\r\n  } = useTokenData(address)\r\n\r\n  useEffect(() => {\r\n    document.querySelector('body').scrollTo(0, 0)\r\n  }, [])\r\n\r\n  // detect color from token\r\n  const backgroundColor = useColor()\r\n\r\n  const allPairs = useTokenPairs(address)\r\n\r\n  // pairs to show in pair list\r\n  const fetchedPairsList = useDataForList(allPairs)\r\n\r\n  // all transactions with this token\r\n  const transactions = useTokenTransactions(address)\r\n\r\n  // price\r\n  const price = priceUSD ? formattedNum(priceUSD, true) : ''\r\n  const priceChange = priceChangeUSD ? formattedPercent(priceChangeUSD) : ''\r\n\r\n  // volume\r\n  const volume =\r\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\r\n      ? formattedNum(oneDayVolumeUSD === 0 ? oneDayVolumeUT : oneDayVolumeUSD, true)\r\n      : oneDayVolumeUSD === 0\r\n      ? '$0'\r\n      : '-'\r\n\r\n  // mark if using untracked volume\r\n  const [usingUtVolume, setUsingUtVolume] = useState(false)\r\n  useEffect(() => {\r\n    setUsingUtVolume(oneDayVolumeUSD === 0 ? true : false)\r\n  }, [oneDayVolumeUSD])\r\n\r\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUT)\r\n\r\n  // liquidity\r\n  const liquidity = totalLiquidityUSD ? formattedNum(totalLiquidityUSD, true) : totalLiquidityUSD === 0 ? '$0' : '-'\r\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\r\n\r\n  // transactions\r\n  const txnChangeFormatted = formattedPercent(txnChange)\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below800 = useMedia('(max-width: 800px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n  const below500 = useMedia('(max-width: 500px)')\r\n\r\n  // format for long symbol\r\n  const LENGTH = below1080 ? 10 : 16\r\n  const formattedSymbol = symbol?.length > LENGTH ? symbol.slice(0, LENGTH) + '...' : symbol\r\n\r\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\r\n  const [savedTokens, addToken] = useSavedTokens()\r\n  const listedTokens = useListedTokens()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      behavior: 'smooth',\r\n      top: 0\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ThemedBackground />\r\n\r\n      <Warning\r\n        type={'token'}\r\n        show={!dismissed && listedTokens && !listedTokens.includes(address)}\r\n        setShow={markAsDismissed}\r\n        address={address}\r\n      />\r\n      <ContentWrapper>\r\n        <RowBetween style={{ flexWrap: 'wrap', alingItems: 'start' }}>\r\n          <AutoRow align=\"flex-end\" style={{ width: 'fit-content' }}>\r\n            <TYPE.body>\r\n              <BasicLink to=\"/tokens\">{'Tokens '}</BasicLink>→ {symbol}\r\n              {'  '}\r\n            </TYPE.body>\r\n            <Link\r\n              style={{ width: 'fit-content' }}\r\n              color={backgroundColor}\r\n              external\r\n              href={'https://etherscan.io/address/' + address}\r\n            >\r\n              <Text style={{ marginLeft: '.15rem' }} fontSize={'14px'} fontWeight={400}>\r\n                ({address.slice(0, 8) + '...' + address.slice(36, 42)})\r\n              </Text>\r\n            </Link>\r\n          </AutoRow>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n\r\n        <WarningGrouping disabled={!dismissed && listedTokens && !listedTokens.includes(address)}>\r\n          <DashboardWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\r\n            <RowBetween\r\n              style={{\r\n                flexWrap: 'wrap',\r\n                marginBottom: '2rem',\r\n                alignItems: 'flex-start'\r\n              }}\r\n            >\r\n              <RowFixed style={{ flexWrap: 'wrap' }}>\r\n                <RowFixed style={{ alignItems: 'baseline' }}>\r\n                  <TokenLogo address={address} size=\"32px\" style={{ alignSelf: 'center' }} />\r\n                  <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} fontWeight={500} style={{ margin: '0 1rem' }}>\r\n                    <RowFixed gap=\"6px\">\r\n                      <FormattedName text={name ? name + ' ' : ''} maxCharacters={16} style={{ marginRight: '6px' }} />{' '}\r\n                      {formattedSymbol ? `(${formattedSymbol})` : ''}\r\n                    </RowFixed>\r\n                  </TYPE.main>{' '}\r\n                  {!below1080 && (\r\n                    <>\r\n                      <TYPE.main fontSize={'1.5rem'} fontWeight={500} style={{ marginRight: '1rem' }}>\r\n                        {price}\r\n                      </TYPE.main>\r\n                      {priceChange}\r\n                    </>\r\n                  )}\r\n                </RowFixed>\r\n              </RowFixed>\r\n              <span>\r\n                <RowFixed ml={below500 ? '0' : '2.5rem'} mt={below500 ? '1rem' : '0'}>\r\n                  {!!!savedTokens[address] && !below800 ? (\r\n                    <Hover onClick={() => addToken(address, symbol)}>\r\n                      <StyledIcon>\r\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  ) : !below1080 ? (\r\n                    <StyledIcon>\r\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\r\n                    </StyledIcon>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  <Link href={getPoolLink(address)} target=\"_blank\">\r\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\r\n                  </Link>\r\n                  <Link href={getSwapLink(address)} target=\"_blank\">\r\n                    <ButtonDark ml={'.5rem'} mr={below1080 && '.5rem'} color=\"#3949ab\">\r\n                      Trade\r\n                    </ButtonDark>\r\n                  </Link>\r\n                </RowFixed>\r\n              </span>\r\n            </RowBetween>\r\n\r\n            <>\r\n              <PanelWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\r\n                {below1080 && price && (\r\n                  <Panel>\r\n                    <AutoColumn gap=\"20px\">\r\n                      <RowBetween>\r\n                        <TYPE.main>Price</TYPE.main>\r\n                        <div />\r\n                      </RowBetween>\r\n                      <RowBetween align=\"flex-end\">\r\n                        {' '}\r\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                          {price}\r\n                        </TYPE.main>\r\n                        <TYPE.main>{priceChange}</TYPE.main>\r\n                      </RowBetween>\r\n                    </AutoColumn>\r\n                  </Panel>\r\n                )}\r\n                <Panel>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Total Liquidity</TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {liquidity}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{liquidityChange}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n                <Panel>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Volume (24hrs) {usingUtVolume && '(Untracked)'}</TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {volume}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{volumeChange}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n\r\n                <Panel>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Transactions (24hrs)</TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {oneDayTxns ? localNumber(oneDayTxns) : oneDayTxns === 0 ? 0 : '-'}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{txnChangeFormatted}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n                <Panel\r\n                  style={{\r\n                    gridColumn: below1080 ? '1' : '2/4',\r\n                    gridRow: below1080 ? '' : '1/4'\r\n                  }}\r\n                >\r\n                  <TokenChart address={address} color={backgroundColor} base={priceUSD} />\r\n                </Panel>\r\n              </PanelWrapper>\r\n            </>\r\n\r\n            <span>\r\n              <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n                Top Pairs\r\n              </TYPE.main>\r\n            </span>\r\n            <Panel\r\n              rounded\r\n              style={{\r\n                marginTop: '1.5rem',\r\n                padding: '1.125rem 0 '\r\n              }}\r\n            >\r\n              {address && fetchedPairsList ? (\r\n                <PairList color={backgroundColor} address={address} pairs={fetchedPairsList} />\r\n              ) : (\r\n                <Loader />\r\n              )}\r\n            </Panel>\r\n            <RowBetween mt={40} mb={'1rem'}>\r\n              <TYPE.main fontSize={'1.125rem'}>Transactions</TYPE.main> <div />\r\n            </RowBetween>\r\n            <Panel rounded>\r\n              {transactions ? <TxnList color={backgroundColor} transactions={transactions} /> : <Loader />}\r\n            </Panel>\r\n            <>\r\n              <RowBetween style={{ marginTop: '3rem' }}>\r\n                <TYPE.main fontSize={'1.125rem'}>Token Information</TYPE.main>{' '}\r\n              </RowBetween>\r\n              <Panel\r\n                rounded\r\n                style={{\r\n                  marginTop: '1.5rem'\r\n                }}\r\n                p={20}\r\n              >\r\n                <TokenDetailsLayout>\r\n                  <Column>\r\n                    <TYPE.main>Symbol</TYPE.main>\r\n                    <Text style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\r\n                      <FormattedName text={symbol} maxCharacters={12} />\r\n                    </Text>\r\n                  </Column>\r\n                  <Column>\r\n                    <TYPE.main>Name</TYPE.main>\r\n                    <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\r\n                      <FormattedName text={name} maxCharacters={16} />\r\n                    </TYPE.main>\r\n                  </Column>\r\n                  <Column>\r\n                    <TYPE.main>Address</TYPE.main>\r\n                    <AutoRow align=\"flex-end\">\r\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\r\n                        {address.slice(0, 8) + '...' + address.slice(36, 42)}\r\n                      </TYPE.main>\r\n                      <CopyHelper toCopy={address} />\r\n                    </AutoRow>\r\n                  </Column>\r\n                  <ButtonLight color={backgroundColor}>\r\n                    <Link color={backgroundColor} external href={'https://etherscan.io/address/' + address}>\r\n                      View on Etherscan ↗\r\n                    </Link>\r\n                  </ButtonLight>\r\n                </TokenDetailsLayout>\r\n              </Panel>\r\n            </>\r\n          </DashboardWrapper>\r\n        </WarningGrouping>\r\n      </ContentWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(TokenPage)\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\r\nimport { RowBetween, AutoRow } from '../Row'\r\n\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { darken } from 'polished'\r\nimport { usePairChartData, useHourlyRateData, usePairData } from '../../contexts/PairData'\r\nimport { timeframeOptions } from '../../constants'\r\nimport { useMedia } from 'react-use'\r\nimport { EmptyCard } from '..'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport CandleStickChart from '../CandleChart'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 100%;\r\n  max-height: 340px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst OptionsRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst CHART_VIEW = {\r\n  VOLUME: 'Volume',\r\n  LIQUIDITY: 'Liquidity',\r\n  RATE0: 'Rate 0',\r\n  RATE1: 'Rate 1',\r\n}\r\n\r\nconst PairChart = ({ address, color, base0, base1 }) => {\r\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.LIQUIDITY)\r\n\r\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.MONTH)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  // update the width on a window resize\r\n  const ref = useRef()\r\n  const isClient = typeof window === 'object'\r\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\r\n  const [height, setHeight] = useState(ref?.current?.container?.clientHeight)\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n    function handleResize() {\r\n      setWidth(ref?.current?.container?.clientWidth ?? width)\r\n      setHeight(ref?.current?.container?.clientHeight ?? height)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [height, isClient, width]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  // get data for pair, and rates\r\n  const pairData = usePairData(address)\r\n  let chartData = usePairChartData(address)\r\n  const hourlyData = useHourlyRateData(address, timeWindow)\r\n  const hourlyRate0 = hourlyData && hourlyData[0]\r\n  const hourlyRate1 = hourlyData && hourlyData[1]\r\n\r\n  // formatted symbols for overflow\r\n  const formattedSymbol0 =\r\n    pairData?.token0?.symbol.length > 6 ? pairData?.token0?.symbol.slice(0, 5) + '...' : pairData?.token0?.symbol\r\n  const formattedSymbol1 =\r\n    pairData?.token1?.symbol.length > 6 ? pairData?.token1?.symbol.slice(0, 5) + '...' : pairData?.token1?.symbol\r\n\r\n  const below1600 = useMedia('(max-width: 1600px)')\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\r\n\r\n  if (chartData && chartData.length === 0) {\r\n    return (\r\n      <ChartWrapper>\r\n        <EmptyCard height=\"300px\">No historical data yet.</EmptyCard>{' '}\r\n      </ChartWrapper>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Used to format values on chart on scroll\r\n   * Needs to be raw html for chart API to parse styles\r\n   * @param {*} val\r\n   */\r\n  function valueFormatter(val) {\r\n    if (chartFilter === CHART_VIEW.RATE0) {\r\n      return (\r\n        formattedNum(val) +\r\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol1}/${formattedSymbol0}<span>`\r\n      )\r\n    }\r\n    if (chartFilter === CHART_VIEW.RATE1) {\r\n      return (\r\n        formattedNum(val) +\r\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol0}/${formattedSymbol1}<span>`\r\n      )\r\n    }\r\n  }\r\n\r\n  const aspect = below1080 ? 60 / 20 : below1600 ? 60 / 28 : 60 / 22\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\r\n        </RowBetween>\r\n      ) : (\r\n        <OptionsRow>\r\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.LIQUIDITY}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.ALL_TIME)\r\n                setChartFilter(CHART_VIEW.LIQUIDITY)\r\n              }}\r\n            >\r\n              Liquidity\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.VOLUME}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.ALL_TIME)\r\n                setChartFilter(CHART_VIEW.VOLUME)\r\n              }}\r\n            >\r\n              Volume\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.RATE0}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.WEEK)\r\n                setChartFilter(CHART_VIEW.RATE0)\r\n              }}\r\n            >\r\n              {pairData.token0 ? formattedSymbol1 + '/' + formattedSymbol0 : '-'}\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.RATE1}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.WEEK)\r\n                setChartFilter(CHART_VIEW.RATE1)\r\n              }}\r\n            >\r\n              {pairData.token0 ? formattedSymbol0 + '/' + formattedSymbol1 : '-'}\r\n            </OptionButton>\r\n          </AutoRow>\r\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </OptionsRow>\r\n      )}\r\n      {chartFilter === CHART_VIEW.LIQUIDITY && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={14}\r\n              minTickGap={80}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tickMargin={16}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Area\r\n              strokeWidth={2}\r\n              dot={false}\r\n              type=\"monotone\"\r\n              name={' (USD)'}\r\n              dataKey={'reserveUSD'}\r\n              yAxisId={0}\r\n              stroke={darken(0.12, color)}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n\r\n      {chartFilter === CHART_VIEW.RATE1 &&\r\n        (hourlyRate1 ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart\r\n              data={hourlyRate1}\r\n              base={base0}\r\n              margin={false}\r\n              width={width}\r\n              valueFormatter={valueFormatter}\r\n            />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.RATE0 &&\r\n        (hourlyRate0 ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart\r\n              data={hourlyRate0}\r\n              base={base1}\r\n              margin={false}\r\n              width={width}\r\n              valueFormatter={valueFormatter}\r\n            />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.VOLUME && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <BarChart\r\n            margin={{ top: 0, right: 0, bottom: 6, left: below1080 ? 0 : 10 }}\r\n            barCategoryGap={1}\r\n            data={chartData}\r\n          >\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              tickMargin={14}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              axisLine={false}\r\n              tickMargin={16}\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              orientation=\"right\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={{ fill: color, opacity: 0.1 }}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Bar\r\n              type=\"monotone\"\r\n              name={'Volume'}\r\n              dataKey={'dailyVolumeUSD'}\r\n              fill={color}\r\n              opacity={'0.4'}\r\n              yAxisId={0}\r\n              stroke={color}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default PairChart\r\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport 'feather-icons'\nimport styled from 'styled-components'\nimport Panel from '../components/Panel'\nimport { PageWrapper, ContentWrapperLarge, StyledIcon } from '../components/index'\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\nimport Column, { AutoColumn } from '../components/Column'\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\nimport PairChart from '../components/PairChart'\nimport Link from '../components/Link'\nimport TxnList from '../components/TxnList'\nimport Loader from '../components/LocalLoader'\nimport { BasicLink } from '../components/Link'\nimport Search from '../components/Search'\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink } from '../utils'\nimport { usePairData, usePairTransactions } from '../contexts/PairData'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport CopyHelper from '../components/Copy'\nimport { useMedia } from 'react-use'\nimport DoubleTokenLogo from '../components/DoubleLogo'\nimport TokenLogo from '../components/TokenLogo'\nimport { Hover } from '../components'\nimport { useEthPrice } from '../contexts/GlobalData'\nimport Warning from '../components/Warning'\nimport { usePathDismissed, useSavedPairs } from '../contexts/LocalStorage'\n\nimport { Bookmark, PlusCircle } from 'react-feather'\nimport FormattedName from '../components/FormattedName'\nimport { useListedTokens } from '../contexts/Application'\nimport { useColor } from '../hooks'\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n    }\n\n    > * {\n      &:first-child {\n        width: 100%;\n      }\n    }\n  }\n`\n\nconst TokenDetailsLayout = styled.div`\n  display: inline-grid;\n  width: 100%;\n  grid-template-columns: auto auto auto auto 1fr;\n  column-gap: 60px;\n  align-items: start;\n\n  &:last-child {\n    align-items: center;\n    justify-items: end;\n  }\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n      margin-bottom: 1rem;\n    }\n\n    &:last-child {\n      align-items: start;\n      justify-items: start;\n    }\n  }\n`\n\nconst FixedPanel = styled(Panel)`\n  width: fit-content;\n  padding: 8px 12px;\n  border-radius: 10px;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst HoverSpan = styled.span`\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst WarningGrouping = styled.div`\n  opacity: ${({ disabled }) => disabled && '0.4'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n`\n\nfunction PairPage({ pairAddress, history }) {\n  const {\n    token0,\n    token1,\n    reserve0,\n    reserve1,\n    reserveUSD,\n    trackedReserveUSD,\n    oneDayVolumeUSD,\n    volumeChangeUSD,\n    oneDayVolumeUntracked,\n    volumeChangeUntracked,\n    liquidityChangeUSD\n  } = usePairData(pairAddress)\n\n  let tokenA = token0\n  let tokenB = token1\n  let reserveA = reserve0\n  let reserveB = reserve1\n\n  if (\n    tokenB?.symbol === 'ETH' ||\n    (tokenB?.symbol === 'LINK' && tokenA?.symbol !== 'ETH') ||\n    (tokenB?.symbol === 'YFLUSD' && tokenA?.symbol !== 'ETH' && tokenA?.symbol !== 'LINK')\n  ) {\n    tokenA = token1\n    tokenB = token0\n    reserveA = reserve1\n    reserveB = reserve0\n  }\n\n  useEffect(() => {\n    document.querySelector('body').scrollTo(0, 0)\n  }, [])\n\n  const transactions = usePairTransactions(pairAddress)\n  const backgroundColor = useColor()\n\n  // liquidity\n  const liquidity = trackedReserveUSD\n    ? formattedNum(trackedReserveUSD, true)\n    : reserveUSD\n    ? formattedNum(reserveUSD, true)\n    : '-'\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\n\n  // mark if using untracked liquidity\n  const [usingTracked, setUsingTracked] = useState(true)\n  useEffect(() => {\n    setUsingTracked(!trackedReserveUSD ? false : true)\n  }, [trackedReserveUSD])\n\n  // volume\t  // volume\n  const volume =\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\n      ? formattedNum(oneDayVolumeUSD === 0 ? oneDayVolumeUntracked : oneDayVolumeUSD, true)\n      : oneDayVolumeUSD === 0\n      ? '$0'\n      : '-'\n\n  // mark if using untracked volume\n  const [usingUtVolume, setUsingUtVolume] = useState(false)\n  useEffect(() => {\n    setUsingUtVolume(oneDayVolumeUSD === 0 ? true : false)\n  }, [oneDayVolumeUSD])\n\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUntracked)\n\n  // get fees\t  // get fees\n  const fees =\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\n      ? usingUtVolume\n        ? formattedNum(oneDayVolumeUntracked * 0.003, true)\n        : formattedNum(oneDayVolumeUSD * 0.003, true)\n      : '-'\n\n  // token data for usd\n  const [ethPrice] = useEthPrice()\n  const tokenAUSD =\n    tokenA?.derivedETH && ethPrice ? formattedNum(parseFloat(tokenA.derivedETH) * parseFloat(ethPrice), true) : ''\n\n  const tokenBUSD =\n    tokenB?.derivedETH && ethPrice ? formattedNum(parseFloat(tokenB.derivedETH) * parseFloat(ethPrice), true) : ''\n\n  // rates\n  const tokenARate = reserveA && reserveB ? formattedNum(reserveB / reserveA) : '-'\n  const tokenBRate = reserveA && reserveB ? formattedNum(reserveA / reserveB) : '-'\n\n  // formatted symbols for overflow\n  const formattedSymbol0 = tokenA?.symbol.length > 6 ? tokenA?.symbol.slice(0, 5) + '...' : tokenA?.symbol\n  const formattedSymbol1 = tokenB?.symbol.length > 6 ? tokenB?.symbol.slice(0, 5) + '...' : tokenB?.symbol\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below900 = useMedia('(max-width: 900px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0\n    })\n  }, [])\n\n  const [savedPairs, addPair] = useSavedPairs()\n\n  const listedTokens = useListedTokens()\n\n  return (\n    <PageWrapper>\n      <ThemedBackground />\n      <span />\n      <Warning\n        type={'pair'}\n        show={!dismissed && listedTokens && !(listedTokens.includes(tokenA?.id) && listedTokens.includes(tokenB?.id))}\n        setShow={markAsDismissed}\n        address={pairAddress}\n      />\n      <ContentWrapperLarge>\n        <RowBetween>\n          <TYPE.body>\n            <BasicLink to=\"/pairs\">{'Pairs '}</BasicLink>→ {tokenA?.symbol}-{tokenB?.symbol}\n          </TYPE.body>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <WarningGrouping\n          disabled={\n            !dismissed && listedTokens && !(listedTokens.includes(tokenA?.id) && listedTokens.includes(tokenB?.id))\n          }\n        >\n          <DashboardWrapper>\n            <AutoColumn gap=\"40px\" style={{ marginBottom: '1.5rem' }}>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  flexWrap: 'wrap',\n                  width: '100%'\n                }}\n              >\n                <RowFixed style={{ flexWrap: 'wrap', minWidth: '100px' }}>\n                  <RowFixed>\n                    {tokenA && tokenB && (\n                      <DoubleTokenLogo a0={tokenA?.id || ''} a1={tokenB?.id || ''} size={32} margin={true} />\n                    )}{' '}\n                    <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} style={{ margin: '0 1rem' }}>\n                      {tokenA && tokenB ? (\n                        <>\n                          <HoverSpan onClick={() => history.push(`/token/${tokenA?.id}`)}>{tokenA.symbol}</HoverSpan>\n                          <span>-</span>\n                          <HoverSpan onClick={() => history.push(`/token/${tokenB?.id}`)}>\n                            {tokenB.symbol}\n                          </HoverSpan>{' '}\n                          Pair\n                        </>\n                      ) : (\n                        ''\n                      )}\n                    </TYPE.main>\n                  </RowFixed>\n                </RowFixed>\n                <RowFixed\n                  ml={below900 ? '0' : '2.5rem'}\n                  mt={below1080 && '1rem'}\n                  style={{\n                    flexDirection: below1080 ? 'row-reverse' : 'initial'\n                  }}\n                >\n                  {!!!savedPairs[pairAddress] && !below1080 ? (\n                    <Hover onClick={() => addPair(pairAddress, tokenA.id, tokenB.id, tokenA.symbol, tokenB.symbol)}>\n                      <StyledIcon>\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\n                      </StyledIcon>\n                    </Hover>\n                  ) : !below1080 ? (\n                    <StyledIcon>\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\n                    </StyledIcon>\n                  ) : (\n                    <></>\n                  )}\n\n                  <Link external href={getPoolLink(tokenA?.id, tokenB?.id)}>\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\n                  </Link>\n                  <Link external href={getSwapLink(tokenA?.id, tokenB?.id)}>\n                    <ButtonDark ml={!below1080 && '.5rem'} mr={below1080 && '.5rem'} color=\"#3949ab\">\n                      Trade\n                    </ButtonDark>\n                  </Link>\n                </RowFixed>\n              </div>\n            </AutoColumn>\n            <AutoRow\n              gap=\"6px\"\n              style={{\n                width: 'fit-content',\n                marginTop: below900 ? '1rem' : '0',\n                marginBottom: below900 ? '0' : '2rem',\n                flexWrap: 'wrap'\n              }}\n            >\n              <FixedPanel onClick={() => history.push(`/token/${tokenA?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={tokenA?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {tokenA && tokenB\n                      ? `1 ${formattedSymbol0} = ${tokenARate} ${formattedSymbol1} ${\n                          parseFloat(tokenA?.derivedETH) ? '(' + tokenAUSD + ')' : ''\n                        }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n              <FixedPanel onClick={() => history.push(`/token/${tokenB?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={tokenB?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {tokenA && tokenB\n                      ? `1 ${formattedSymbol1} = ${tokenBRate} ${formattedSymbol0}  ${\n                          parseFloat(tokenB?.derivedETH) ? '(' + tokenBUSD + ')' : ''\n                        }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n            </AutoRow>\n            <>\n              {!below1080 && <TYPE.main fontSize={'1.125rem'}>Pair Stats</TYPE.main>}\n              <PanelWrapper style={{ marginTop: '1.5rem' }}>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Total Liquidity {!usingTracked ? '(Untracked)' : ''}</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {liquidity}\n                      </TYPE.main>\n                      <TYPE.main>{liquidityChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Volume (24hrs) {usingUtVolume && '(Untracked)'}</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {volume}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Fees (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {fees}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Pooled Tokens</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <Hover onClick={() => history.push(`/token/${tokenA?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={tokenA?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserveA ? formattedNum(reserveA) : ''}{' '}\n                            <FormattedName text={tokenA?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                    <Hover onClick={() => history.push(`/token/${tokenB?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={tokenB?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserveB ? formattedNum(reserveB) : ''}{' '}\n                            <FormattedName text={tokenB?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                  </AutoColumn>\n                </Panel>\n                <Panel\n                  style={{\n                    gridColumn: below1080 ? '1' : '2/4',\n                    gridRow: below1080 ? '' : '1/5'\n                  }}\n                >\n                  <PairChart\n                    address={pairAddress}\n                    color={backgroundColor}\n                    base0={reserveB / reserveA}\n                    base1={reserveA / reserveB}\n                  />\n                </Panel>\n              </PanelWrapper>\n              <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n                Transactions\n              </TYPE.main>{' '}\n              <Panel\n                style={{\n                  marginTop: '1.5rem'\n                }}\n              >\n                {transactions ? <TxnList transactions={transactions} /> : <Loader />}\n              </Panel>\n              <RowBetween style={{ marginTop: '3rem' }}>\n                <TYPE.main fontSize={'1.125rem'}>Pair Information</TYPE.main>{' '}\n              </RowBetween>\n              <Panel\n                rounded\n                style={{\n                  marginTop: '1.5rem'\n                }}\n                p={20}\n              >\n                <TokenDetailsLayout>\n                  <Column>\n                    <TYPE.main>Pair Name</TYPE.main>\n                    <TYPE.main style={{ marginTop: '.5rem' }}>\n                      <RowFixed>\n                        <FormattedName text={tokenA?.symbol ?? ''} maxCharacters={8} />\n                        -\n                        <FormattedName text={tokenB?.symbol ?? ''} maxCharacters={8} />\n                      </RowFixed>\n                    </TYPE.main>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Pair Address</TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {pairAddress.slice(0, 6) + '...' + pairAddress.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={pairAddress} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={tokenA?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {tokenA && tokenA.id.slice(0, 6) + '...' + tokenA.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={tokenA?.id} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={tokenB?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={16}>\n                        {tokenB && tokenB.id.slice(0, 6) + '...' + tokenB.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={tokenB?.id} />\n                    </AutoRow>\n                  </Column>\n                  <ButtonLight color={backgroundColor}>\n                    <Link color={backgroundColor} external href={'https://etherscan.io/address/' + pairAddress}>\n                      View on Etherscan ↗\n                    </Link>\n                  </ButtonLight>\n                </TokenDetailsLayout>\n              </Panel>\n            </>\n          </DashboardWrapper>\n        </WarningGrouping>\n      </ContentWrapperLarge>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(PairPage)\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart } from 'recharts'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { darken } from 'polished'\r\nimport { useMedia } from 'react-use'\r\nimport { timeframeOptions } from '../../constants'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport { useUserLiquidityChart } from '../../contexts/User'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { TYPE } from '../../Theme'\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 100%;\r\n  max-height: 390px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst UserChart = ({ account }) => {\r\n  const chartData = useUserLiquidityChart(account)\r\n\r\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.ALL_TIME)\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n  const above1600 = useMedia('(min-width: 1600px)')\r\n\r\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\r\n\r\n  const aspect = above1600 ? 60 / 12 : below600 ? 60 / 42 : 60 / 16\r\n\r\n  const textColor = '#ffffff'\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <div />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={'#000119'} />\r\n        </RowBetween>\r\n      ) : (\r\n        <RowBetween mb={40}>\r\n          <AutoRow gap=\"10px\">\r\n            <TYPE.main>Liquidity Value</TYPE.main>\r\n          </AutoRow>\r\n          <AutoRow justify=\"flex-end\" gap=\"4px\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </RowBetween>\r\n      )}\r\n      {chartData ? (\r\n        <ResponsiveContainer aspect={aspect} style={{ height: 'inherit' }}>\r\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={'#bebebe'} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={'#ffffff'} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={16}\r\n              minTickGap={0}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={domain}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={6}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: '#dddddd',\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Area\r\n              key={'other'}\r\n              dataKey={'valueUSD'}\r\n              stackId=\"2\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n              type=\"monotone\"\r\n              name={'Liquidity'}\r\n              yAxisId={0}\r\n              stroke={darken(0.12, '#dddddd')}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      ) : (\r\n        <LocalLoader />\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default UserChart\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { XAxis, YAxis, ResponsiveContainer, Tooltip, LineChart, Line, CartesianGrid } from 'recharts'\r\nimport { AutoRow, RowBetween } from '../Row'\r\n\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { useMedia } from 'react-use'\r\nimport { timeframeOptions } from '../../constants'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport { useUserPositionChart } from '../../contexts/User'\r\nimport { useTimeframe } from '../../contexts/Application'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { useColor } from '../../hooks'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst ChartWrapper = styled.div`\r\n  max-height: 420px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst OptionsRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst CHART_VIEW = {\r\n  VALUE: 'Value',\r\n  FEES: 'Fees',\r\n}\r\n\r\nconst PairReturnsChart = ({ account, position }) => {\r\n  let data = useUserPositionChart(position, account)\r\n\r\n  const [timeWindow, setTimeWindow] = useTimeframe()\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  const color = useColor()\r\n\r\n  const [chartView, setChartView] = useState(CHART_VIEW.VALUE)\r\n\r\n  // based on window, get starttime\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n  data = data?.filter((entry) => entry.date >= utcStartTime)\r\n\r\n  const aspect = below600 ? 60 / 42 : 60 / 16\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <div />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} />\r\n        </RowBetween>\r\n      ) : (\r\n        <OptionsRow>\r\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\r\n            <OptionButton active={chartView === CHART_VIEW.VALUE} onClick={() => setChartView(CHART_VIEW.VALUE)}>\r\n              Liquidity\r\n            </OptionButton>\r\n            <OptionButton active={chartView === CHART_VIEW.FEES} onClick={() => setChartView(CHART_VIEW.FEES)}>\r\n              Fees\r\n            </OptionButton>\r\n          </AutoRow>\r\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </OptionsRow>\r\n      )}\r\n      <ResponsiveContainer aspect={aspect}>\r\n        {data ? (\r\n          <LineChart margin={{ top: 0, right: 0, bottom: 0, left: 0 }} barCategoryGap={1} data={data}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={14}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveStartEnd\"\r\n              minTickGap={0}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey={chartView === CHART_VIEW.VALUE ? 'usdValue' : 'fees'}\r\n              stroke={color}\r\n              yAxisId={0}\r\n              name={chartView === CHART_VIEW.VALUE ? 'Liquidity' : 'Fees Earned (Cumulative)'}\r\n            />\r\n          </LineChart>\r\n        ) : (\r\n          <LocalLoader />\r\n        )}\r\n      </ResponsiveContainer>\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default PairReturnsChart\r\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\nimport Link, { CustomLink } from '../Link'\nimport { Divider } from '../../components'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, getPoolLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { useEthPrice } from '../../contexts/GlobalData'\nimport { RowFixed } from '../Row'\nimport { ButtonLight } from '../ButtonStyled'\nimport { TYPE } from '../../Theme'\nimport FormattedName from '../FormattedName'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 5px 0.5fr 1fr 1fr;\n  grid-template-areas: 'number name varen return';\n  align-items: flex-start;\n  padding: 20px 0;\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 35px 2.5fr 1fr 1fr;\n    grid-template-areas: 'number name varen return';\n  }\n\n  @media screen and (max-width: 740px) {\n    grid-template-columns: 2.5fr 1fr 1fr;\n    grid-template-areas: 'name varen return';\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 2.5fr 1fr;\n    grid-template-areas: 'name varen';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nconst SORT_FIELD = {\n  VALUE: 'VALUE',\n  VAREN_RETURN: 'VAREN_RETURN',\n}\n\nfunction PositionList({ positions }) {\n  const below500 = useMedia('(max-width: 500px)')\n  const below740 = useMedia('(max-width: 740px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = 10\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VALUE)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [positions])\n\n  useEffect(() => {\n    if (positions) {\n      let extraPages = 1\n      if (positions.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(positions.length / ITEMS_PER_PAGE) + extraPages || 1)\n    }\n  }, [positions])\n\n  const [ethPrice] = useEthPrice()\n\n  const ListItem = ({ position, index }) => {\n    const poolOwnership = position.pair.totalSupply ? position.liquidityTokenBalance / position.pair.totalSupply : 0\n    const valueUSD = poolOwnership * position.pair.reserveUSD\n\n    let token0 = position.pair.token0\n    let token1 = position.pair.token1\n\n    if (\n      token1.symbol === 'ETH' ||\n      (token1.symbol === 'LINK' && token0.symbol !== 'ETH') ||\n      (token1.symbol === 'YFLUSD' && token0.symbol !== 'ETH' && token0.symbol !== 'LINK')\n    ) {\n      token0 = position.pair.token1\n      token1 = position.pair.token0\n    }\n\n    return (\n      <DashGrid style={{ opacity: poolOwnership > 0 ? 1 : 0.6 }} focus={true}>\n        {!below740 && <DataText area=\"number\">{index}</DataText>}\n        <DataText area=\"name\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" align=\"flex-start\">\n            <DoubleTokenLogo size={16} a0={token0.id} a1={token1.id} margin={!below740} />\n          </AutoColumn>\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" style={{ marginLeft: '20px' }}>\n            <CustomLink to={'/pair/' + position.pair.id}>\n              <TYPE.main style={{ whiteSpace: 'nowrap' }} to={'/pair/'}>\n                <FormattedName text={token0.symbol + '-' + token1.symbol} maxCharacters={below740 ? 10 : 18} />\n              </TYPE.main>\n            </CustomLink>\n\n            <RowFixed gap=\"8px\" justify=\"flex-start\">\n              <Link external href={getPoolLink(token0.id, token1.id)} style={{ marginRight: '.5rem' }}>\n                <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Add</ButtonLight>\n              </Link>\n              {poolOwnership > 0 && (\n                <Link external href={getPoolLink(token0.id, token1.id, true)}>\n                  <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Remove</ButtonLight>\n                </Link>\n              )}\n            </RowFixed>\n          </AutoColumn>\n        </DataText>\n        <DataText area=\"varen\">\n          <AutoColumn gap=\"12px\" justify=\"flex-end\">\n            <TYPE.main>{formattedNum(valueUSD, true, true)}</TYPE.main>\n            <AutoColumn gap=\"4px\" justify=\"flex-end\">\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve0))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={token0.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve1))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={token1.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n            </AutoColumn>\n          </AutoColumn>\n        </DataText>\n        {!below500 && (\n          <DataText area=\"return\">\n            <AutoColumn gap=\"12px\" justify=\"flex-end\">\n              <TYPE.main color={'green'}>\n                <RowFixed>{formattedNum(position?.fees.sum, true, true)}</RowFixed>\n              </TYPE.main>\n              <AutoColumn gap=\"4px\" justify=\"flex-end\">\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(token0.derivedETH)\n                      ? formattedNum(position?.fees.sum / (parseFloat(token0.derivedETH) * ethPrice) / 2, false, true)\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={token0.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(token1.derivedETH)\n                      ? formattedNum(position?.fees.sum / (parseFloat(token1.derivedETH) * ethPrice) / 2, false, true)\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={token1.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n              </AutoColumn>\n            </AutoColumn>\n          </DataText>\n        )}\n      </DashGrid>\n    )\n  }\n\n  const positionsSorted =\n    positions &&\n    positions\n\n      .sort((p0, p1) => {\n        if (sortedColumn === SORT_FIELD.PRINCIPAL) {\n          return p0?.principal?.usd > p1?.principal?.usd ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.HODL) {\n          return p0?.hodl?.sum > p1?.hodl?.sum ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.VAREN_RETURN) {\n          const return0 = p0?.varen?.return !== null ? p0?.varen?.return : 0\n          const return1 = p1?.varen?.return !== null ? p1?.varen?.return : 0\n          return return0 > return1 ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.VALUE) {\n          const bal0 =\n            p0.pair.totalSupply === '0' ? 0 : (p0.liquidityTokenBalance / p0.pair.totalSupply) * p0.pair.reserveUSD\n          const bal1 =\n            p1.pair.totalSupply === '0' ? 0 : (p1.liquidityTokenBalance / p1.pair.totalSupply) * p1.pair.reserveUSD\n          return bal0 > bal1 ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        return 1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((position, index) => {\n        return (\n          <div key={index}>\n            <ListItem key={index} index={(page - 1) * 10 + index + 1} position={position} />\n            <Divider />\n          </div>\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: '32px', padding: 0 }}>\n        {!below740 && (\n          <Flex alignItems=\"flex-start\" justifyContent=\"flexStart\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"flex-start\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"number\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"varen\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VALUE)\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\n            }}\n          >\n            {below740 ? 'Value' : 'Liquidity'} {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below500 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"return\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.VAREN_RETURN)\n                setSortDirection(sortedColumn !== SORT_FIELD.VAREN_RETURN ? true : !sortDirection)\n              }}\n            >\n              {below740 ? 'Fees' : 'Total Fees Earned'}{' '}\n              {sortedColumn === SORT_FIELD.VAREN_RETURN ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!positionsSorted ? <LocalLoader /> : positionsSorted}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PositionList)\n","import React, { useState, useMemo, useEffect, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useUserTransactions, useUserPositions } from '../contexts/User'\r\nimport TxnList from '../components/TxnList'\r\nimport Panel from '../components/Panel'\r\nimport { formattedNum } from '../utils'\r\nimport Row, { AutoRow, RowFixed, RowBetween } from '../components/Row'\r\nimport { AutoColumn } from '../components/Column'\r\nimport UserChart from '../components/UserChart'\r\nimport PairReturnsChart from '../components/PairReturnsChart'\r\nimport PositionList from '../components/PositionList'\r\nimport { TYPE } from '../Theme'\r\nimport { ButtonDropdown } from '../components/ButtonStyled'\r\nimport { PageWrapper, ContentWrapper, StyledIcon } from '../components'\r\nimport DoubleTokenLogo from '../components/DoubleLogo'\r\nimport { Bookmark, Activity } from 'react-feather'\r\nimport Link from '../components/Link'\r\nimport { FEE_WARNING_TOKENS } from '../constants'\r\nimport { BasicLink } from '../components/Link'\r\nimport { useMedia } from 'react-use'\r\nimport Search from '../components/Search'\r\nimport { useSavedAccounts } from '../contexts/LocalStorage'\r\n\r\nconst AccountWrapper = styled.div`\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  padding: 6px 16px;\r\n  border-radius: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Header = styled.div``\r\n\r\nconst DashboardWrapper = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nconst DropdownWrapper = styled.div`\r\n  position: relative;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n  border-radius: 12px;\r\n`\r\n\r\nconst Flyout = styled.div`\r\n  position: absolute;\r\n  top: 38px;\r\n  left: -1px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  z-index: 999;\r\n  border-bottom-right-radius: 10px;\r\n  border-bottom-left-radius: 10px;\r\n  padding-top: 4px;\r\n  border: 1px solid #edeef2;\r\n  border-top: none;\r\n`\r\n\r\nconst MenuRow = styled(Row)`\r\n  width: 100%;\r\n  padding: 12px 0;\r\n  padding-left: 12px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.bg2};\r\n  }\r\n`\r\n\r\nconst PanelWrapper = styled.div`\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: max-content;\r\n  gap: 6px;\r\n  display: inline-grid;\r\n  width: 100%;\r\n  align-items: start;\r\n`\r\n\r\nconst Warning = styled.div`\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  color: ${({ theme }) => theme.text1};\r\n  padding: 1rem;\r\n  font-weight: 600;\r\n  border-radius: 10px;\r\n  margin-bottom: 1rem;\r\n  width: calc(100% - 2rem);\r\n`\r\n\r\nfunction AccountPage({ account }) {\r\n  // get data for this account\r\n  const transactions = useUserTransactions(account)\r\n  const positions = useUserPositions(account)\r\n\r\n  // get data for user stats\r\n  const transactionCount = transactions?.swaps?.length + transactions?.burns?.length + transactions?.mints?.length\r\n\r\n  // get derived totals\r\n  let totalSwappedUSD = useMemo(() => {\r\n    return transactions?.swaps\r\n      ? transactions?.swaps.reduce((total, swap) => {\r\n          return total + parseFloat(swap.amountUSD)\r\n        }, 0)\r\n      : 0\r\n  }, [transactions])\r\n\r\n  // if any position has token from fee warning list, show warning\r\n  const [showWarning, setShowWarning] = useState(false)\r\n  useEffect(() => {\r\n    if (positions) {\r\n      for (let i = 0; i < positions.length; i++) {\r\n        if (\r\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token0.id) ||\r\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token1.id)\r\n        ) {\r\n          setShowWarning(true)\r\n        }\r\n      }\r\n    }\r\n  }, [positions])\r\n\r\n  // settings for list view and dropdowns\r\n  const hideLPContent = positions && positions.length === 0\r\n  const [showDropdown, setShowDropdown] = useState(false)\r\n  const [activePosition, setActivePosition] = useState()\r\n\r\n  const dynamicPositions = activePosition ? [activePosition] : positions\r\n\r\n  const aggregateFees = dynamicPositions?.reduce(function(total, position) {\r\n    return total + position.fees.sum\r\n  }, 0)\r\n\r\n  const positionValue = useMemo(() => {\r\n    return dynamicPositions\r\n      ? dynamicPositions.reduce((total, position) => {\r\n          return (\r\n            total +\r\n            (position?.pair?.totalSupply\r\n              ? (parseFloat(position?.liquidityTokenBalance) / parseFloat(position?.pair?.totalSupply)) *\r\n                position?.pair?.reserveUSD\r\n              : 0)\r\n          )\r\n        }, 0)\r\n      : null\r\n  }, [dynamicPositions])\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      behavior: 'smooth',\r\n      top: 0\r\n    })\r\n  }, [])\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  // adding/removing account from saved accounts\r\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\r\n  const isBookmarked = savedAccounts.includes(account)\r\n  const handleBookmarkClick = useCallback(() => {\r\n    ;(isBookmarked ? removeAccount : addAccount)(account)\r\n  }, [account, isBookmarked, addAccount, removeAccount])\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ContentWrapper>\r\n        <RowBetween>\r\n          <TYPE.body>\r\n            <BasicLink to=\"/accounts\">{'Accounts '}</BasicLink>→{' '}\r\n            <Link lineHeight={'145.23%'} href={'https://etherscan.io/address/' + account} target=\"_blank\">\r\n              {' '}\r\n              {account?.slice(0, 42)}{' '}\r\n            </Link>\r\n          </TYPE.body>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n        <Header>\r\n          <RowBetween>\r\n            <span>\r\n              <TYPE.header fontSize={24}>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\r\n              <Link lineHeight={'145.23%'} href={'https://etherscan.io/address/' + account} target=\"_blank\">\r\n                <TYPE.main fontSize={14}>View on Etherscan</TYPE.main>\r\n              </Link>\r\n            </span>\r\n            <AccountWrapper>\r\n              <StyledIcon>\r\n                <Bookmark\r\n                  onClick={handleBookmarkClick}\r\n                  style={{ opacity: isBookmarked ? 0.8 : 0.4, cursor: 'pointer' }}\r\n                />\r\n              </StyledIcon>\r\n            </AccountWrapper>\r\n          </RowBetween>\r\n        </Header>\r\n        <DashboardWrapper>\r\n          {showWarning && <Warning>Fees cannot currently be calculated for pairs that include AMPL.</Warning>}\r\n          {!hideLPContent && (\r\n            <DropdownWrapper>\r\n              <ButtonDropdown width=\"100%\" onClick={() => setShowDropdown(!showDropdown)} open={showDropdown}>\r\n                {!activePosition && (\r\n                  <RowFixed>\r\n                    <StyledIcon>\r\n                      <Activity size={16} />\r\n                    </StyledIcon>\r\n                    <TYPE.body ml={'10px'}>All Positions</TYPE.body>\r\n                  </RowFixed>\r\n                )}\r\n                {activePosition && (\r\n                  <RowFixed>\r\n                    <DoubleTokenLogo a0={activePosition.pair.token0.id} a1={activePosition.pair.token1.id} size={16} />\r\n                    <TYPE.body ml={'16px'}>\r\n                      {activePosition.pair.token0.symbol}-{activePosition.pair.token1.symbol} Position\r\n                    </TYPE.body>\r\n                  </RowFixed>\r\n                )}\r\n              </ButtonDropdown>\r\n              {showDropdown && (\r\n                <Flyout>\r\n                  <AutoColumn gap=\"0px\">\r\n                    {positions?.map((p, i) => {\r\n                      if (p.pair.token1.symbol === 'WETH') {\r\n                        p.pair.token1.symbol = 'ETH'\r\n                      }\r\n                      if (p.pair.token0.symbol === 'WETH') {\r\n                        p.pair.token0.symbol = 'ETH'\r\n                      }\r\n                      return (\r\n                        p.pair.id !== activePosition?.pair.id && (\r\n                          <MenuRow\r\n                            onClick={() => {\r\n                              setActivePosition(p)\r\n                              setShowDropdown(false)\r\n                            }}\r\n                            key={i}\r\n                          >\r\n                            <DoubleTokenLogo a0={p.pair.token0.id} a1={p.pair.token1.id} size={16} />\r\n                            <TYPE.body ml={'16px'}>\r\n                              {p.pair.token0.symbol}-{p.pair.token1.symbol} Position\r\n                            </TYPE.body>\r\n                          </MenuRow>\r\n                        )\r\n                      )\r\n                    })}\r\n                    {activePosition && (\r\n                      <MenuRow\r\n                        onClick={() => {\r\n                          setActivePosition()\r\n                          setShowDropdown(false)\r\n                        }}\r\n                      >\r\n                        <RowFixed>\r\n                          <StyledIcon>\r\n                            <Activity size={16} />\r\n                          </StyledIcon>\r\n                          <TYPE.body ml={'10px'}>All Positions</TYPE.body>\r\n                        </RowFixed>\r\n                      </MenuRow>\r\n                    )}\r\n                  </AutoColumn>\r\n                </Flyout>\r\n              )}\r\n            </DropdownWrapper>\r\n          )}\r\n          {!hideLPContent && (\r\n            <Panel style={{ height: '100%', marginBottom: '1rem' }}>\r\n              <AutoRow gap=\"20px\">\r\n                <AutoColumn gap=\"10px\">\r\n                  <RowBetween>\r\n                    <TYPE.body>Liquidity (Including Fees)</TYPE.body>\r\n                    <div />\r\n                  </RowBetween>\r\n                  <RowFixed align=\"flex-end\">\r\n                    <TYPE.header fontSize={'24px'} lineHeight={1}>\r\n                      {positionValue\r\n                        ? formattedNum(positionValue, true)\r\n                        : positionValue === 0\r\n                        ? formattedNum(0, true)\r\n                        : '-'}\r\n                    </TYPE.header>\r\n                  </RowFixed>\r\n                </AutoColumn>\r\n                <AutoColumn gap=\"10px\">\r\n                  <RowBetween>\r\n                    <TYPE.body>Fees Earned (Cumulative)</TYPE.body>\r\n                    <div />\r\n                  </RowBetween>\r\n                  <RowFixed align=\"flex-end\">\r\n                    <TYPE.header fontSize={'24px'} lineHeight={1} color={aggregateFees && 'green'}>\r\n                      {aggregateFees ? formattedNum(aggregateFees, true, true) : '-'}\r\n                    </TYPE.header>\r\n                  </RowFixed>\r\n                </AutoColumn>\r\n              </AutoRow>\r\n            </Panel>\r\n          )}\r\n          {!hideLPContent && (\r\n            <PanelWrapper>\r\n              <Panel style={{ gridColumn: '1' }}>\r\n                {activePosition ? (\r\n                  <PairReturnsChart account={account} position={activePosition} />\r\n                ) : (\r\n                  <UserChart account={account} position={activePosition} />\r\n                )}\r\n              </Panel>\r\n            </PanelWrapper>\r\n          )}\r\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n            Positions\r\n          </TYPE.main>{' '}\r\n          <Panel\r\n            style={{\r\n              marginTop: '1.5rem'\r\n            }}\r\n          >\r\n            <PositionList positions={positions} />\r\n          </Panel>\r\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n            Transactions\r\n          </TYPE.main>{' '}\r\n          <Panel\r\n            style={{\r\n              marginTop: '1.5rem'\r\n            }}\r\n          >\r\n            <TxnList transactions={transactions} />\r\n          </Panel>\r\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n            Wallet Stats\r\n          </TYPE.main>{' '}\r\n          <Panel\r\n            style={{\r\n              marginTop: '1.5rem'\r\n            }}\r\n          >\r\n            <AutoRow gap=\"20px\">\r\n              <AutoColumn gap=\"8px\">\r\n                <TYPE.header fontSize={24}>{totalSwappedUSD ? formattedNum(totalSwappedUSD, true) : '-'}</TYPE.header>\r\n                <TYPE.main>Total Value Swapped</TYPE.main>\r\n              </AutoColumn>\r\n              <AutoColumn gap=\"8px\">\r\n                <TYPE.header fontSize={24}>\r\n                  {totalSwappedUSD ? formattedNum(totalSwappedUSD * 0.003, true) : '-'}\r\n                </TYPE.header>\r\n                <TYPE.main>Total Fees Paid</TYPE.main>\r\n              </AutoColumn>\r\n              <AutoColumn gap=\"8px\">\r\n                <TYPE.header fontSize={24}>{transactionCount ? transactionCount : '-'}</TYPE.header>\r\n                <TYPE.main>Total Transactions</TYPE.main>\r\n              </AutoColumn>\r\n            </AutoRow>\r\n          </Panel>\r\n        </DashboardWrapper>\r\n      </ContentWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default AccountPage\r\n","import React, { useEffect } from 'react'\r\nimport 'feather-icons'\r\n\r\nimport TopTokenList from '../components/TokenList'\r\nimport { TYPE } from '../Theme'\r\nimport Panel from '../components/Panel'\r\nimport { useAllTokenData } from '../contexts/TokenData'\r\nimport { PageWrapper, FullWrapper } from '../components'\r\nimport { RowBetween } from '../components/Row'\r\nimport Search from '../components/Search'\r\nimport { useMedia } from 'react-use'\r\n\r\nfunction AllTokensPage() {\r\n  const allTokens = useAllTokenData()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const below600 = useMedia('(max-width: 800px)')\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <FullWrapper>\r\n        <RowBetween>\r\n          <TYPE.largeHeader>Top Tokens</TYPE.largeHeader>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n        <Panel style={{ marginTop: '6px', padding: below600 && '1rem 0 0 0 ' }}>\r\n          <TopTokenList tokens={allTokens} itemMax={50} />\r\n        </Panel>\r\n      </FullWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default AllTokensPage\r\n","import React, { useEffect } from 'react'\r\nimport 'feather-icons'\r\n\r\nimport { TYPE } from '../Theme'\r\nimport Panel from '../components/Panel'\r\nimport { useAllPairData } from '../contexts/PairData'\r\nimport PairList from '../components/PairList'\r\nimport { PageWrapper, FullWrapper } from '../components'\r\nimport { RowBetween } from '../components/Row'\r\nimport Search from '../components/Search'\r\nimport { useMedia } from 'react-use'\r\n\r\nfunction AllPairsPage() {\r\n  const allPairs = useAllPairData()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <FullWrapper>\r\n        <RowBetween>\r\n          <TYPE.largeHeader>Top Pairs</TYPE.largeHeader>\r\n          {!below800 && <Search small={true} />}\r\n        </RowBetween>\r\n        <Panel style={{ padding: below800 && '1rem 0 0 0 ' }}>\r\n          <PairList pairs={allPairs} disbaleLinks={true} maxItems={50} />\r\n        </Panel>\r\n      </FullWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default AllPairsPage\r\n","import React, { useState } from 'react'\r\nimport 'feather-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ButtonLight, ButtonFaded } from '../ButtonStyled'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { isAddress } from '../../utils'\r\nimport { useSavedAccounts } from '../../contexts/LocalStorage'\r\nimport { AutoColumn } from '../Column'\r\nimport { TYPE } from '../../Theme'\r\nimport { Hover, StyledIcon } from '..'\r\nimport Panel from '../Panel'\r\nimport { Divider } from '..'\r\nimport { Flex } from 'rebass'\r\n\r\nimport { X } from 'react-feather'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n  border-radius: 12px;\r\n`\r\n\r\nconst Input = styled.input`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  padding: 12px 16px;\r\n  border-radius: 12px;\r\n  color: ${({ theme }) => theme.text1};\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  font-size: 16px;\r\n  margin-right: 1rem;\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.text3};\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    ::placeholder {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst AccountLink = styled.span`\r\n  display: flex;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.link};\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 1fr;\r\n  grid-template-areas: 'account';\r\n  padding: 0 4px;\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n  }\r\n`\r\n\r\nfunction AccountSearch({ history, small }) {\r\n  const [accountValue, setAccountValue] = useState()\r\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\r\n\r\n  function handleAccountSearch() {\r\n    if (isAddress(accountValue)) {\r\n      history.push('/account/' + accountValue)\r\n      if (!savedAccounts.includes(accountValue)) {\r\n        addAccount(accountValue)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AutoColumn gap={'1rem'}>\r\n      {!small && (\r\n        <>\r\n          <AutoRow>\r\n            <Wrapper>\r\n              <Input\r\n                placeholder=\"0x...\"\r\n                onChange={e => {\r\n                  setAccountValue(e.target.value)\r\n                }}\r\n              />\r\n            </Wrapper>\r\n            <ButtonLight onClick={handleAccountSearch}>Load Account Details</ButtonLight>\r\n          </AutoRow>\r\n        </>\r\n      )}\r\n\r\n      <AutoColumn gap={'12px'}>\r\n        {!small && (\r\n          <Panel>\r\n            <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\r\n              <TYPE.main area=\"account\">Saved Accounts</TYPE.main>\r\n            </DashGrid>\r\n            <Divider />\r\n            {savedAccounts?.length > 0 ? (\r\n              savedAccounts.map(account => {\r\n                return (\r\n                  <DashGrid key={account} center={true} style={{ height: 'fit-content', padding: '1rem 0 0 0' }}>\r\n                    <Flex\r\n                      area=\"account\"\r\n                      justifyContent=\"space-between\"\r\n                      onClick={() => history.push('/account/' + account)}\r\n                    >\r\n                      <AccountLink>{account?.slice(0, 42)}</AccountLink>\r\n                      <Hover\r\n                        onClick={e => {\r\n                          e.stopPropagation()\r\n                          removeAccount(account)\r\n                        }}\r\n                      >\r\n                        <StyledIcon>\r\n                          <X size={16} />\r\n                        </StyledIcon>\r\n                      </Hover>\r\n                    </Flex>\r\n                  </DashGrid>\r\n                )\r\n              })\r\n            ) : (\r\n              <TYPE.light style={{ marginTop: '1rem' }}>No saved accounts</TYPE.light>\r\n            )}\r\n          </Panel>\r\n        )}\r\n\r\n        {small && (\r\n          <>\r\n            <TYPE.main>{'Accounts'}</TYPE.main>\r\n            {savedAccounts?.length > 0 ? (\r\n              savedAccounts.map(account => {\r\n                return (\r\n                  <RowBetween key={account}>\r\n                    <ButtonFaded onClick={() => history.push('/account/' + account)}>\r\n                      {small ? (\r\n                        <TYPE.header>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\r\n                      ) : (\r\n                        <AccountLink>{account?.slice(0, 42)}</AccountLink>\r\n                      )}\r\n                    </ButtonFaded>\r\n                    <Hover onClick={() => removeAccount(account)}>\r\n                      <StyledIcon>\r\n                        <X size={16} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  </RowBetween>\r\n                )\r\n              })\r\n            ) : (\r\n              <TYPE.light>No pinned wallets</TYPE.light>\r\n            )}\r\n          </>\r\n        )}\r\n      </AutoColumn>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default withRouter(AccountSearch)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\nimport { TYPE } from '../../Theme'\r\nimport { useSavedTokens, useSavedPairs } from '../../contexts/LocalStorage'\r\nimport { Hover } from '..'\r\nimport TokenLogo from '../TokenLogo'\r\nimport AccountSearch from '../AccountSearch'\r\nimport { Bookmark, ChevronRight, X } from 'react-feather'\r\nimport { ButtonFaded } from '../ButtonStyled'\r\nimport FormattedName from '../FormattedName'\r\n\r\nconst RightColumn = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0px;\r\n  height: 100vh;\r\n  width: ${({ open }) => (open ? '160px' : '23px')};\r\n  padding: 1.25rem;\r\n  border-left: ${({ theme, open }) => '1px solid' + theme.bg4};\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  z-index: 9999;\r\n  overflow: auto;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst SavedButton = styled(RowBetween)`\r\n  padding-bottom: ${({ open }) => open && '20px'};\r\n  border-bottom: ${({ theme, open }) => open && '1px solid' + theme.bg4};\r\n  margin-bottom: ${({ open }) => open && '1.25rem'};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ScrollableDiv = styled(AutoColumn)`\r\n  overflow: auto;\r\n  padding-bottom: 60px;\r\n`\r\n\r\nconst StyledIcon = styled.div`\r\n  color: ${({ theme }) => theme.text2};\r\n`\r\n\r\nfunction PinnedData({ history, open, setSavedOpen }) {\r\n  const [savedPairs, , removePair] = useSavedPairs()\r\n  const [savedTokens, , removeToken] = useSavedTokens()\r\n\r\n  return !open ? (\r\n    <RightColumn open={open} onClick={() => setSavedOpen(true)}>\r\n      <SavedButton open={open}>\r\n        <StyledIcon>\r\n          <Bookmark size={20} />\r\n        </StyledIcon>\r\n      </SavedButton>\r\n    </RightColumn>\r\n  ) : (\r\n    <RightColumn gap=\"1rem\" open={open}>\r\n      <SavedButton onClick={() => setSavedOpen(false)} open={open}>\r\n        <RowFixed>\r\n          <StyledIcon>\r\n            <Bookmark size={16} />\r\n          </StyledIcon>\r\n          <TYPE.main ml={'4px'}>Saved</TYPE.main>\r\n        </RowFixed>\r\n        <StyledIcon>\r\n          <ChevronRight />\r\n        </StyledIcon>\r\n      </SavedButton>\r\n      <AccountSearch small={true} />\r\n      <AutoColumn gap=\"40px\" style={{ marginTop: '2rem' }}>\r\n        <AutoColumn gap={'12px'}>\r\n          <TYPE.main>Pinned Pairs</TYPE.main>\r\n          {Object.keys(savedPairs).filter((key) => {\r\n            return !!savedPairs[key]\r\n          }).length > 0 ? (\r\n            Object.keys(savedPairs)\r\n              .filter((address) => {\r\n                return !!savedPairs[address]\r\n              })\r\n              .map((address) => {\r\n                const pair = savedPairs[address]\r\n                return (\r\n                  <RowBetween key={pair.address}>\r\n                    <ButtonFaded onClick={() => history.push('/pair/' + address)}>\r\n                      <RowFixed>\r\n                        <TYPE.header>\r\n                          <FormattedName\r\n                            text={pair.token0Symbol + '/' + pair.token1Symbol}\r\n                            maxCharacters={12}\r\n                            fontSize={'12px'}\r\n                          />\r\n                        </TYPE.header>\r\n                      </RowFixed>\r\n                    </ButtonFaded>\r\n                    <Hover onClick={() => removePair(pair.address)}>\r\n                      <StyledIcon>\r\n                        <X size={16} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  </RowBetween>\r\n                )\r\n              })\r\n          ) : (\r\n            <TYPE.light>Pinned pairs will appear here.</TYPE.light>\r\n          )}\r\n        </AutoColumn>\r\n        <ScrollableDiv gap={'12px'}>\r\n          <TYPE.main>Pinned Tokens</TYPE.main>\r\n          {Object.keys(savedTokens).filter((key) => {\r\n            return !!savedTokens[key]\r\n          }).length > 0 ? (\r\n            Object.keys(savedTokens)\r\n              .filter((address) => {\r\n                return !!savedTokens[address]\r\n              })\r\n              .map((address) => {\r\n                const token = savedTokens[address]\r\n                return (\r\n                  <RowBetween key={address}>\r\n                    <ButtonFaded onClick={() => history.push('/token/' + address)}>\r\n                      <RowFixed>\r\n                        <TokenLogo address={address} size={'14px'} />\r\n                        <TYPE.header ml={'6px'}>\r\n                          <FormattedName text={token.symbol} maxCharacters={12} fontSize={'12px'} />\r\n                        </TYPE.header>\r\n                      </RowFixed>\r\n                    </ButtonFaded>\r\n                    <Hover onClick={() => removeToken(address)}>\r\n                      <StyledIcon>\r\n                        <X size={16} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  </RowBetween>\r\n                )\r\n              })\r\n          ) : (\r\n            <TYPE.light>Pinned tokens will appear here.</TYPE.light>\r\n          )}\r\n        </ScrollableDiv>\r\n      </AutoColumn>\r\n    </RightColumn>\r\n  )\r\n}\r\n\r\nexport default withRouter(PinnedData)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Logo from '../../assets/logo.svg'\r\n\r\nconst TitleWrapper = styled.div`\r\n  text-decoration: none;\r\n  width: 100%;\r\n  display: flex;\r\n  flex: 0 0 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10;\r\n`\r\n\r\nexport default function Title() {\r\n  return (\r\n    <TitleWrapper >\r\n      <a id=\"link\" href=\"/home\">\r\n        <img width=\"100%\" src={Logo} alt=\"Varen Finance\" />\r\n      </a>\r\n    </TitleWrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoColumn } from '../Column'\r\nimport Title from '../Title'\r\nimport { BasicLink } from '../Link'\r\nimport { useMedia } from 'react-use'\r\nimport { transparentize } from 'polished'\r\nimport { TYPE } from '../../Theme'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { TrendingUp, List, PieChart, Disc } from 'react-feather'\r\nimport Link from '../Link'\r\nimport { useSessionStart } from '../../contexts/Application'\r\n\r\nconst Wrapper = styled.div`\r\n  height: ${({ isMobile }) => (isMobile ? 'initial' : '100vh')};\r\n  background-color: ${({ theme }) => transparentize(0.4, theme.bg1)};\r\n  color: ${({ theme }) => theme.text1};\r\n  padding: 0.5rem 0.5rem 0.5rem 0.75rem;\r\n  position: sticky;\r\n  top: 0px;\r\n  z-index: 9999;\r\n  box-sizing: border-box;\r\n  background: #000119;\r\n  color: ${({ theme }) => theme.bg2};\r\n  border-right: ${({ theme }) => '1px solid' + theme.bg4};\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr;\r\n    position: relative;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    padding: 1rem;\r\n  }\r\n`\r\n\r\nconst Option = styled.div`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  opacity: ${({ activeText }) => (activeText ? 1 : 0.6)};\r\n  color: ${({ theme }) => theme.white};\r\n  display: flex;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst DesktopWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100vh;\r\n`\r\n\r\nconst MobileWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst HeaderText = styled.div`\r\n  margin-right: 0.75rem;\r\n  font-size: 0.825rem;\r\n  font-weight: 500;\r\n  display: inline-box;\r\n  display: -webkit-inline-box;\r\n  opacity: 0.8;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n  a {\r\n    color: ${({ theme }) => theme.white};\r\n  }\r\n`\r\n\r\nconst Polling = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  left: 0;\r\n  bottom: 0;\r\n  padding: 1rem;\r\n  color: white;\r\n  opacity: 0.4;\r\n  transition: opacity 0.25s ease;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`\r\nconst PollingDot = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  min-height: 8px;\r\n  min-width: 8px;\r\n  margin-right: 0.5rem;\r\n  margin-top: 3px;\r\n  border-radius: 50%;\r\n  background-color: ${({ theme }) => theme.green1};\r\n`\r\n\r\nfunction SideNav({ history }) {\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n\r\n  const below1180 = useMedia('(max-width: 1180px)')\r\n\r\n  const seconds = useSessionStart()\r\n\r\n  return (\r\n    <Wrapper isMobile={below1080}>\r\n      {!below1080 ? (\r\n        <DesktopWrapper>\r\n          <AutoColumn gap=\"1rem\" style={{ marginTop: '1rem' }}>\r\n            <Title />\r\n            {!below1080 && (\r\n              <AutoColumn gap=\"1.25rem\" style={{ marginTop: '1rem' }}>\r\n                <BasicLink to=\"/home\">\r\n                  <Option activeText={history.location.pathname === '/home' ?? undefined}>\r\n                    <TrendingUp size={20} style={{ marginRight: '.75rem' }} />\r\n                    Overview\r\n                  </Option>\r\n                </BasicLink>\r\n                <BasicLink to=\"/tokens\">\r\n                  <Option\r\n                    activeText={\r\n                      (history.location.pathname.split('/')[1] === 'tokens' ||\r\n                        history.location.pathname.split('/')[1] === 'token') ??\r\n                      undefined\r\n                    }\r\n                  >\r\n                    <Disc size={20} style={{ marginRight: '.75rem' }} />\r\n                    Tokens\r\n                  </Option>\r\n                </BasicLink>\r\n                <BasicLink to=\"/pairs\">\r\n                  <Option\r\n                    activeText={\r\n                      (history.location.pathname.split('/')[1] === 'pairs' ||\r\n                        history.location.pathname.split('/')[1] === 'pair') ??\r\n                      undefined\r\n                    }\r\n                  >\r\n                    <PieChart size={20} style={{ marginRight: '.75rem' }} />\r\n                    Pairs\r\n                  </Option>\r\n                </BasicLink>\r\n\r\n                <BasicLink to=\"/accounts\">\r\n                  <Option\r\n                    activeText={\r\n                      (history.location.pathname.split('/')[1] === 'accounts' ||\r\n                        history.location.pathname.split('/')[1] === 'account') ??\r\n                      undefined\r\n                    }\r\n                  >\r\n                    <List size={20} style={{ marginRight: '.75rem' }} />\r\n                    Accounts\r\n                  </Option>\r\n                </BasicLink>\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n          <AutoColumn gap=\"0.5rem\" style={{ marginLeft: '.75rem', marginBottom: '4rem' }}>\r\n            <HeaderText>\r\n              <Link href=\"https://varen.finance\" target=\"_blank\">\r\n                Website\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://varen.exchange\" target=\"_blank\">\r\n                Exchange\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://blog.varen.finance\" target=\"_blank\">\r\n                Blog\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://discord.varen.finance\" target=\"_blank\">\r\n                Discord\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://twitter.varen.finance\" target=\"_blank\">\r\n                Twitter\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://telegram.varen.finance\" target=\"_blank\">\r\n                Telegram\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://github.varen.finance\" target=\"_blank\">\r\n                Github\r\n              </Link>\r\n            </HeaderText>\r\n          </AutoColumn>\r\n          {!below1180 && (\r\n            <Polling style={{ marginLeft: '.5rem' }}>\r\n              <PollingDot />\r\n              <a href=\"/\" style={{ color: 'white' }}>\r\n                <TYPE.small color={'white'}>\r\n                  Updated {!!seconds ? seconds + 's' : '-'} ago <br />\r\n                </TYPE.small>\r\n              </a>\r\n            </Polling>\r\n          )}\r\n        </DesktopWrapper>\r\n      ) : (\r\n        <MobileWrapper>\r\n          <Title />\r\n          <BasicLink to=\"/accounts\">\r\n            <Option\r\n              activeText={\r\n                (history.location.pathname.split('/')[1] === 'accounts' ||\r\n                  history.location.pathname.split('/')[1] === 'account') ??\r\n                undefined\r\n              }\r\n            >\r\n              <List size={20} style={{ marginRight: '.75rem' }} />\r\n              Accounts\r\n            </Option>\r\n          </BasicLink>\r\n        </MobileWrapper>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(SideNav)\r\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '..'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum } from '../../utils'\nimport { TYPE } from '../../Theme'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { RowFixed } from '../Row'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 10px 1.5fr 1fr 1fr;\n  grid-template-areas: 'number name pair value';\n  padding: 0 4px;\n\n  > * {\n    justify-content: flex-end;\n  }\n\n  @media screen and (max-width: 1080px) {\n    grid-template-columns: 10px 1.5fr 1fr 1fr;\n    grid-template-areas: 'number name pair value';\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas: 'name pair value';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nfunction LPList({ lps, disbaleLinks, maxItems = 10 }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below800 = useMedia('(max-width: 800px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [lps])\n\n  useEffect(() => {\n    if (lps) {\n      let extraPages = 1\n      if (Object.keys(lps).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(lps).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, lps])\n\n  const ListItem = ({ lp, index }) => {\n    return (\n      <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\n        {!below600 && (\n          <DataText area=\"number\" fontWeight=\"500\">\n            {index}\n          </DataText>\n        )}\n        <DataText area=\"name\" fontWeight=\"500\" justifyContent=\"flex-start\">\n          <CustomLink style={{ marginLeft: below600 ? 0 : '1rem', whiteSpace: 'nowrap' }} to={'/account/' + lp.user.id}>\n            {below800 ? lp.user.id.slice(0, 4) + '...' + lp.user.id.slice(38, 42) : lp.user.id}\n          </CustomLink>\n        </DataText>\n\n        {/* {!below1080 && (\n          <DataText area=\"type\" justifyContent=\"flex-end\">\n            {lp.type}\n          </DataText>\n        )} */}\n\n        <DataText>\n          <CustomLink area=\"pair\" to={'/pair/' + lp.pairAddress}>\n            <RowFixed>\n              {!below600 && <DoubleTokenLogo a0={lp.token0} a1={lp.token1} size={16} margin={true} />}\n              {lp.pairName}\n            </RowFixed>\n          </CustomLink>\n        </DataText>\n        <DataText area=\"value\">{formattedNum(lp.usd, true)}</DataText>\n      </DashGrid>\n    )\n  }\n\n  const lpList =\n    lps &&\n    lps.slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE).map((lp, index) => {\n      return (\n        <div key={index}>\n          <ListItem key={index} index={(page - 1) * 10 + index + 1} lp={lp} />\n          <Divider />\n        </div>\n      )\n    })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} disbaleLinks={disbaleLinks} style={{ height: 'fit-content', padding: ' 0 0 1rem 0' }}>\n        {!below600 && (\n          <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"name\">Account</TYPE.main>\n        </Flex>\n        {/* {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <TYPE.main area=\"type\">Type</TYPE.main>\n          </Flex>\n        )} */}\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"pair\">Pair</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"value\">Value</TYPE.main>\n        </Flex>\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!lpList ? <LocalLoader /> : lpList}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(LPList)\n","import React, { useEffect } from 'react'\r\nimport 'feather-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { TYPE } from '../Theme'\r\nimport { PageWrapper, FullWrapper } from '../components'\r\nimport Panel from '../components/Panel'\r\nimport LPList from '../components/LPList'\r\nimport styled from 'styled-components'\r\nimport AccountSearch from '../components/AccountSearch'\r\nimport { useTopLps } from '../contexts/GlobalData'\r\nimport LocalLoader from '../components/LocalLoader'\r\nimport { RowBetween } from '../components/Row'\r\nimport { useMedia } from 'react-use'\r\nimport Search from '../components/Search'\r\n\r\nconst AccountWrapper = styled.div`\r\n  @media screen and (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nfunction AccountLookup() {\r\n  // scroll to top\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const topLps = useTopLps()\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <FullWrapper>\r\n        <RowBetween>\r\n          <TYPE.largeHeader>Wallet analytics</TYPE.largeHeader>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n        <AccountWrapper>\r\n          <AccountSearch />\r\n        </AccountWrapper>\r\n        <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\r\n          Top Liquidity Positions\r\n        </TYPE.main>\r\n        <Panel>{topLps && topLps.length > 0 ? <LPList lps={topLps} maxItems={200} /> : <LocalLoader />}</Panel>\r\n      </FullWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(AccountLookup)\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ApolloProvider } from 'react-apollo'\r\nimport { client } from './apollo/client'\r\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom'\r\nimport GlobalPage from './pages/GlobalPage'\r\nimport TokenPage from './pages/TokenPage'\r\nimport PairPage from './pages/PairPage'\r\nimport { useGlobalData, useGlobalChartData } from './contexts/GlobalData'\r\nimport { isAddress } from './utils'\r\nimport AccountPage from './pages/AccountPage'\r\nimport AllTokensPage from './pages/AllTokensPage'\r\nimport AllPairsPage from './pages/AllPairsPage'\r\nimport PinnedData from './components/PinnedData'\r\n\r\nimport SideNav from './components/SideNav'\r\nimport AccountLookup from './pages/AccountLookup'\r\nimport { OVERVIEW_TOKEN_BLACKLIST, PAIR_BLACKLIST } from './constants'\r\nimport LocalLoader from './components/LocalLoader'\r\nimport { useLatestBlocks } from './contexts/Application'\r\nimport {Background, ThemedBackground} from \"./Theme\";\r\nimport SquareLogo from \"./assets/logo-sqare.svg\"\r\n\r\nconst AppWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 99;\r\n`\r\nconst ContentWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${({ open }) => (open ? '180px 1fr 180px' : '180px 1fr 64px')};\r\n  position: relative;\r\n  z-index: 99;\r\n\r\n  @media screen and (max-width: 1400px) {\r\n    grid-template-columns: 180px 1fr;\r\n  }\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    grid-template-columns: 1fr;\r\n    max-width: 100vw;\r\n    overflow: hidden;\r\n    grid-gap: 0;\r\n  }\r\n`\r\n\r\nconst Right = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0rem;\r\n  z-index: 99;\r\n  width: ${({ open }) => (open ? '180px' : '64px')};\r\n  height: ${({ open }) => (open ? 'fit-content' : '64px')};\r\n  overflow: auto;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  @media screen and (max-width: 1400px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Center = styled.div`\r\n  height: 100%;\r\n  z-index: 99;\r\n  transition: width 0.25s ease;\r\n  background-color: ${({ theme }) => theme.onlyLight};\r\n`\r\n\r\nconst WarningWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst WarningBanner = styled.div`\r\n  background-color: #165bbd;\r\n  padding: 1.5rem;\r\n  color: white;\r\n  width: 100%;\r\n  text-align: center;\r\n  font-weight: 500;\r\n`\r\n\r\nconst FixedWrapper = styled.div`\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\n/**\r\n * Wrap the component with the header and sidebar pinned tab\r\n */\r\nconst LayoutWrapper = ({ children, savedOpen, setSavedOpen }) => {\r\n  return (\r\n    <>\r\n      <ContentWrapper open={savedOpen}>\r\n        <SideNav />\r\n        <Center id=\"center\">{children}</Center>\r\n        <Right open={savedOpen}>\r\n          <PinnedData open={savedOpen} setSavedOpen={setSavedOpen} />\r\n        </Right>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst BLOCK_DIFFERENCE_THRESHOLD = 30\r\n\r\nfunction App() {\r\n  const [savedOpen, setSavedOpen] = useState(false)\r\n\r\n  const globalData = useGlobalData()\r\n  const globalChartData = useGlobalChartData()\r\n  const [latestBlock, headBlock] = useLatestBlocks()\r\n\r\n  // show warning\r\n  const showWarning = headBlock && latestBlock ? headBlock - latestBlock > BLOCK_DIFFERENCE_THRESHOLD : false\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <AppWrapper>\r\n        {showWarning && (\r\n          <WarningWrapper>\r\n            <WarningBanner>\r\n              {`Warning: The data on this site has only synced to Ethereum block ${latestBlock} (out of ${headBlock}). Please check back soon.`}\r\n            </WarningBanner>\r\n          </WarningWrapper>\r\n        )}\r\n        {globalData &&\r\n        Object.keys(globalData).length > 0 &&\r\n        globalChartData &&\r\n        Object.keys(globalChartData).length > 0 ? (\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route\r\n                exacts\r\n                strict\r\n                path=\"/token/:tokenAddress\"\r\n                render={({ match }) => {\r\n                  if (OVERVIEW_TOKEN_BLACKLIST.includes(match.params.tokenAddress.toLowerCase())) {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                  if (isAddress(match.params.tokenAddress.toLowerCase())) {\r\n                    return (\r\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                        <TokenPage address={match.params.tokenAddress.toLowerCase()} />\r\n                      </LayoutWrapper>\r\n                    )\r\n                  } else {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                }}\r\n              />\r\n              <Route\r\n                exacts\r\n                strict\r\n                path=\"/pair/:pairAddress\"\r\n                render={({ match }) => {\r\n                  if (PAIR_BLACKLIST.includes(match.params.pairAddress.toLowerCase())) {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                  if (isAddress(match.params.pairAddress.toLowerCase())) {\r\n                    return (\r\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                        <PairPage pairAddress={match.params.pairAddress.toLowerCase()} />\r\n                      </LayoutWrapper>\r\n                    )\r\n                  } else {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                }}\r\n              />\r\n              <Route\r\n                exacts\r\n                strict\r\n                path=\"/account/:accountAddress\"\r\n                render={({ match }) => {\r\n                  if (isAddress(match.params.accountAddress.toLowerCase())) {\r\n                    return (\r\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                        <AccountPage account={match.params.accountAddress.toLowerCase()} />\r\n                      </LayoutWrapper>\r\n                    )\r\n                  } else {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                }}\r\n              />\r\n\r\n              <Route path=\"/home\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <GlobalPage />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Route path=\"/tokens\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <AllTokensPage />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Route path=\"/pairs\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <AllPairsPage />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Route path=\"/accounts\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <AccountLookup />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </BrowserRouter>\r\n        ) : (\r\n          <FixedWrapper>\r\n            <Background style={{backgroundImage: `url(\"${SquareLogo}\")`}} />\r\n            <ThemedBackground/>\r\n            <LocalLoader />\r\n          </FixedWrapper>\r\n        )}\r\n      </AppWrapper>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport ReactGA from 'react-ga'\r\nimport { isMobile } from 'react-device-detect'\r\nimport ThemeProvider, { GlobalStyle } from './Theme'\r\nimport LocalStorageContextProvider, { Updater as LocalStorageContextUpdater } from './contexts/LocalStorage'\r\nimport TokenDataContextProvider, { Updater as TokenDataContextUpdater } from './contexts/TokenData'\r\nimport GlobalDataContextProvider from './contexts/GlobalData'\r\nimport PairDataContextProvider, { Updater as PairDataContextUpdater } from './contexts/PairData'\r\nimport ApplicationContextProvider from './contexts/Application'\r\nimport UserContextProvider from './contexts/User'\r\nimport App from './App'\r\n\r\n// initialize GA\r\nconst GOOGLE_ANALYTICS_ID = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\r\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\r\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID)\r\n  ReactGA.set({\r\n    customBrowserType: !isMobile\r\n      ? 'desktop'\r\n      : 'web3' in window || 'ethereum' in window\r\n      ? 'mobileWeb3'\r\n      : 'mobileRegular',\r\n  })\r\n} else {\r\n  ReactGA.initialize('test', { testMode: true, debug: true })\r\n}\r\n\r\nfunction ContextProviders({ children }) {\r\n  return (\r\n    <LocalStorageContextProvider>\r\n      <ApplicationContextProvider>\r\n        <TokenDataContextProvider>\r\n          <GlobalDataContextProvider>\r\n            <PairDataContextProvider>\r\n              <UserContextProvider>{children}</UserContextProvider>\r\n            </PairDataContextProvider>\r\n          </GlobalDataContextProvider>\r\n        </TokenDataContextProvider>\r\n      </ApplicationContextProvider>\r\n    </LocalStorageContextProvider>\r\n  )\r\n}\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      <LocalStorageContextUpdater />\r\n      <PairDataContextUpdater />\r\n      <TokenDataContextUpdater />\r\n    </>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <ContextProviders>\r\n    <Updaters />\r\n    <ThemeProvider>\r\n      <>\r\n        <GlobalStyle />\r\n        <App />\r\n      </>\r\n    </ThemeProvider>\r\n  </ContextProviders>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}