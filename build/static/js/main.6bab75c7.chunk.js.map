{"version":3,"sources":["assets/eth.png","assets/logo.svg","assets/logo-sqare.svg","contexts/LocalStorage.js","Theme/index.js","apollo/client.js","constants/index.js","apollo/queries.js","utils/tokenLists.ts","contexts/Application.js","utils/index.js","utils/data.ts","contexts/PairData.js","contexts/GlobalData.js","contexts/TokenData.js","utils/returns.ts","contexts/User.js","components/Row/index.js","components/Column/index.js","components/LocalLoader/index.js","components/Link/index.js","components/index.js","components/TokenLogo/index.js","components/DoubleLogo/index.js","components/Popover/index.tsx","hooks/index.ts","components/QuestionHelper/index.tsx","components/FormattedName/index.js","components/PairList/index.js","components/TokenList/index.js","components/DropdownSelect/index.js","components/TxnList/index.js","components/TradingviewChart/index.js","components/ButtonStyled/index.js","components/GlobalChart/index.js","components/Search/index.js","components/GlobalStats/index.js","components/Panel/index.js","pages/GlobalPage.js","components/CandleChart/index.js","components/TokenChart/index.js","components/Copy/index.js","components/Warning/index.js","pages/TokenPage.js","components/PairChart/index.js","pages/PairPage.js","components/UserChart/index.js","components/PairReturnsChart/index.js","components/PositionList/index.js","pages/AccountPage.js","pages/AllTokensPage.js","pages/AllPairsPage.js","components/AccountSearch/index.js","components/PinnedData/index.js","components/Title/index.js","components/SideNav/index.js","components/LPList/index.js","pages/AccountLookup.js","App.js","index.js"],"names":["module","exports","UPDATABLE_KEYS","LocalStorageContext","createContext","useLocalStorageContext","useContext","reducer","state","type","payload","key","value","some","k","Error","init","defaultLocalStorage","parsed","JSON","parse","window","localStorage","getItem","Provider","children","useReducer","undefined","dispatch","updateKey","useCallback","useMemo","Updater","useEffect","setItem","stringify","Math","floor","Date","now","useDarkModeManager","isDarkMode","toggleDarkMode","usePathDismissed","path","newPaths","useSavedAccounts","savedAccounts","addAccount","account","removeAccount","index","indexOf","slice","length","useSavedPairs","address","token0Address","token1Address","token0Symbol","token1Symbol","newList","useSavedTokens","symbol","theme","color","customColor","textColor","panelColor","backgroundColor","varenGold","concreteGray","inputBackground","shadowColor","mercuryGray","text1","text2","text3","text4","text5","white","bg1","bg2","bg3","bg4","bg5","bg6","modalBG","advancedBG","onlyLight","divider","primary1","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","shadow1","red1","green1","yellow1","yellow2","link","grey","darkgrey","background","TextWrapper","styled","Text","TYPE","props","fontWeight","fontSize","Background","div","a","attrs","target","rel","ThemedBackground","GlobalStyle","createGlobalStyle","client","ApolloClient","HttpLink","uri","cache","InMemoryCache","shouldBatch","healthClient","blockClient","timeframeOptions","WEEK","MONTH","ALL_TIME","SUPPORTED_LIST_URLS__NO_ENS","OVERVIEW_TOKEN_BLACKLIST","PAIR_BLACKLIST","FEE_WARNING_TOKENS","SUBGRAPH_HEALTH","gql","GET_BLOCK","GET_BLOCKS","timestamps","queryString","map","timestamp","PRICES_BY_BLOCK","tokenAddress","blocks","block","number","TOP_LPS_PER_PAIRS","HOURLY_PAIR_RATES","pairAddress","SHARE_VALUE","ETH_PRICE","LINK_PRICE","YFL_PRICE","SYFL_PRICE","YFLUSD_PRICE","USER_MINTS_BUNRS_PER_PAIR","USER_HISTORY","USER_POSITIONS","USER_TRANSACTIONS","PAIR_CHART","PAIR_DAY_DATA_BULK","pairs","startTimestamp","pairsString","pair","GLOBAL_CHART","GLOBAL_DATA","GLOBAL_TXNS","ALL_TOKENS","TOKEN_SEARCH","PAIR_SEARCH","ALL_PAIRS","PairFields","PAIRS_CURRENT","PAIR_DATA","PAIRS_BULK","PAIRS_HISTORICAL_BULK","TOKEN_CHART","TokenFields","TOKENS_CURRENT","TOKENS_DYNAMIC","TOKEN_DATA","FILTERED_TRANSACTIONS","uriToHttp","split","toLowerCase","substr","hash","match","name","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","urls","i","url","isLast","response","fetch","console","debug","ok","json","validationErrors","errors","reduce","memo","error","add","dataPath","message","dayjs","extend","utc","ApplicationContext","useApplicationContext","currency","newTimeFrame","supportedTokens","INITIAL_STATE","CURRENCY","TIME_KEY","update","updateTimeframe","updateSessionStart","updateSupportedTokens","updateLatestBlock","updateHeadBlock","useLatestBlocks","latestBlock","headBlock","query","then","res","syncedBlock","data","indexingStatusForCurrentVersion","chains","chainHeadBlock","catch","e","log","useTimeframe","useListedTokens","fetchedTokens","tokensSoFar","newTokens","Promise","resolve","tokens","allFetched","formatted","t","fetchList","toFormat","_Decimal","getTimeframe","timeWindow","utcStartTime","utcEndTime","subtract","endOf","unix","startOf","getPoolLink","remove","action","inputCurrency","outputCurrency","getSwapLink","localNumber","val","Numeral","format","BigNumber","set","EXPONENTIAL_AT","toNiceDate","date","getTimestampsForChanges","utcCurrentTime","splitQuery","localClient","vars","list","skipCount","fetchedData","allFound","skip","end","sliced","fetchPolicy","result","Object","keys","getBlockFromTimestamp","variables","timestampFrom","timestampTo","getBlocksFromTimestamps","push","getShareValueOverTime","utcSevenDaysBack","getTimestampRange","row","values","sharePriceUsd","parseFloat","reserveUSD","totalSupply","reserve0","reserve1","token0DerivedETH","token0","derivedETH","token1DerivedETH","token1","roiUsd","ethPrice","token0PriceUSD","token1PriceUSD","brow","timestamp_from","period_length","periods","toNiceDateYear","isAddress","ethers","utils","getAddress","toK","num","tx","formatDollarAmount","digits","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formattedNum","usd","isNaN","toFixed","Number","toLocaleString","formattedPercent","percent","fixedPercent","get2DayPercentChange","valueNow","value24HoursAgo","value48HoursAgo","currentChange","previousChange","adjustedPercentChange","isFinite","getPercentChange","TOKEN_OVERRIDES","updateNameData","id","includes","safeAccess","object","accumulator","currentValue","PairDataContext","usePairDataContext","topPairs","added","transactions","txns","chartData","hourlyData","updateTopPairs","updatePairTxns","updateChartData","updateHourlyData","getBulkPairData","pairList","t1","t2","tWeek","b1","b2","bWeek","allPairs","current","all","oneDayResult","twoDayResult","oneWeekResult","oneDayData","obj","cur","twoDayData","oneWeekData","oneDayHistory","newData","twoDayHistory","oneWeekHistory","parseData","pairData","oneDayBlock","volumeUSD","oneDayVolumeUSD","volumeChangeUSD","untrackedVolumeUSD","oneDayVolumeUntracked","volumeChangeUntracked","oneWeekVolumeUSD","trackedReserveUSD","trackedReserveETH","liquidityChangeUSD","createdAtBlockNumber","getPairTransactions","mints","burns","swaps","getPairChartData","startTime","concat","pairDayDatas","dayIndexSet","Set","dayIndexArray","forEach","dayData","dailyVolumeUSD","latestLiquidityUSD","currentDayIndex","nextDay","has","dayString","sort","b","parseInt","getHourlyRateData","time","filter","rate0","token0Price","rate1","token1Price","formattedHistoryRate0","formattedHistoryRate1","open","close","useEthPrice","formattedPairs","getData","usePairData","fetchData","useAllPairData","weekOfYear","GlobalDataContext","useGlobalDataContext","globalData","daily","weekly","ethOneDayPrice","ethPriceChange","linkPrice","linkOneDayPrice","linkPriceChange","yflPrice","yflOneDayPrice","yflPriceChange","syflPrice","syflOneDayPrice","syflPriceChange","yflusdPrice","yflusdOneDayPrice","yflusdPriceChange","allTokens","topLps","updateTransactions","updateChart","updateEthPrice","updateLinkPrice","updateYflPrice","updateSYflPrice","updateYflusdPrice","updateAllPairsInDarkHorse","updateAllTokensInDarkHorse","updateTopLps","getGlobalData","oldEthPrice","utcOneDayBack","utcTwoDaysBack","utcOneWeekBack","utcTwoWeeksBack","twoDayBlock","oneWeekBlock","twoWeekBlock","linkswapFactories","twoWeekResult","twoWeekData","totalVolumeUSD","oneWeekVolume","weeklyVolumeChange","txCount","oneDayTxns","txnChange","totalLiquidityUSD","totalLiquidityETH","getChartData","oldestDateToFetch","weeklyData","linkswapDayDatas","latestDayDats","mostLiquidTokens","startIndexWeekly","currentWeek","entry","week","weeklyVolumeUSD","getGlobalTransactions","transaction","mint","burn","swap","getEthPrice","ethPriceOneDay","priceChangeETH","resultOneDay","currentPrice","bundles","oneDayBackPrice","getLinkPrice","linkPriceOneDay","priceChangeLINK","getYflPrice","yflPriceOneDay","priceChangeYFL","getSYflPrice","syflPriceOneDay","priceChangeSYFL","getYflusdPrice","yflusdPriceOneDay","priceChangeYFLUSD","getAllPairsOnDarkHorse","getAllTokensOnDarkHorse","useGlobalData","useGlobalChartData","useState","oldestDateFetch","setOldestDateFetched","activeWindow","chartDataDaily","chartDataWeekly","newChartData","newWeeklyData","ethPriceOld","newPrice","oneDayPrice","priceChange","checkForEthPrice","TokenDataContext","useTokenDataContext","topTokens","token","interval","updateTopTokens","updateTokenTxns","updateAllPairs","updatePriceData","getTopTokens","tradeVolumeUSD","currentLiquidityUSD","totalLiquidity","oldLiquidityUSD","priceChangeUSD","priceUSD","oneDayVolumeETH","tradeVolume","bulkResults","getTokenData","oneDayVolumeUT","volumeChangeUT","aaveData","getTokenTransactions","allPairsFormatted","getTokenPairs","getIntervalTokenData","formattedHistory","getTokenChartData","tokenAddr","tokenDayDatas","latestPriceUSD","useTokenData","tokenData","useTokenPriceData","currentTime","windowSize","useAllTokenData","priceOverrides","formatPricesForEarlyTimestamps","position","getPrincipalForUserPerPair","user","amount0","amount1","results","mintToken0","mintToken1","amountUSD","burnToken0","burnToken1","getMetricsForPositionWindow","positionT0","positionT1","t0Ownership","liquidityTokenBalance","liquidityTokenTotalSupply","t1Ownership","token0_amount_t0","token1_amount_t0","token0_amount_t1","token1_amount_t1","sqrK_t0","sqrt","priceRatioT1","token0_amount_no_fees","token1_amount_no_fees","no_fees_usd","difference_fees_token1","difference_fees_usd","assetValueT0","assetValueT1","imp_loss_usd","varen_return","netValueT0","hodleReturn","netReturn","varenReturn","impLoss","fees","getHistoricalPairReturns","startDateTimestamp","currentPairData","pairSnapshots","currentETHPrice","createdAtTimestamp","dayIndex","round","sortedPositions","dayTimestamps","shareValues","shareValuesFormatted","share","netFees","dayTimestamp","timestampCeiling","dailyChanges","snapshot","localReturns","currentLiquidityValue","localFees","usdValue","getLPReturnsOnPair","snapshots","principal","currentPosition","net","return","varen","sum","UserContext","useUserContext","positions","miningPositions","historyData","updatePositions","updateMiningPositions","updateUserSnapshots","updateUserPairReturns","useUserSnapshots","allResults","found","liquidityPositionSnapshots","useUserPositionChart","setStartDateTimestamp","useStartTimestamp","currentSnapshot","Row","Box","align","padding","border","borderRadius","justify","RowBetween","AutoRow","wrap","gap","RowFixed","Column","AutoColumn","Wrapper","fill","height","css","Loader","LocalLoader","className","Link","external","rest","CustomLink","RouterLink","lighten","darken","BasicLink","Divider","IconWrapper","Hover","fade","StyledIcon","EmptyCard","PageWrapper","span","ul","li","isActive","ContentWrapper","ContentWrapperLarge","FullWrapper","BAD_IMAGES","Inline","Image","img","size","StyledEthereumLogo","TokenLogo","header","setError","src","EthereumLogo","boxShadow","alt","onError","event","preventDefault","DoubleTokenLogo","a0","a1","margin","TokenWrapper","sizeraw","toString","HigherLogo","CoveredLogo","PopoverContainer","show","transparentize","ReferenceElement","Arrow","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","options","offset","element","styles","attributes","callback","delay","savedCallback","useRef","tick","setInterval","clearInterval","useInterval","ref","popper","arrow","QuestionWrapper","TooltipContainer","Tooltip","text","QuestionHelper","disabled","setShow","marginLeft","onClick","onMouseEnter","onMouseLeave","adjustSize","FormattedName","maxCharacters","showHover","setShowHover","PageButtons","faded","List","DashGrid","ListWrapper","ClickableText","DataText","Flex","SORT_FIELD","FIELD_TO_VALUE","withRouter","disbaleLinks","maxItems","below600","useMedia","below740","below1080","page","setPage","maxPage","setMaxPage","ITEMS_PER_PAGE","sortDirection","setSortDirection","sortedColumn","setSortedColumn","extraPages","ListItem","liquidity","volume","apy","focus","area","marginRight","width","whiteSpace","to","addressA","addressB","pairA","pairB","center","alignItems","justifyContent","p","itemMax","below680","formattedTokens","filteredList","item","Dropdown","ArrowStyled","DropdownSelect","active","setActive","showDropdown","toggleDropdown","option","SortText","button","TXN_TYPE","ALL","SWAP","ADD","REMOVE","TxnList","symbol0Override","symbol1Override","filteredItems","setFilteredItems","txFilter","setTxFilter","toggleCurrency","useCurrentCurrency","newTxns","newTxn","token0Amount","token1Amount","sender","netToken0","amount0In","amount0Out","netToken1","amount1In","amount1Out","abs","filtered","below780","href","symbol0","symbol1","formattedS0","formattedS1","getTransactionType","valueETH","inSeconds","diff","inMinutes","inHours","inDays","formatTime","pl","CHART_TYPES","TradingViewChart","base","baseChange","field","title","useWeekly","chartCreated","setChartCreated","dataPrev","usePrevious","tooltip","document","getElementById","removeChild","resize","formattedData","topScale","darkMode","previousTheme","setLastBarText","toolTip","innerHTML","formattedPercentChange","chart","createChart","layout","rightPriceScale","scaleMargins","top","bottom","borderVisible","timeScale","grid","horzLines","visible","vertLines","crosshair","horzLine","labelVisible","vertLine","localization","priceFormatter","series","addHistogramSeries","priceFormat","lineColor","lineWidth","addAreaSeries","topColor","bottomColor","setData","createElement","setAttribute","appendChild","display","left","percentChange","subscribeCrosshairMove","param","point","x","y","dateStr","year","month","day","price","seriesPrices","get","fitContent","scrollToPosition","Base","RebassButton","ButtonLight","ButtonDropdown","ButtonFaded","ButtonDark","OptionButton","CHART_VIEW","VOLUME","LIQUIDITY","VOLUME_WINDOW","GlobalChart","chartView","setChartView","volumeWindow","setVolumeWindow","dailyData","chartDataFiltered","currentData","below800","isClient","container","clientWidth","setWidth","handleResize","addEventListener","removeEventListener","aspect","zIndex","Container","small","Input","input","large","SearchIconLarge","SearchIcon","CloseIcon","X","Menu","hide","MenuItem","Heading","Gray","Blue","Search","useAllTokensInDarkHorse","allTokenData","useAllPairsInDarkHorse","allPairData","showMenu","toggleMenu","setValue","toggleShadow","toggleBottomShadow","below700","below470","below410","searchedTokens","setSearchedTokens","searchedPairs","setSearchedPairs","escapeRegExp","string","replace","toUpperCase","asSymbol","as0","as1","asAddress","foundTokens","asName","searchedToken","included","uniqueTokens","searchedPair","uniquePairs","pairsFound","filteredTokenList","tokenA","tokenB","tokenEntryKey","RegExp","m","filteredPairList","tokensShown","setTokensShown","pairsShown","setPairsShown","onDismiss","wrapperRef","menuRef","handleClick","contains","shadow","placeholder","onChange","onFocus","Header","Medium","GlobalStats","below1295","below1180","below1024","below400","below816","pairCount","linkPriceOld","checkForLinkPrice","useLinkPrice","yflPriceOld","checkForYflPrice","useYflPrice","syflPriceOld","checkForSYflPrice","useSYflPrice","yflusdPriceOld","checkForYflusdPrice","useYflusdPrice","formattedEthPrice","formattedLinkPrice","formattedYflPrice","formattedSYflPrice","formattedYflUsdPrices","oneDayFees","mr","panelPseudo","Panel","RebassBox","hover","grouped","rounded","last","ListOptions","GridRow","useGlobalTransactions","querySelector","scrollTo","behavior","paddingBottom","mb","lineHeight","minHeight","marginTop","marginBottom","CandleStickChart","valueFormatter","low","high","min","max","mode","CrosshairMode","Normal","borderColor","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","ChartWrapper","PriceOption","PRICE","LINE_PRICE","DATA_FREQUENCY","TokenChart","chartFilter","setChartFilter","frequency","setFrequency","addressPrev","checkForChartData","useTokenChartData","setTimeWindow","prevWindow","hourlyWeek","hourlyMonth","hourlyAll","dailyWeek","dailyMonth","dailyAll","priceData","domain","dataMin","right","barCategoryGap","x1","y1","x2","y2","stopColor","stopOpacity","tickLine","axisLine","tickMargin","minTickGap","tickFormatter","dataKey","orientation","yAxisId","cursor","formatter","labelFormatter","label","labelStyle","paddingTop","contentStyle","wrapperStyle","stackId","strokeWidth","dot","stroke","opacity","CopyIcon","TransactionStatusText","flexRowNoWrap","CopyHelper","toCopy","timeout","isCopied","setIsCopied","staticCopy","didCopy","copy","setTimeout","clearTimeout","useCopyClipboard","setCopied","WarningWrapper","StyledWarningIcon","AlertTriangle","Warning","textContent","mt","ml","minWidth","DashboardWrapper","PanelWrapper","TokenDetailsLayout","WarningGrouping","history","fetchedPairsList","stale","setStale","fetched","setFetched","newFetched","unfetched","newPairData","fetchNewPairData","useDataForList","tokenPairs","useTokenPairs","tokenTxns","TOKEN_PAIRS_KEY","checkForTxns","useTokenTransactions","usingUtVolume","setUsingUtVolume","volumeChange","liquidityChange","txnChangeFormatted","below500","LENGTH","formattedSymbol","location","pathname","dismissed","markAsDismissed","savedTokens","addToken","listedTokens","flexWrap","alingItems","alignSelf","gridColumn","gridRow","OptionsRow","RATE0","RATE1","PairChart","base0","base1","clientHeight","setHeight","usePairChartData","useHourlyRateData","hourlyRate0","hourlyRate1","formattedSymbol0","formattedSymbol1","below1600","FixedPanel","HoverSpan","reserveA","reserveB","pairTxns","usePairTransactions","usingTracked","setUsingTracked","tokenAUSD","tokenBUSD","tokenARate","tokenBRate","below900","savedPairs","addPair","flexDirection","UserChart","setFormattedHistory","ownershipPerPair","relevantPositions","lpTokenBalance","dailyUSD","dayDatasForThisPair","mostRecent","totalUSD","valueUSD","useUserLiquidityChart","PairReturnsChart","strokeDasharray","VALUE","VAREN_RETURN","poolOwnership","positionsSorted","p0","p1","PRINCIPAL","HODL","hodl","AccountWrapper","DropdownWrapper","Flyout","MenuRow","AccountPage","useUserTransactions","liquidityPositions","positionData","returnData","formattedPositions","useUserPositions","transactionCount","totalSwappedUSD","total","showWarning","setShowWarning","hideLPContent","setShowDropdown","activePosition","setActivePosition","dynamicPositions","aggregateFees","positionValue","isBookmarked","handleBookmarkClick","AllTokensPage","AllPairsPage","AccountLink","accountValue","setAccountValue","stopPropagation","RightColumn","SavedButton","ScrollableDiv","setSavedOpen","removePair","removeToken","TitleWrapper","Title","useHistory","Logo","isMobile","Option","activeText","DesktopWrapper","MobileWrapper","HeaderText","Polling","PollingDot","seconds","sessionStart","setSeconds","useSessionStart","lps","lp","pairName","lpList","topLpLists","sorted","shorter","splice","useTopLps","AppWrapper","Right","Center","WarningBanner","FixedWrapper","LayoutWrapper","savedOpen","App","globalChartData","exacts","strict","render","params","accountAddress","backgroundImage","SquareLogo","ReactGA","initialize","process","customBrowserType","ReactDOM"],"mappings":"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","file":"static/js/main.6bab75c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eth.73dabb37.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ba85dfb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-sqare.ed5e5691.svg\";","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\r\n\r\nconst VAREN = 'VAREN'\r\n\r\nconst VERSION = 'VERSION'\r\nconst CURRENT_VERSION = 0\r\nconst LAST_SAVED = 'LAST_SAVED'\r\nconst DISMISSED_PATHS = 'DISMISSED_PATHS'\r\nconst SAVED_ACCOUNTS = 'SAVED_ACCOUNTS'\r\nconst SAVED_TOKENS = 'SAVED_TOKENS'\r\nconst SAVED_PAIRS = 'SAVED_PAIRS'\r\n\r\nconst DARK_MODE = 'DARK_MODE'\r\n\r\nconst UPDATABLE_KEYS = [DARK_MODE, DISMISSED_PATHS, SAVED_ACCOUNTS, SAVED_PAIRS, SAVED_TOKENS]\r\n\r\nconst UPDATE_KEY = 'UPDATE_KEY'\r\n\r\nconst LocalStorageContext = createContext()\r\n\r\nfunction useLocalStorageContext() {\r\n  return useContext(LocalStorageContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE_KEY: {\r\n      const { key, value } = payload\r\n      if (!UPDATABLE_KEYS.some((k) => k === key)) {\r\n        throw Error(`Unexpected key in LocalStorageContext reducer: '${key}'.`)\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [key]: value,\r\n        }\r\n      }\r\n    }\r\n    default: {\r\n      throw Error(`Unexpected action type in LocalStorageContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction init() {\r\n  const defaultLocalStorage = {\r\n    [VERSION]: CURRENT_VERSION,\r\n    [DARK_MODE]: true,\r\n    [DISMISSED_PATHS]: {},\r\n    [SAVED_ACCOUNTS]: [],\r\n    [SAVED_TOKENS]: {},\r\n    [SAVED_PAIRS]: {},\r\n  }\r\n\r\n  try {\r\n    const parsed = JSON.parse(window.localStorage.getItem(VAREN))\r\n    if (parsed[VERSION] !== CURRENT_VERSION) {\r\n      // this is where we could run migration logic\r\n      return defaultLocalStorage\r\n    } else {\r\n      return { ...defaultLocalStorage, ...parsed }\r\n    }\r\n  } catch {\r\n    return defaultLocalStorage\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, undefined, init)\r\n\r\n  const updateKey = useCallback((key, value) => {\r\n    dispatch({ type: UPDATE_KEY, payload: { key, value } })\r\n  }, [])\r\n\r\n  return (\r\n    <LocalStorageContext.Provider value={useMemo(() => [state, { updateKey }], [state, updateKey])}>\r\n      {children}\r\n    </LocalStorageContext.Provider>\r\n  )\r\n}\r\n\r\nexport function Updater() {\r\n  const [state] = useLocalStorageContext()\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(VAREN, JSON.stringify({ ...state, [LAST_SAVED]: Math.floor(Date.now() / 1000) }))\r\n  })\r\n\r\n  return null\r\n}\r\n\r\nexport function useDarkModeManager() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  let isDarkMode = state[DARK_MODE]\r\n  const toggleDarkMode = useCallback(\r\n    (value) => {\r\n      updateKey(DARK_MODE, value === false || value === true ? value : !isDarkMode)\r\n    },\r\n    [updateKey, isDarkMode]\r\n  )\r\n  return [isDarkMode, toggleDarkMode]\r\n}\r\n\r\nexport function usePathDismissed(path) {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const pathDismissed = state?.[DISMISSED_PATHS]?.[path]\r\n  function dismiss() {\r\n    let newPaths = state?.[DISMISSED_PATHS]\r\n    newPaths[path] = true\r\n    updateKey(DISMISSED_PATHS, newPaths)\r\n  }\r\n\r\n  return [pathDismissed, dismiss]\r\n}\r\n\r\nexport function useSavedAccounts() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const savedAccounts = state?.[SAVED_ACCOUNTS]\r\n\r\n  const addAccount = useCallback(\r\n    (account) => {\r\n      updateKey(SAVED_ACCOUNTS, [...(savedAccounts ?? []), account])\r\n    },\r\n    [savedAccounts, updateKey]\r\n  )\r\n\r\n  const removeAccount = useCallback(\r\n    (account) => {\r\n      let index = savedAccounts?.indexOf(account) ?? -1\r\n      if (index > -1) {\r\n        updateKey(SAVED_ACCOUNTS, [\r\n          ...savedAccounts.slice(0, index),\r\n          ...savedAccounts.slice(index + 1, savedAccounts.length),\r\n        ])\r\n      }\r\n    },\r\n    [savedAccounts, updateKey]\r\n  )\r\n\r\n  return [savedAccounts, addAccount, removeAccount]\r\n}\r\n\r\nexport function useSavedPairs() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const savedPairs = state?.[SAVED_PAIRS]\r\n\r\n  function addPair(address, token0Address, token1Address, token0Symbol, token1Symbol) {\r\n    let newList = state?.[SAVED_PAIRS]\r\n    newList[address] = {\r\n      address,\r\n      token0Address,\r\n      token1Address,\r\n      token0Symbol,\r\n      token1Symbol,\r\n    }\r\n    updateKey(SAVED_PAIRS, newList)\r\n  }\r\n\r\n  function removePair(address) {\r\n    let newList = state?.[SAVED_PAIRS]\r\n    newList[address] = null\r\n    updateKey(SAVED_PAIRS, newList)\r\n  }\r\n\r\n  return [savedPairs, addPair, removePair]\r\n}\r\n\r\nexport function useSavedTokens() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const savedTokens = state?.[SAVED_TOKENS]\r\n\r\n  function addToken(address, symbol) {\r\n    let newList = state?.[SAVED_TOKENS]\r\n    newList[address] = {\r\n      symbol,\r\n    }\r\n    updateKey(SAVED_TOKENS, newList)\r\n  }\r\n\r\n  function removeToken(address) {\r\n    let newList = state?.[SAVED_TOKENS]\r\n    newList[address] = null\r\n    updateKey(SAVED_TOKENS, newList)\r\n  }\r\n\r\n  return [savedTokens, addToken, removeToken]\r\n}\r\n","import React from 'react'\r\nimport { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle } from 'styled-components'\r\nimport { useDarkModeManager } from '../contexts/LocalStorage'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'rebass'\r\n\r\nexport default function ThemeProvider({ children }) {\r\n  const [darkMode] = useDarkModeManager()\r\n\r\n  return <StyledComponentsThemeProvider theme={theme(darkMode)}>{children}</StyledComponentsThemeProvider>\r\n}\r\n\r\nexport const theme = color => ({\r\n  customColor: color,\r\n  textColor: color,\r\n\r\n  panelColor: 'rgba(255, 255, 255, 0)',\r\n  backgroundColor: '#212429',\r\n\r\n  varenGold: '#ffd149',\r\n\r\n  concreteGray: '#292C2F',\r\n  inputBackground: '#1F1F1F',\r\n  shadowColor: '#000',\r\n  mercuryGray: '#333333',\r\n\r\n  text1: '#FFFFFF',\r\n  text2: '#C3C5CB',\r\n  text3: '#6C7284',\r\n  text4: '#565A69',\r\n  text5: '#2C2F36',\r\n\r\n  // special case text types\r\n  white: '#FFFFFF',\r\n\r\n  // backgrounds / greys\r\n  bg1: '#000119',\r\n  bg2: '#000119',\r\n  bg3: '#3949ab',\r\n  bg4: '#171a36',\r\n  bg5: '#6C7284',\r\n  bg6: '#181b37',\r\n\r\n  //specialty colors\r\n  modalBG: 'rgba(0,0,0,.425)',\r\n  advancedBG: '#000119',\r\n  onlyLight: 'transparent',\r\n  divider: 'rgba(43, 43, 43, 0.435)',\r\n\r\n  //primary colors\r\n  primary1: '#bebebe',\r\n  primary2: '#dddddd',\r\n  primary3: '#ffffff',\r\n  primary4: '#376bad70',\r\n  primary5: '#202F46',\r\n\r\n  // color text\r\n  primaryText1: '#87A9FF',\r\n\r\n  // secondary colors\r\n  secondary1: '#ffd149',\r\n  secondary2: '#17000b26',\r\n  secondary3: '#17000b26',\r\n\r\n  shadow1: '#000',\r\n\r\n  // other\r\n  red1: '#FF6871',\r\n  green1: '#27AE60',\r\n  yellow1: '#FFE270',\r\n  yellow2: '#F3841E',\r\n  link: '#bebebe',\r\n  grey: '#bebebe',\r\n  darkgrey: '#dddddd',\r\n\r\n  background: '#000119'\r\n})\r\n\r\nconst TextWrapper = styled(Text)`\r\n  color: ${({ color, theme }) => theme[color]};\r\n`\r\n\r\nexport const TYPE = {\r\n  main(props) {\r\n    return <TextWrapper fontWeight={500} fontSize={14} color={'text1'} {...props} />\r\n  },\r\n\r\n  body(props) {\r\n    return <TextWrapper fontWeight={400} fontSize={14} color={'text1'} {...props} />\r\n  },\r\n\r\n  small(props) {\r\n    return <TextWrapper fontWeight={500} fontSize={11} color={'text1'} {...props} />\r\n  },\r\n\r\n  header(props) {\r\n    return <TextWrapper fontWeight={600} color={'text1'} {...props} />\r\n  },\r\n\r\n  largeHeader(props) {\r\n    return <TextWrapper fontWeight={500} color={'text1'} fontSize={24} {...props} />\r\n  },\r\n\r\n  light(props) {\r\n    return <TextWrapper fontWeight={400} color={'text3'} fontSize={14} {...props} />\r\n  },\r\n\r\n  pink(props) {\r\n    return <TextWrapper fontWeight={props.faded ? 400 : 600} color={props.faded ? 'text1' : 'text1'} {...props} />\r\n  }\r\n}\r\n\r\nexport const Hover = styled.div`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const Link = styled.a.attrs({\r\n  target: '_blank',\r\n  rel: 'noopener noreferrer'\r\n})`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.primary1};\r\n  font-weight: 500;\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport const Background = styled.div`\r\n  position: absolute;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-position: 0 20vh;\r\n  background-size: 60vh auto;\r\n  background-repeat: no-repeat;\r\n  z-index: 2;\r\n  opacity: 0.05;\r\n`\r\nexport const ThemedBackground = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  pointer-events: none;\r\n  max-width: 200vw !important;\r\n  height: 100vw;\r\n  position: absolute;\r\n  z-index: 1;\r\n  background: radial-gradient(50% 50% at 50% 50%, rgb(41, 44, 71) 0%, rgb(0, 1, 32) 100%);\r\n  transform: translateY(-50vw);\r\n`\r\n\r\n// TODO: create a light background-image for light mode\r\nexport const GlobalStyle = createGlobalStyle`\r\n  @import url('https://rsms.me/inter/inter.css');\r\n  html { font-family: 'Inter', sans-serif; }\r\n  @supports (font-variation-settings: normal) {\r\n    html { font-family: 'Inter var', sans-serif; }\r\n  }\r\n  \r\n  html,\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    font-size: 14px;    \r\n    min-height: 100vh;\r\n    background-color: #000120;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n\r\n    :hover {\r\n      text-decoration: none\r\n    }\r\n  }\r\n  \r\n.three-line-legend {\r\n\twidth: 100%;\r\n\theight: 70px;\r\n\tposition: absolute;\r\n\tpadding: 8px;\r\n\tfont-size: 12px;\r\n\tcolor: #20262E;\r\n\tbackground-color: rgba(255, 255, 255, 0.23);\r\n\ttext-align: left;\r\n\tz-index: 10;\r\n  pointer-events: none;\r\n}\r\n\r\n.three-line-legend-dark {\r\n\twidth: 100%;\r\n\theight: 70px;\r\n\tposition: absolute;\r\n\tpadding: 8px;\r\n\tfont-size: 12px;\r\n\tcolor: white;\r\n\tbackground-color: rgba(255, 255, 255, 0.23);\r\n\ttext-align: left;\r\n\tz-index: 10;\r\n  pointer-events: none;\r\n}\r\n\r\n@media screen and (max-width: 800px) {\r\n  .three-line-legend {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n.tv-lightweight-charts{\r\n  width: 100% !important;\r\n  \r\n\r\n  & > * {\r\n    width: 100% !important;\r\n  }\r\n}\r\n\r\n  html {\r\n    font-size: 1rem;\r\n    font-variant: none;\r\n    color: 'black';\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n    height: 100%;\r\n  }\r\n  \r\n  @-webkit-keyframes sk-circleBounceDelay {\r\n    0%, 80%, 100% {\r\n      transform: scale(0);\r\n    } 40% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n  \r\n  @keyframes sk-circleBounceDelay {\r\n    0%, 80%, 100% {\r\n      transform: scale(0);\r\n    } 40% {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n`\r\n","import { ApolloClient } from 'apollo-client'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { HttpLink } from 'apollo-link-http'\r\n\r\nexport const client = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/subgraphs/name/yflink/linkswap-v1',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  shouldBatch: true,\r\n})\r\n\r\nexport const healthClient = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/index-node/graphql',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  shouldBatch: true,\r\n})\r\n\r\nexport const stakingClient = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  shouldBatch: true,\r\n})\r\n\r\nexport const blockClient = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n})\r\n","export const FACTORY_ADDRESS = '0x696708Db871B77355d6C2bE7290B27CF0Bb9B24b'\r\n\r\nexport const BUNDLE_ID = '1'\r\n\r\nexport const timeframeOptions = {\r\n  WEEK: '1 week',\r\n  MONTH: '1 month',\r\n  // THREE_MONTHS: '3 months',\r\n  // YEAR: '1 year',\r\n  ALL_TIME: 'All time'\r\n}\r\n\r\n// token list urls to fetch tokens from - use for warnings on tokens and pairs\r\nexport const SUPPORTED_LIST_URLS__NO_ENS = ['https://varen.exchange/lists/varenList.json']\r\n\r\n// hide from overview list\r\nexport const OVERVIEW_TOKEN_BLACKLIST = [\r\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\r\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\r\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\r\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1'\r\n]\r\n\r\n// pair blacklist\r\nexport const PAIR_BLACKLIST = ['0xb6a741f37d6e455ebcc9f17e2c16d0586c3f57a5']\r\n\r\n/**\r\n * For tokens that cause erros on fee calculations\r\n */\r\nexport const FEE_WARNING_TOKENS = ['0xd46ba6d942050d489dbd938a2c909a5d5039a161']\r\n","import gql from 'graphql-tag'\r\nimport { FACTORY_ADDRESS, BUNDLE_ID } from '../constants'\r\n\r\nexport const SUBGRAPH_HEALTH = gql`\r\n  query health {\r\n    indexingStatusForCurrentVersion(subgraphName: \"yflink/linkswap-v1\") {\r\n      synced\r\n      health\r\n      chains {\r\n        chainHeadBlock {\r\n          number\r\n        }\r\n        latestBlock {\r\n          number\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_BLOCK = gql`\r\n  query blocks($timestampFrom: Int!, $timestampTo: Int!) {\r\n    blocks(\r\n      first: 1\r\n      orderBy: timestamp\r\n      orderDirection: asc\r\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\r\n    ) {\r\n      id\r\n      number\r\n      timestamp\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_BLOCKS = (timestamps) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += timestamps.map((timestamp) => {\r\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${timestamp + 600\r\n      } }) {\r\n      number\r\n    }`\r\n  })\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const POSITIONS_BY_BLOCK = (account, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}:liquidityPositions(where: {user: \"${account}\"}, block: { number: ${block.number} }) { \r\n        liquidityTokenBalance\r\n        pair  {\r\n          id\r\n          totalSupply\r\n          reserveUSD\r\n        }\r\n      }\r\n    `\r\n  )\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const PRICES_BY_BLOCK = (tokenAddress, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \r\n        derivedETH\r\n      }\r\n    `\r\n  )\r\n  queryString += ','\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \r\n        ethPrice\r\n      }\r\n    `\r\n  )\r\n\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const TOP_LPS_PER_PAIRS = gql`\r\n  query lps($pair: Bytes!) {\r\n    liquidityPositions(where: { pair: $pair }, orderBy: liquidityTokenBalance, orderDirection: desc, first: 10) {\r\n      user {\r\n        id\r\n      }\r\n      pair {\r\n        id\r\n      }\r\n      liquidityTokenBalance\r\n    }\r\n  }\r\n`\r\n\r\nexport const HOURLY_PAIR_RATES = (pairAddress, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}: pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \r\n        token0Price\r\n        token1Price\r\n      }\r\n    `\r\n  )\r\n\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const SHARE_VALUE = (pairAddress, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}:pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \r\n        reserve0\r\n        reserve1\r\n        reserveUSD\r\n        totalSupply \r\n        token0{\r\n          derivedETH\r\n        }\r\n        token1{\r\n          derivedETH\r\n        }\r\n      }\r\n    `\r\n  )\r\n  queryString += ','\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \r\n        ethPrice\r\n      }\r\n    `\r\n  )\r\n\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const ETH_PRICE = (block) => {\r\n  const queryString = block\r\n    ? `\r\n    query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\r\n        id\r\n        ethPrice\r\n      }\r\n    }\r\n  `\r\n    : ` query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} }) {\r\n        id\r\n        ethPrice\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const LINK_PRICE = (block) => {\r\n  const queryString = block\r\n    ? `\r\n    query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\r\n        id\r\n        linkPrice\r\n      }\r\n    }\r\n  `\r\n    : ` query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} }) {\r\n        id\r\n        linkPrice\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const YFL_PRICE = (block) => {\r\n  const queryString = block\r\n    ? `\r\n    query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\r\n        id\r\n        yflPrice\r\n      }\r\n    }\r\n  `\r\n    : ` query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} }) {\r\n        id\r\n        yflPrice\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const SYFL_PRICE = (block) => {\r\n  const queryString = block\r\n    ? `\r\n    query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\r\n        id\r\n        syflPrice\r\n      }\r\n    }\r\n  `\r\n    : ` query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} }) {\r\n        id\r\n        syflPrice\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const YFLUSD_PRICE = (block) => {\r\n  const queryString = block\r\n    ? `\r\n    query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\r\n        id\r\n        yflusdPrice\r\n      }\r\n    }\r\n  `\r\n    : ` query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} }) {\r\n        id\r\n        yflusdPrice\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const USER = (block, account) => {\r\n  const queryString = `\r\n    query users {\r\n      user(id: \"${account}\", block: {number: ${block}}) {\r\n        liquidityPositions\r\n      }\r\n    }\r\n`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const USER_MINTS_BUNRS_PER_PAIR = gql`\r\n  query events($user: Bytes!, $pair: Bytes!) {\r\n    mints(where: { to: $user, pair: $pair }) {\r\n      amountUSD\r\n      amount0\r\n      amount1\r\n      timestamp\r\n      pair {\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n    burns(where: { sender: $user, pair: $pair }) {\r\n      amountUSD\r\n      amount0\r\n      amount1\r\n      timestamp\r\n      pair {\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const FIRST_SNAPSHOT = gql`\r\n  query snapshots($user: Bytes!) {\r\n    liquidityPositionSnapshots(first: 1, where: { user: $user }, orderBy: timestamp, orderDirection: asc) {\r\n      timestamp\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_HISTORY = gql`\r\n  query snapshots($user: Bytes!, $skip: Int!) {\r\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\r\n      timestamp\r\n      reserveUSD\r\n      liquidityTokenBalance\r\n      liquidityTokenTotalSupply\r\n      reserve0\r\n      reserve1\r\n      token0PriceUSD\r\n      token1PriceUSD\r\n      pair {\r\n        id\r\n        reserve0\r\n        reserve1\r\n        reserveUSD\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_POSITIONS = gql`\r\n  query liquidityPositions($user: Bytes!) {\r\n    liquidityPositions(where: { user: $user }) {\r\n      pair {\r\n        id\r\n        reserve0\r\n        reserve1\r\n        reserveUSD\r\n        token0 {\r\n          id\r\n          symbol\r\n          derivedETH\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n          derivedETH\r\n        }\r\n        totalSupply\r\n      }\r\n      liquidityTokenBalance\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_TRANSACTIONS = gql`\r\n  query transactions($user: Bytes!) {\r\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\r\n      id\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        id\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      to\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\r\n      id\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        id\r\n        token0 {\r\n          symbol\r\n        }\r\n        token1 {\r\n          symbol\r\n        }\r\n      }\r\n      sender\r\n      to\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\r\n      id\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        token0 {\r\n          symbol\r\n        }\r\n        token1 {\r\n          symbol\r\n        }\r\n      }\r\n      amount0In\r\n      amount0Out\r\n      amount1In\r\n      amount1Out\r\n      amountUSD\r\n      to\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_CHART = gql`\r\n  query pairDayDatas($pairAddress: Bytes!, $skip: Int!) {\r\n    pairDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { pairAddress: $pairAddress }) {\r\n      id\r\n      date\r\n      dailyVolumeToken0\r\n      dailyVolumeToken1\r\n      dailyVolumeUSD\r\n      reserveUSD\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_DAY_DATA = gql`\r\n  query pairDayDatas($pairAddress: Bytes!, $date: Int!) {\r\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\r\n      id\r\n      date\r\n      dailyVolumeToken0\r\n      dailyVolumeToken1\r\n      dailyVolumeUSD\r\n      totalSupply\r\n      reserveUSD\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_DAY_DATA_BULK = (pairs, startTimestamp) => {\r\n  let pairsString = `[`\r\n  pairs.map((pair) => {\r\n    return (pairsString += `\"${pair}\"`)\r\n  })\r\n  pairsString += ']'\r\n  const queryString = `\r\n    query days {\r\n      pairDayDatas(first: 1000, orderBy: date, orderDirection: asc, where: { pairAddress_in: ${pairsString}, date_gt: ${startTimestamp} }) {\r\n        id\r\n        pairAddress\r\n        date\r\n        dailyVolumeToken0\r\n        dailyVolumeToken1\r\n        dailyVolumeUSD\r\n        totalSupply\r\n        reserveUSD\r\n      }\r\n    } \r\n`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const GLOBAL_CHART = gql`\r\n  query linkswapDayDatas($startTime: Int!, $skip: Int!) {\r\n    linkswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\r\n      id\r\n      date\r\n      totalVolumeUSD\r\n      dailyVolumeUSD\r\n      dailyVolumeETH\r\n      totalLiquidityUSD\r\n      totalLiquidityETH\r\n    }\r\n  }\r\n`\r\n\r\nexport const GLOBAL_DATA = (block) => {\r\n  const queryString = ` query linkswapFactories {\r\n      linkswapFactories(\r\n       ${block ? `block: { number: ${block}}` : ``} \r\n       where: { id: \"${FACTORY_ADDRESS}\" }) {\r\n        id\r\n        totalVolumeUSD\r\n        totalVolumeETH\r\n        untrackedVolumeUSD\r\n        totalLiquidityUSD\r\n        totalLiquidityETH\r\n        txCount\r\n        pairCount\r\n      }\r\n    }`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const GLOBAL_TXNS = gql`\r\n  query transactions {\r\n    transactions(first: 100, orderBy: timestamp, orderDirection: desc) {\r\n      mints(orderBy: timestamp, orderDirection: desc) {\r\n        transaction {\r\n          id\r\n          timestamp\r\n        }\r\n        pair {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        to\r\n        liquidity\r\n        amount0\r\n        amount1\r\n        amountUSD\r\n      }\r\n      burns(orderBy: timestamp, orderDirection: desc) {\r\n        transaction {\r\n          id\r\n          timestamp\r\n        }\r\n        pair {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        sender\r\n        liquidity\r\n        amount0\r\n        amount1\r\n        amountUSD\r\n      }\r\n      swaps(orderBy: timestamp, orderDirection: desc) {\r\n        transaction {\r\n          id\r\n          timestamp\r\n        }\r\n        pair {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        amount0In\r\n        amount0Out\r\n        amount1In\r\n        amount1Out\r\n        amountUSD\r\n        to\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const ALL_TOKENS = gql`\r\n  query tokens($skip: Int!) {\r\n    tokens(first: 500, skip: $skip) {\r\n      id\r\n      name\r\n      symbol\r\n      totalLiquidity\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKEN_SEARCH = gql`\r\n  query tokens($value: String, $id: String) {\r\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n    }\r\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n    }\r\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_SEARCH = gql`\r\n  query pairs($tokens: [Bytes]!, $id: String) {\r\n    as0: pairs(where: { token0_in: $tokens }) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n    as1: pairs(where: { token1_in: $tokens }) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n    asAddress: pairs(where: { id: $id }) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const ALL_PAIRS = gql`\r\n  query pairs($skip: Int!) {\r\n    pairs(first: 500, skip: $skip, orderBy: trackedReserveETH, orderDirection: desc) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst PairFields = `\r\n  fragment PairFields on Pair {\r\n    id\r\n    txCount\r\n    token0 {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n      derivedETH\r\n    }\r\n    token1 {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n      derivedETH\r\n    }\r\n    reserve0\r\n    reserve1\r\n    reserveUSD\r\n    totalSupply\r\n    trackedReserveETH\r\n    reserveETH\r\n    volumeUSD\r\n    untrackedVolumeUSD\r\n    token0Price\r\n    token1Price\r\n    createdAtTimestamp\r\n  }\r\n`\r\n\r\nexport const PAIRS_CURRENT = gql`\r\n  query pairs {\r\n    pairs(first: 200, orderBy: trackedReserveETH, orderDirection: desc) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_DATA = (pairAddress, block) => {\r\n  const queryString = `\r\n    ${PairFields}\r\n    query pairs {\r\n      pairs(${block ? `block: {number: ${block}}` : ``} where: { id: \"${pairAddress}\"} ) {\r\n        ...PairFields\r\n      }\r\n    }`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const MINING_POSITIONS = (account) => {\r\n  const queryString = `\r\n    query users {\r\n      user(id: \"${account}\") {\r\n        miningPosition {\r\n          id\r\n          user {\r\n            id\r\n          }\r\n          miningPool {\r\n              pair {\r\n                id\r\n                token0\r\n                token1\r\n              }\r\n          }\r\n          balance\r\n        }\r\n      }\r\n    }\r\n`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const PAIRS_BULK = gql`\r\n  ${PairFields}\r\n  query pairs($allPairs: [Bytes]!) {\r\n    pairs(where: { id_in: $allPairs }, orderBy: trackedReserveETH, orderDirection: desc) {\r\n      ...PairFields\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIRS_HISTORICAL_BULK = (block, pairs) => {\r\n  let pairsString = `[`\r\n  pairs.map((pair) => {\r\n    return (pairsString += `\"${pair}\"`)\r\n  })\r\n  pairsString += ']'\r\n  let queryString = `\r\n  query pairs {\r\n    pairs(first: 200, where: {id_in: ${pairsString}}, block: {number: ${block}}, orderBy: trackedReserveETH, orderDirection: desc) {\r\n      id\r\n      reserveUSD\r\n      trackedReserveETH\r\n      volumeUSD\r\n      untrackedVolumeUSD\r\n    }\r\n  }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const TOKEN_CHART = gql`\r\n  query tokenDayDatas($tokenAddr: String!, $skip: Int!) {\r\n    tokenDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { token: $tokenAddr }) {\r\n      id\r\n      date\r\n      priceUSD\r\n      totalLiquidityToken\r\n      totalLiquidityUSD\r\n      totalLiquidityETH\r\n      dailyVolumeETH\r\n      dailyVolumeToken\r\n      dailyVolumeUSD\r\n    }\r\n  }\r\n`\r\n\r\nconst TokenFields = `\r\n  fragment TokenFields on Token {\r\n    id\r\n    name\r\n    symbol\r\n    derivedETH\r\n    tradeVolume\r\n    tradeVolumeUSD\r\n    untrackedVolumeUSD\r\n    totalLiquidity\r\n    txCount\r\n  }\r\n`\r\n\r\nexport const TOKENS_CURRENT = gql`\r\n  ${TokenFields}\r\n  query tokens {\r\n    tokens(first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\r\n      ...TokenFields\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKENS_DYNAMIC = (block) => {\r\n  const queryString = `\r\n    ${TokenFields}\r\n    query tokens {\r\n      tokens(block: {number: ${block}} first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\r\n        ...TokenFields\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const TOKEN_DATA = (tokenAddress, block) => {\r\n  const queryString = `\r\n    ${TokenFields}\r\n    query tokens {\r\n      tokens(${block ? `block : {number: ${block}}` : ``} where: {id:\"${tokenAddress}\"}) {\r\n        ...TokenFields\r\n      }\r\n      pairs0: pairs(where: {token0: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\r\n        id\r\n      }\r\n      pairs1: pairs(where: {token1: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\r\n        id\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const FILTERED_TRANSACTIONS = gql`\r\n  query($allPairs: [Bytes]!) {\r\n    mints(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      to\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    burns(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      sender\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    swaps(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      id\r\n      pair {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      amount0In\r\n      amount0Out\r\n      amount1In\r\n      amount1Out\r\n      amountUSD\r\n      to\r\n    }\r\n  }\r\n`\r\n","import { TokenList } from '@uniswap/token-lists'\r\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\r\nimport Ajv from 'ajv'\r\n\r\n/**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */\r\nfunction uriToHttp(uri: string): string[] {\r\n  const protocol = uri.split(':')[0].toLowerCase()\r\n  switch (protocol) {\r\n    case 'https':\r\n      return [uri]\r\n    case 'http':\r\n      return ['https' + uri.substr(4), uri]\r\n    case 'ipfs':\r\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\r\n    case 'ipns':\r\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\r\n\r\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n */\r\nexport default async function getTokenList(listUrl: string): Promise<TokenList> {\r\n  const urls = uriToHttp(listUrl)\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i]\r\n    const isLast = i === urls.length - 1\r\n    let response\r\n    try {\r\n      response = await fetch(url)\r\n    } catch (error) {\r\n      console.debug('Failed to fetch list', listUrl, error)\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    if (!response.ok) {\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    const json = await response.json()\r\n    if (!tokenListValidator(json)) {\r\n      const validationErrors: string =\r\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\r\n          const add = `${error.dataPath} ${error.message ?? ''}`\r\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\r\n        }, '') ?? 'unknown error'\r\n      throw new Error(`Token list failed validation: ${validationErrors}`)\r\n    }\r\n    return json\r\n  }\r\n  throw new Error('Unrecognized list URL protocol.')\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useState, useEffect } from 'react'\r\nimport { timeframeOptions, SUPPORTED_LIST_URLS__NO_ENS } from '../constants'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport getTokenList from '../utils/tokenLists'\r\nimport { healthClient } from '../apollo/client'\r\nimport { SUBGRAPH_HEALTH } from '../apollo/queries'\r\ndayjs.extend(utc)\r\n\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_TIMEFRAME = 'UPDATE_TIMEFRAME'\r\nconst UPDATE_SESSION_START = 'UPDATE_SESSION_START'\r\nconst UPDATED_SUPPORTED_TOKENS = 'UPDATED_SUPPORTED_TOKENS'\r\nconst UPDATE_LATEST_BLOCK = 'UPDATE_LATEST_BLOCK'\r\nconst UPDATE_HEAD_BLOCK = 'UPDATE_HEAD_BLOCK'\r\n\r\nconst SUPPORTED_TOKENS = 'SUPPORTED_TOKENS'\r\nconst TIME_KEY = 'TIME_KEY'\r\nconst CURRENCY = 'CURRENCY'\r\nconst SESSION_START = 'SESSION_START'\r\nconst LATEST_BLOCK = 'LATEST_BLOCK'\r\nconst HEAD_BLOCK = 'HEAD_BLOCK'\r\n\r\nconst ApplicationContext = createContext()\r\n\r\nfunction useApplicationContext() {\r\n  return useContext(ApplicationContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { currency } = payload\r\n      return {\r\n        ...state,\r\n        [CURRENCY]: currency,\r\n      }\r\n    }\r\n    case UPDATE_TIMEFRAME: {\r\n      const { newTimeFrame } = payload\r\n      return {\r\n        ...state,\r\n        [TIME_KEY]: newTimeFrame,\r\n      }\r\n    }\r\n    case UPDATE_SESSION_START: {\r\n      const { timestamp } = payload\r\n      return {\r\n        ...state,\r\n        [SESSION_START]: timestamp,\r\n      }\r\n    }\r\n\r\n    case UPDATE_LATEST_BLOCK: {\r\n      const { block } = payload\r\n      return {\r\n        ...state,\r\n        [LATEST_BLOCK]: block,\r\n      }\r\n    }\r\n\r\n    case UPDATE_HEAD_BLOCK: {\r\n      const { block } = payload\r\n      return {\r\n        ...state,\r\n        [HEAD_BLOCK]: block,\r\n      }\r\n    }\r\n\r\n    case UPDATED_SUPPORTED_TOKENS: {\r\n      const { supportedTokens } = payload\r\n      return {\r\n        ...state,\r\n        [SUPPORTED_TOKENS]: supportedTokens,\r\n      }\r\n    }\r\n\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  CURRENCY: 'USD',\r\n  TIME_KEY: timeframeOptions.ALL_TIME,\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\r\n  const update = useCallback((currency) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        currency,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  // global time window for charts - see timeframe options in constants\r\n  const updateTimeframe = useCallback((newTimeFrame) => {\r\n    dispatch({\r\n      type: UPDATE_TIMEFRAME,\r\n      payload: {\r\n        newTimeFrame,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  // used for refresh button\r\n  const updateSessionStart = useCallback((timestamp) => {\r\n    dispatch({\r\n      type: UPDATE_SESSION_START,\r\n      payload: {\r\n        timestamp,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateSupportedTokens = useCallback((supportedTokens) => {\r\n    dispatch({\r\n      type: UPDATED_SUPPORTED_TOKENS,\r\n      payload: {\r\n        supportedTokens,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateLatestBlock = useCallback((block) => {\r\n    dispatch({\r\n      type: UPDATE_LATEST_BLOCK,\r\n      payload: {\r\n        block,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateHeadBlock = useCallback((block) => {\r\n    dispatch({\r\n      type: UPDATE_HEAD_BLOCK,\r\n      payload: {\r\n        block,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <ApplicationContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updateSessionStart,\r\n            updateTimeframe,\r\n            updateSupportedTokens,\r\n            updateLatestBlock,\r\n            updateHeadBlock,\r\n          },\r\n        ],\r\n        [state, update, updateTimeframe, updateSessionStart, updateSupportedTokens, updateLatestBlock, updateHeadBlock]\r\n      )}\r\n    >\r\n      {children}\r\n    </ApplicationContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useLatestBlocks() {\r\n  const [state, { updateLatestBlock, updateHeadBlock }] = useApplicationContext()\r\n\r\n  const latestBlock = state?.[LATEST_BLOCK]\r\n  const headBlock = state?.[HEAD_BLOCK]\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      healthClient\r\n        .query({\r\n          query: SUBGRAPH_HEALTH,\r\n        })\r\n        .then((res) => {\r\n          const syncedBlock = res.data.indexingStatusForCurrentVersion.chains[0].latestBlock.number\r\n          const headBlock = res.data.indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number\r\n          if (syncedBlock && headBlock) {\r\n            updateLatestBlock(syncedBlock)\r\n            updateHeadBlock(headBlock)\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e)\r\n        })\r\n    }\r\n    if (!latestBlock) {\r\n      fetch()\r\n    }\r\n  }, [latestBlock, updateHeadBlock, updateLatestBlock])\r\n\r\n  return [latestBlock, headBlock]\r\n}\r\n\r\nexport function useCurrentCurrency() {\r\n  const [state, { update }] = useApplicationContext()\r\n  const toggleCurrency = useCallback(() => {\r\n    if (state.currency === 'ETH') {\r\n      update('USD')\r\n    } else {\r\n      update('ETH')\r\n    }\r\n  }, [state, update])\r\n  return [state[CURRENCY], toggleCurrency]\r\n}\r\n\r\nexport function useTimeframe() {\r\n  const [state, { updateTimeframe }] = useApplicationContext()\r\n  const activeTimeframe = state?.[TIME_KEY]\r\n  return [activeTimeframe, updateTimeframe]\r\n}\r\n\r\nexport function useStartTimestamp() {\r\n  const [activeWindow] = useTimeframe()\r\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\r\n\r\n  // monitor the old date fetched\r\n  useEffect(() => {\r\n    let startTime =\r\n      dayjs\r\n        .utc()\r\n        .subtract(\r\n          1,\r\n          activeWindow === timeframeOptions.week ? 'week' : activeWindow === timeframeOptions.ALL_TIME ? 'year' : 'year'\r\n        )\r\n        .startOf('day')\r\n        .unix() - 1\r\n    // if we find a new start time less than the current startrtime - update oldest pooint to fetch\r\n    setStartDateTimestamp(startTime)\r\n  }, [activeWindow, startDateTimestamp])\r\n\r\n  return startDateTimestamp\r\n}\r\n\r\n// keep track of session length for refresh ticker\r\nexport function useSessionStart() {\r\n  const [state, { updateSessionStart }] = useApplicationContext()\r\n  const sessionStart = state?.[SESSION_START]\r\n\r\n  useEffect(() => {\r\n    if (!sessionStart) {\r\n      updateSessionStart(Date.now())\r\n    }\r\n  })\r\n\r\n  const [seconds, setSeconds] = useState(0)\r\n\r\n  useEffect(() => {\r\n    let interval = null\r\n    interval = setInterval(() => {\r\n      setSeconds(Date.now() - sessionStart ?? Date.now())\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [seconds, sessionStart])\r\n\r\n  return parseInt(seconds / 1000)\r\n}\r\n\r\nexport function useListedTokens() {\r\n  const [state, { updateSupportedTokens }] = useApplicationContext()\r\n  const supportedTokens = state?.[SUPPORTED_TOKENS]\r\n\r\n  useEffect(() => {\r\n    async function fetchList() {\r\n      const allFetched = await SUPPORTED_LIST_URLS__NO_ENS.reduce(async (fetchedTokens, url) => {\r\n        const tokensSoFar = await fetchedTokens\r\n        const newTokens = await getTokenList(url)\r\n        return Promise.resolve([...tokensSoFar, ...newTokens.tokens])\r\n      }, Promise.resolve([]))\r\n      let formatted = allFetched?.map((t) => t.address.toLowerCase())\r\n      updateSupportedTokens(formatted)\r\n    }\r\n    if (!supportedTokens) {\r\n      fetchList()\r\n    }\r\n  }, [updateSupportedTokens, supportedTokens])\r\n\r\n  return supportedTokens\r\n}\r\n","import React from 'react'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport dayjs from 'dayjs'\r\nimport { ethers } from 'ethers'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { client, blockClient } from '../apollo/client'\r\nimport { GET_BLOCK, GET_BLOCKS, SHARE_VALUE } from '../apollo/queries'\r\nimport { Text } from 'rebass'\r\nimport _Decimal from 'decimal.js-light'\r\nimport toFormat from 'toformat'\r\nimport { timeframeOptions } from '../constants'\r\nimport Numeral from 'numeral'\r\n\r\n// format libraries\r\nconst Decimal = toFormat(_Decimal)\r\nBigNumber.set({ EXPONENTIAL_AT: 50 })\r\ndayjs.extend(utc)\r\n\r\nexport function getTimeframe(timeWindow) {\r\n  const utcEndTime = dayjs.utc()\r\n  // based on window, get starttime\r\n  let utcStartTime\r\n  switch (timeWindow) {\r\n    case timeframeOptions.WEEK:\r\n      utcStartTime =\r\n        utcEndTime\r\n          .subtract(1, 'week')\r\n          .endOf('day')\r\n          .unix() - 1\r\n      break\r\n    case timeframeOptions.MONTH:\r\n      utcStartTime =\r\n        utcEndTime\r\n          .subtract(1, 'month')\r\n          .endOf('day')\r\n          .unix() - 1\r\n      break\r\n    case timeframeOptions.ALL_TIME:\r\n      utcStartTime =\r\n        utcEndTime\r\n          .subtract(1, 'year')\r\n          .endOf('day')\r\n          .unix() - 1\r\n      break\r\n    default:\r\n      utcStartTime =\r\n        utcEndTime\r\n          .subtract(1, 'year')\r\n          .startOf('year')\r\n          .unix() - 1\r\n      break\r\n  }\r\n  return utcStartTime\r\n}\r\n\r\nexport function getPoolLink(token0Address, token1Address = null, remove = false) {\r\n  let action = remove ? `remove` : `add`\r\n  let inputCurrency = null\r\n  let outputCurrency = null\r\n\r\n  if (!token1Address) {\r\n    inputCurrency = 'ETH'\r\n    outputCurrency = token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address\r\n  } else {\r\n    inputCurrency = token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address\r\n    outputCurrency = token1Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token1Address\r\n  }\r\n\r\n  if (outputCurrency === 'ETH') {\r\n    outputCurrency = inputCurrency\r\n    inputCurrency = 'ETH'\r\n  }\r\n\r\n  return `https://varen.exchange/#/${action}/${inputCurrency}/${outputCurrency}`\r\n}\r\n\r\nexport function getSwapLink(token0Address, token1Address = null) {\r\n  let queryString = null\r\n  if (!token1Address) {\r\n    queryString = `outputCurrency=${token0Address}`\r\n  } else {\r\n    let inputCurrency = token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address\r\n    let outputCurrency = token1Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token1Address\r\n\r\n    if (outputCurrency === 'ETH') {\r\n      outputCurrency = inputCurrency\r\n      inputCurrency = 'ETH'\r\n    }\r\n\r\n    queryString = `inputCurrency=${inputCurrency}&outputCurrency=${outputCurrency}`\r\n  }\r\n\r\n  return `https://varen.exchange/#/swap?${queryString}`\r\n}\r\n\r\nexport function getMiningPoolLink(token0Address) {\r\n  return `https://varen.exchange/#/add/ETH/${token0Address}`\r\n}\r\n\r\nexport function getDarkHorseAppLink(linkVariable) {\r\n  let baseDarkHorseUrl = 'https://varen.exchange'\r\n  if (!linkVariable) {\r\n    return baseDarkHorseUrl\r\n  }\r\n\r\n  return `${baseDarkHorseUrl}/ETH/${linkVariable}`\r\n}\r\n\r\nexport function localNumber(val) {\r\n  return Numeral(val).format('0,0')\r\n}\r\n\r\nexport const toNiceDate = date => {\r\n  let x = dayjs.utc(dayjs.unix(date)).format('MMM DD')\r\n  return x\r\n}\r\n\r\nexport const toWeeklyDate = date => {\r\n  const formatted = dayjs.utc(dayjs.unix(date))\r\n  date = new Date(formatted)\r\n  const day = new Date(formatted).getDay()\r\n  var lessDays = day === 6 ? 0 : day + 1\r\n  var wkStart = new Date(new Date(date).setDate(date.getDate() - lessDays))\r\n  var wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6))\r\n  return dayjs.utc(wkStart).format('MMM DD') + ' - ' + dayjs.utc(wkEnd).format('MMM DD')\r\n}\r\n\r\nexport function getTimestampsForChanges() {\r\n  const utcCurrentTime = dayjs()\r\n  const t1 = utcCurrentTime\r\n    .subtract(1, 'day')\r\n    .startOf('minute')\r\n    .unix()\r\n  const t2 = utcCurrentTime\r\n    .subtract(2, 'day')\r\n    .startOf('minute')\r\n    .unix()\r\n  const tWeek = utcCurrentTime\r\n    .subtract(1, 'week')\r\n    .startOf('minute')\r\n    .unix()\r\n  return [t1, t2, tWeek]\r\n}\r\n\r\nexport async function splitQuery(query, localClient, vars, list, skipCount = 100) {\r\n  let fetchedData = {}\r\n  let allFound = false\r\n  let skip = 0\r\n\r\n  while (!allFound) {\r\n    let end = list.length\r\n    if (skip + skipCount < list.length) {\r\n      end = skip + skipCount\r\n    }\r\n    let sliced = list.slice(skip, end)\r\n    let result = await localClient.query({\r\n      query: query(...vars, sliced),\r\n      fetchPolicy: 'cache-first'\r\n    })\r\n    fetchedData = {\r\n      ...fetchedData,\r\n      ...result.data\r\n    }\r\n    if (Object.keys(result.data).length < skipCount || skip + skipCount > list.length) {\r\n      allFound = true\r\n    } else {\r\n      skip += skipCount\r\n    }\r\n  }\r\n\r\n  return fetchedData\r\n}\r\n\r\n/**\r\n * @notice Fetches first block after a given timestamp\r\n * @dev Query speed is optimized by limiting to a 600-second period\r\n * @param {Int} timestamp in seconds\r\n */\r\nexport async function getBlockFromTimestamp(timestamp) {\r\n  let result = await blockClient.query({\r\n    query: GET_BLOCK,\r\n    variables: {\r\n      timestampFrom: timestamp,\r\n      timestampTo: timestamp + 600\r\n    },\r\n    fetchPolicy: 'cache-first'\r\n  })\r\n  return result?.data?.blocks?.[0]?.number\r\n}\r\n\r\n/**\r\n * @notice Fetches block objects for an array of timestamps.\r\n * @dev blocks are returned in chronological order (ASC) regardless of input.\r\n * @dev blocks are returned at string representations of Int\r\n * @dev timestamps are returns as they were provided; not the block time.\r\n * @param {Array} timestamps\r\n */\r\nexport async function getBlocksFromTimestamps(timestamps, skipCount = 500) {\r\n  if (timestamps?.length === 0) {\r\n    return []\r\n  }\r\n\r\n  let fetchedData = await splitQuery(GET_BLOCKS, blockClient, [], timestamps, skipCount)\r\n\r\n  let blocks = []\r\n  if (fetchedData) {\r\n    for (var t in fetchedData) {\r\n      if (fetchedData[t].length > 0) {\r\n        blocks.push({\r\n          timestamp: t.split('t')[1],\r\n          number: fetchedData[t][0]['number']\r\n        })\r\n      }\r\n    }\r\n  }\r\n  return blocks\r\n}\r\n\r\nexport async function getLiquidityTokenBalanceOvertime(account, timestamps) {\r\n  // get blocks based on timestamps\r\n  const blocks = await getBlocksFromTimestamps(timestamps)\r\n\r\n  // get historical share values with time travel queries\r\n  let result = await client.query({\r\n    query: SHARE_VALUE(account, blocks),\r\n    fetchPolicy: 'cache-first'\r\n  })\r\n\r\n  let values = []\r\n  for (var row in result?.data) {\r\n    let timestamp = row.split('t')[1]\r\n    if (timestamp) {\r\n      values.push({\r\n        timestamp,\r\n        balance: 0\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @notice Example query using time travel queries\r\n * @dev TODO - handle scenario where blocks are not available for a timestamps (e.g. current time)\r\n * @param {String} pairAddress\r\n * @param {Array} timestamps\r\n */\r\nexport async function getShareValueOverTime(pairAddress, timestamps) {\r\n  if (!timestamps) {\r\n    const utcCurrentTime = dayjs()\r\n    const utcSevenDaysBack = utcCurrentTime.subtract(8, 'day').unix()\r\n    timestamps = getTimestampRange(utcSevenDaysBack, 86400, 7)\r\n  }\r\n\r\n  // get blocks based on timestamps\r\n  const blocks = await getBlocksFromTimestamps(timestamps)\r\n\r\n  // get historical share values with time travel queries\r\n  let result = await client.query({\r\n    query: SHARE_VALUE(pairAddress, blocks),\r\n    fetchPolicy: 'cache-first'\r\n  })\r\n\r\n  let values = []\r\n  for (var row in result?.data) {\r\n    let timestamp = row.split('t')[1]\r\n    let sharePriceUsd = parseFloat(result.data[row]?.reserveUSD) / parseFloat(result.data[row]?.totalSupply)\r\n    if (timestamp) {\r\n      values.push({\r\n        timestamp,\r\n        sharePriceUsd,\r\n        totalSupply: result.data[row].totalSupply,\r\n        reserve0: result.data[row].reserve0,\r\n        reserve1: result.data[row].reserve1,\r\n        reserveUSD: result.data[row].reserveUSD,\r\n        token0DerivedETH: result.data[row].token0.derivedETH,\r\n        token1DerivedETH: result.data[row].token1.derivedETH,\r\n        roiUsd: values && values[0] ? sharePriceUsd / values[0]['sharePriceUsd'] : 1,\r\n        ethPrice: 0,\r\n        token0PriceUSD: 0,\r\n        token1PriceUSD: 0\r\n      })\r\n    }\r\n  }\r\n\r\n  // add eth prices\r\n  let index = 0\r\n  for (var brow in result?.data) {\r\n    let timestamp = brow.split('b')[1]\r\n    if (timestamp) {\r\n      values[index].ethPrice = result.data[brow].ethPrice\r\n      values[index].token0PriceUSD = result.data[brow].ethPrice * values[index].token0DerivedETH\r\n      values[index].token1PriceUSD = result.data[brow].ethPrice * values[index].token1DerivedETH\r\n      index += 1\r\n    }\r\n  }\r\n\r\n  return values\r\n}\r\n\r\n/**\r\n * @notice Creates an evenly-spaced array of timestamps\r\n * @dev Periods include a start and end timestamp. For example, n periods are defined by n+1 timestamps.\r\n * @param {Int} timestamp_from in seconds\r\n * @param {Int} period_length in seconds\r\n * @param {Int} periods\r\n */\r\nexport function getTimestampRange(timestamp_from, period_length, periods) {\r\n  let timestamps = []\r\n  for (let i = 0; i <= periods; i++) {\r\n    timestamps.push(timestamp_from + i * period_length)\r\n  }\r\n  return timestamps\r\n}\r\n\r\nexport const toNiceDateYear = date => dayjs.utc(dayjs.unix(date)).format('MMMM DD, YYYY')\r\n\r\nexport const isAddress = value => {\r\n  try {\r\n    return ethers.utils.getAddress(value.toLowerCase())\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const toK = num => {\r\n  return Numeral(num).format('0.[00]a')\r\n}\r\n\r\nexport const setThemeColor = theme => document.documentElement.style.setProperty('--c-token', theme || '#333333')\r\n\r\nexport const Big = number => new BigNumber(number)\r\n\r\nexport const urls = {\r\n  showTransaction: tx => `https://etherscan.io/tx/${tx}/`,\r\n  showAddress: address => `https://www.etherscan.io/address/${address}/`,\r\n  showToken: address => `https://www.etherscan.io/token/${address}/`,\r\n  showBlock: block => `https://etherscan.io/block/${block}/`\r\n}\r\n\r\nexport const formatTime = unix => {\r\n  const now = dayjs()\r\n  const timestamp = dayjs.unix(unix)\r\n\r\n  const inSeconds = now.diff(timestamp, 'second')\r\n  const inMinutes = now.diff(timestamp, 'minute')\r\n  const inHours = now.diff(timestamp, 'hour')\r\n  const inDays = now.diff(timestamp, 'day')\r\n\r\n  if (inHours >= 24) {\r\n    return `${inDays} ${inDays === 1 ? 'day' : 'days'} ago`\r\n  } else if (inMinutes >= 60) {\r\n    return `${inHours} ${inHours === 1 ? 'hour' : 'hours'} ago`\r\n  } else if (inSeconds >= 60) {\r\n    return `${inMinutes} ${inMinutes === 1 ? 'minute' : 'minutes'} ago`\r\n  } else {\r\n    return `${inSeconds} ${inSeconds === 1 ? 'second' : 'seconds'} ago`\r\n  }\r\n}\r\n\r\nexport const formatNumber = num => {\r\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n}\r\n\r\n// using a currency library here in case we want to add more in future\r\nexport const formatDollarAmount = (num, digits) => {\r\n  const formatter = new Intl.NumberFormat([], {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: digits,\r\n    maximumFractionDigits: digits\r\n  })\r\n  return formatter.format(num)\r\n}\r\n\r\nexport const toSignificant = (number, significantDigits) => {\r\n  Decimal.set({ precision: significantDigits + 1, rounding: Decimal.ROUND_UP })\r\n  const updated = new Decimal(number).toSignificantDigits(significantDigits)\r\n  return updated.toFormat(updated.decimalPlaces(), { groupSeparator: '' })\r\n}\r\n\r\nexport const formattedNum = (number, usd = false, acceptNegatives = false) => {\r\n  if (isNaN(number) || number === '' || number === undefined) {\r\n    return usd ? '$0' : 0\r\n  }\r\n  let num = parseFloat(number)\r\n\r\n  if (num > 500000000) {\r\n    return (usd ? '$' : '') + toK(num.toFixed(0), true)\r\n  }\r\n\r\n  if (num === 0) {\r\n    if (usd) {\r\n      return '$0'\r\n    }\r\n    return 0\r\n  }\r\n\r\n  if (num < 0.0001 && num > 0) {\r\n    return usd ? '< $0.0001' : '< 0.0001'\r\n  }\r\n\r\n  if (num > 1000) {\r\n    return usd ? formatDollarAmount(num, 0) : Number(parseFloat(num).toFixed(0)).toLocaleString()\r\n  }\r\n\r\n  if (usd) {\r\n    if (num < 0) {\r\n      return formatDollarAmount(num, 0)\r\n    } else if (num < 0.1) {\r\n      return formatDollarAmount(num, 4)\r\n    } else {\r\n      return formatDollarAmount(num, 2)\r\n    }\r\n  }\r\n\r\n  return Number(parseFloat(num).toFixed(5)).toLocaleString()\r\n}\r\n\r\nexport function rawPercent(percentRaw) {\r\n  let percent = parseFloat(percentRaw * 100)\r\n  if (!percent || percent === 0) {\r\n    return '0%'\r\n  }\r\n  if (percent < 1 && percent > 0) {\r\n    return '< 1%'\r\n  }\r\n  return percent.toFixed(0) + '%'\r\n}\r\n\r\nexport function formattedPercent(percent, useBrackets = false) {\r\n  percent = parseFloat(percent)\r\n  if (!percent || percent === 0) {\r\n    return <Text fontWeight={500}>0%</Text>\r\n  }\r\n\r\n  if (percent < 0.0001 && percent > 0) {\r\n    return (\r\n      <Text fontWeight={500} color=\"green\">\r\n        {'< 0.0001%'}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  if (percent < 0 && percent > -0.0001) {\r\n    return (\r\n      <Text fontWeight={500} color=\"red\">\r\n        {'< 0.0001%'}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  let fixedPercent = percent.toFixed(2)\r\n  if (fixedPercent === '0.00') {\r\n    return '0%'\r\n  }\r\n  if (fixedPercent > 0) {\r\n    if (fixedPercent > 100) {\r\n      return <Text fontWeight={500} color=\"green\">{`+${percent?.toFixed(0).toLocaleString()}%`}</Text>\r\n    } else {\r\n      return <Text fontWeight={500} color=\"green\">{`+${fixedPercent}%`}</Text>\r\n    }\r\n  } else {\r\n    return <Text fontWeight={500} color=\"red\">{`${fixedPercent}%`}</Text>\r\n  }\r\n}\r\n\r\n/**\r\n * gets the amoutn difference plus the % change in change itself (second order change)\r\n * @param {*} valueNow\r\n * @param {*} value24HoursAgo\r\n * @param {*} value48HoursAgo\r\n */\r\nexport const get2DayPercentChange = (valueNow, value24HoursAgo, value48HoursAgo) => {\r\n  // get volume info for both 24 hour periods\r\n  let currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\r\n  let previousChange = parseFloat(value24HoursAgo) - parseFloat(value48HoursAgo)\r\n\r\n  const adjustedPercentChange = (parseFloat(currentChange - previousChange) / parseFloat(previousChange)) * 100\r\n\r\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\r\n    return [currentChange, 0]\r\n  }\r\n  return [currentChange, adjustedPercentChange]\r\n}\r\n\r\n/**\r\n * get standard percent change between two values\r\n * @param {*} valueNow\r\n * @param {*} value24HoursAgo\r\n */\r\nexport const getPercentChange = (valueNow, value24HoursAgo) => {\r\n  const adjustedPercentChange =\r\n    ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\r\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\r\n    return 0\r\n  }\r\n  return adjustedPercentChange\r\n}\r\n\r\nexport function isEquivalent(a, b) {\r\n  var aProps = Object.getOwnPropertyNames(a)\r\n  var bProps = Object.getOwnPropertyNames(b)\r\n  if (aProps.length !== bProps.length) {\r\n    return false\r\n  }\r\n  for (var i = 0; i < aProps.length; i++) {\r\n    var propName = aProps[i]\r\n    if (a[propName] !== b[propName]) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n","interface BasicData {\r\n  token0?: {\r\n    id: string\r\n    name: string\r\n    symbol: string\r\n  }\r\n  token1?: {\r\n    id: string\r\n    name: string\r\n    symbol: string\r\n  }\r\n}\r\n\r\n// Override data return from graph - usually because proxy token has changed\r\n// names since entitiy was created in subgraph\r\n// keys are lowercase token addresses <--------\r\nconst TOKEN_OVERRIDES: { [address: string]: { name: string; symbol: string } } = {\r\n  '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2': {\r\n    name: 'Ether (Wrapped)',\r\n    symbol: 'ETH',\r\n  },\r\n  '0x1416946162b1c2c871a73b07e932d2fb6c932069': {\r\n    name: 'Energi',\r\n    symbol: 'NRGE',\r\n  },\r\n}\r\n\r\n// override tokens with incorrect symbol or names\r\nexport function updateNameData(data: BasicData): BasicData | undefined {\r\n  if (data?.token0?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token0.id)) {\r\n    data.token0.name = TOKEN_OVERRIDES[data.token0.id].name\r\n    data.token0.symbol = TOKEN_OVERRIDES[data.token0.id].symbol\r\n  }\r\n\r\n  if (data?.token1?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token1.id)) {\r\n    data.token1.name = TOKEN_OVERRIDES[data.token1.id].name\r\n    data.token1.symbol = TOKEN_OVERRIDES[data.token1.id].symbol\r\n  }\r\n\r\n  return data\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\r\n\r\nimport { client } from '../apollo/client'\r\nimport {\r\n  PAIR_DATA,\r\n  PAIR_CHART,\r\n  FILTERED_TRANSACTIONS,\r\n  PAIRS_CURRENT,\r\n  PAIRS_BULK,\r\n  PAIRS_HISTORICAL_BULK,\r\n  HOURLY_PAIR_RATES,\r\n} from '../apollo/queries'\r\n\r\nimport { useEthPrice } from './GlobalData'\r\n\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport {\r\n  getPercentChange,\r\n  get2DayPercentChange,\r\n  isAddress,\r\n  getBlocksFromTimestamps,\r\n  getTimestampsForChanges,\r\n  splitQuery,\r\n} from '../utils'\r\nimport { timeframeOptions } from '../constants'\r\nimport { useLatestBlocks } from './Application'\r\nimport { updateNameData } from '../utils/data'\r\n\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_PAIR_TXNS = 'UPDATE_PAIR_TXNS'\r\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\r\nconst UPDATE_TOP_PAIRS = 'UPDATE_TOP_PAIRS'\r\nconst UPDATE_HOURLY_DATA = 'UPDATE_HOURLY_DATA'\r\n\r\ndayjs.extend(utc)\r\n\r\nexport function safeAccess(object, path) {\r\n  return object\r\n    ? path.reduce(\r\n        (accumulator, currentValue) => (accumulator && accumulator[currentValue] ? accumulator[currentValue] : null),\r\n        object\r\n      )\r\n    : null\r\n}\r\n\r\nconst PairDataContext = createContext()\r\n\r\nfunction usePairDataContext() {\r\n  return useContext(PairDataContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { pairAddress, data } = payload\r\n      return {\r\n        ...state,\r\n        [pairAddress]: {\r\n          ...state?.[pairAddress],\r\n          ...data,\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_TOP_PAIRS: {\r\n      const { topPairs } = payload\r\n      let added = {}\r\n      topPairs.map((pair) => {\r\n        return (added[pair.id] = pair)\r\n      })\r\n      return {\r\n        ...state,\r\n        ...added,\r\n      }\r\n    }\r\n\r\n    case UPDATE_PAIR_TXNS: {\r\n      const { address, transactions } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...(safeAccess(state, [address]) || {}),\r\n          txns: transactions,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_CHART_DATA: {\r\n      const { address, chartData } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...(safeAccess(state, [address]) || {}),\r\n          chartData,\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_HOURLY_DATA: {\r\n      const { address, hourlyData, timeWindow } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          hourlyData: {\r\n            ...state?.[address]?.hourlyData,\r\n            [timeWindow]: hourlyData,\r\n          },\r\n        },\r\n      }\r\n    }\r\n\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {})\r\n\r\n  // update pair specific data\r\n  const update = useCallback((pairAddress, data) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        pairAddress,\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTopPairs = useCallback((topPairs) => {\r\n    dispatch({\r\n      type: UPDATE_TOP_PAIRS,\r\n      payload: {\r\n        topPairs,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updatePairTxns = useCallback((address, transactions) => {\r\n    dispatch({\r\n      type: UPDATE_PAIR_TXNS,\r\n      payload: { address, transactions },\r\n    })\r\n  }, [])\r\n\r\n  const updateChartData = useCallback((address, chartData) => {\r\n    dispatch({\r\n      type: UPDATE_CHART_DATA,\r\n      payload: { address, chartData },\r\n    })\r\n  }, [])\r\n\r\n  const updateHourlyData = useCallback((address, hourlyData, timeWindow) => {\r\n    dispatch({\r\n      type: UPDATE_HOURLY_DATA,\r\n      payload: { address, hourlyData, timeWindow },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <PairDataContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updatePairTxns,\r\n            updateChartData,\r\n            updateTopPairs,\r\n            updateHourlyData,\r\n          },\r\n        ],\r\n        [state, update, updatePairTxns, updateChartData, updateTopPairs, updateHourlyData]\r\n      )}\r\n    >\r\n      {children}\r\n    </PairDataContext.Provider>\r\n  )\r\n}\r\n\r\nasync function getBulkPairData(pairList, ethPrice) {\r\n  const [t1, t2, tWeek] = getTimestampsForChanges()\r\n  let [{ number: b1 }, { number: b2 }, { number: bWeek }] = await getBlocksFromTimestamps([t1, t2, tWeek])\r\n\r\n  try {\r\n    let current = await client.query({\r\n      query: PAIRS_BULK,\r\n      variables: {\r\n        allPairs: pairList,\r\n      },\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let [oneDayResult, twoDayResult, oneWeekResult] = await Promise.all(\r\n      [b1, b2, bWeek].map(async (block) => {\r\n        let result = client.query({\r\n          query: PAIRS_HISTORICAL_BULK(block, pairList),\r\n          fetchPolicy: 'cache-first',\r\n        })\r\n        return result\r\n      })\r\n    )\r\n\r\n    let oneDayData = oneDayResult?.data?.pairs.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let twoDayData = twoDayResult?.data?.pairs.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let oneWeekData = oneWeekResult?.data?.pairs.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let pairData = await Promise.all(\r\n      current &&\r\n        current.data.pairs.map(async (pair) => {\r\n          let data = pair\r\n          let oneDayHistory = oneDayData?.[pair.id]\r\n          if (!oneDayHistory) {\r\n            let newData = await client.query({\r\n              query: PAIR_DATA(pair.id, b1),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            oneDayHistory = newData.data.pairs[0]\r\n          }\r\n          let twoDayHistory = twoDayData?.[pair.id]\r\n          if (!twoDayHistory) {\r\n            let newData = await client.query({\r\n              query: PAIR_DATA(pair.id, b2),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            twoDayHistory = newData.data.pairs[0]\r\n          }\r\n          let oneWeekHistory = oneWeekData?.[pair.id]\r\n          if (!oneWeekHistory) {\r\n            let newData = await client.query({\r\n              query: PAIR_DATA(pair.id, bWeek),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            oneWeekHistory = newData.data.pairs[0]\r\n          }\r\n          data = parseData(data, oneDayHistory, twoDayHistory, oneWeekHistory, ethPrice, b1)\r\n          return data\r\n        })\r\n    )\r\n    return pairData\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction parseData(data, oneDayData, twoDayData, oneWeekData, ethPrice, oneDayBlock) {\r\n  // get volume changes\r\n  const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n    data?.volumeUSD,\r\n    oneDayData?.volumeUSD ? oneDayData.volumeUSD : 0,\r\n    twoDayData?.volumeUSD ? twoDayData.volumeUSD : 0\r\n  )\r\n  const [oneDayVolumeUntracked, volumeChangeUntracked] = get2DayPercentChange(\r\n    data?.untrackedVolumeUSD,\r\n    oneDayData?.untrackedVolumeUSD ? parseFloat(oneDayData?.untrackedVolumeUSD) : 0,\r\n    twoDayData?.untrackedVolumeUSD ? twoDayData?.untrackedVolumeUSD : 0\r\n  )\r\n  const oneWeekVolumeUSD = parseFloat(oneWeekData ? data?.volumeUSD - oneWeekData?.volumeUSD : data.volumeUSD)\r\n\r\n  // set volume properties\r\n  data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\r\n  data.oneWeekVolumeUSD = oneWeekVolumeUSD\r\n  data.volumeChangeUSD = volumeChangeUSD\r\n  data.oneDayVolumeUntracked = oneDayVolumeUntracked\r\n  data.volumeChangeUntracked = volumeChangeUntracked\r\n\r\n  // set liquiditry properties\r\n  data.trackedReserveUSD = data.trackedReserveETH * ethPrice\r\n  data.liquidityChangeUSD = getPercentChange(data.reserveUSD, oneDayData?.reserveUSD)\r\n\r\n  // format if pair hasnt existed for a day or a week\r\n  if (!oneDayData && data && data.createdAtBlockNumber > oneDayBlock) {\r\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\r\n  }\r\n  if (!oneDayData && data) {\r\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\r\n  }\r\n  if (!oneWeekData && data) {\r\n    data.oneWeekVolumeUSD = parseFloat(data.volumeUSD)\r\n  }\r\n\r\n  // format incorrect names\r\n  updateNameData(data)\r\n\r\n  return data\r\n}\r\n\r\nconst getPairTransactions = async (pairAddress) => {\r\n  const transactions = {}\r\n\r\n  try {\r\n    let result = await client.query({\r\n      query: FILTERED_TRANSACTIONS,\r\n      variables: {\r\n        allPairs: [pairAddress],\r\n      },\r\n      fetchPolicy: 'no-cache',\r\n    })\r\n    transactions.mints = result.data.mints\r\n    transactions.burns = result.data.burns\r\n    transactions.swaps = result.data.swaps\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return transactions\r\n}\r\n\r\nconst getPairChartData = async (pairAddress) => {\r\n  let data = []\r\n  const utcEndTime = dayjs.utc()\r\n  let utcStartTime = utcEndTime.subtract(1, 'year').startOf('minute')\r\n  let startTime = utcStartTime.unix() - 1\r\n\r\n  try {\r\n    let allFound = false\r\n    let skip = 0\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: PAIR_CHART,\r\n        variables: {\r\n          pairAddress: pairAddress,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      skip += 1000\r\n      data = data.concat(result.data.pairDayDatas)\r\n      if (result.data.pairDayDatas.length < 1000) {\r\n        allFound = true\r\n      }\r\n    }\r\n\r\n    let dayIndexSet = new Set()\r\n    let dayIndexArray = []\r\n    const oneDay = 24 * 60 * 60\r\n    data.forEach((dayData, i) => {\r\n      // add the day index to the set of days\r\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\r\n      dayIndexArray.push(data[i])\r\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\r\n      dayData.reserveUSD = parseFloat(dayData.reserveUSD)\r\n    })\r\n\r\n    if (data[0]) {\r\n      // fill in empty days\r\n      let timestamp = data[0].date ? data[0].date : startTime\r\n      let latestLiquidityUSD = data[0].reserveUSD\r\n      let index = 1\r\n      while (timestamp < utcEndTime.unix() - oneDay) {\r\n        const nextDay = timestamp + oneDay\r\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\r\n        if (!dayIndexSet.has(currentDayIndex)) {\r\n          data.push({\r\n            date: nextDay,\r\n            dayString: nextDay,\r\n            dailyVolumeUSD: 0,\r\n            reserveUSD: latestLiquidityUSD,\r\n          })\r\n        } else {\r\n          latestLiquidityUSD = dayIndexArray[index].reserveUSD\r\n          index = index + 1\r\n        }\r\n        timestamp = nextDay\r\n      }\r\n    }\r\n\r\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nconst getHourlyRateData = async (pairAddress, startTime, latestBlock) => {\r\n  try {\r\n    const utcEndTime = dayjs.utc()\r\n    let time = startTime\r\n\r\n    // create an array of hour start times until we reach current hour\r\n    const timestamps = []\r\n    while (time <= utcEndTime.unix() - 3600) {\r\n      timestamps.push(time)\r\n      time += 3600\r\n    }\r\n\r\n    // backout if invalid timestamp format\r\n    if (timestamps.length === 0) {\r\n      return []\r\n    }\r\n\r\n    // once you have all the timestamps, get the blocks for each timestamp in a bulk query\r\n    let blocks\r\n\r\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\r\n\r\n    // catch failing case\r\n    if (!blocks || blocks?.length === 0) {\r\n      return []\r\n    }\r\n\r\n    if (latestBlock) {\r\n      blocks = blocks.filter((b) => {\r\n        return parseFloat(b.number) <= parseFloat(latestBlock)\r\n      })\r\n    }\r\n\r\n    const result = await splitQuery(HOURLY_PAIR_RATES, client, [pairAddress], blocks, 100)\r\n\r\n    // format token ETH price results\r\n    let values = []\r\n    for (var row in result) {\r\n      let timestamp = row.split('t')[1]\r\n      if (timestamp) {\r\n        values.push({\r\n          timestamp,\r\n          rate0: parseFloat(result[row]?.token0Price),\r\n          rate1: parseFloat(result[row]?.token1Price),\r\n        })\r\n      }\r\n    }\r\n\r\n    let formattedHistoryRate0 = []\r\n    let formattedHistoryRate1 = []\r\n\r\n    // for each hour, construct the open and close price\r\n    for (let i = 0; i < values.length - 1; i++) {\r\n      formattedHistoryRate0.push({\r\n        timestamp: values[i].timestamp,\r\n        open: parseFloat(values[i].rate0),\r\n        close: parseFloat(values[i + 1].rate0),\r\n      })\r\n      formattedHistoryRate1.push({\r\n        timestamp: values[i].timestamp,\r\n        open: parseFloat(values[i].rate1),\r\n        close: parseFloat(values[i + 1].rate1),\r\n      })\r\n    }\r\n\r\n    return [formattedHistoryRate0, formattedHistoryRate1]\r\n  } catch (e) {\r\n    console.log(e)\r\n    return [[], []]\r\n  }\r\n}\r\n\r\nexport function Updater() {\r\n  const [, { updateTopPairs }] = usePairDataContext()\r\n  const [ethPrice] = useEthPrice()\r\n  useEffect(() => {\r\n    async function getData() {\r\n      // get top pairs by reserves\r\n      let {\r\n        data: { pairs },\r\n      } = await client.query({\r\n        query: PAIRS_CURRENT,\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n\r\n      // format as array of addresses\r\n      const formattedPairs = pairs.map((pair) => {\r\n        return pair.id\r\n      })\r\n\r\n      // get data for every pair in list\r\n      let topPairs = await getBulkPairData(formattedPairs, ethPrice)\r\n      topPairs && updateTopPairs(topPairs)\r\n    }\r\n    ethPrice && getData()\r\n  }, [ethPrice, updateTopPairs])\r\n  return null\r\n}\r\n\r\nexport function useHourlyRateData(pairAddress, timeWindow) {\r\n  const [state, { updateHourlyData }] = usePairDataContext()\r\n  const chartData = state?.[pairAddress]?.hourlyData?.[timeWindow]\r\n  const [latestBlock] = useLatestBlocks()\r\n\r\n  useEffect(() => {\r\n    const currentTime = dayjs.utc()\r\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\r\n    const startTime =\r\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\r\n\r\n    async function fetch() {\r\n      let data = await getHourlyRateData(pairAddress, startTime, latestBlock)\r\n      updateHourlyData(pairAddress, data, timeWindow)\r\n    }\r\n    if (!chartData) {\r\n      fetch()\r\n    }\r\n  }, [chartData, timeWindow, pairAddress, updateHourlyData, latestBlock])\r\n\r\n  return chartData\r\n}\r\n\r\n/**\r\n * @todo\r\n * store these updates to reduce future redundant calls\r\n */\r\nexport function useDataForList(pairList) {\r\n  const [state] = usePairDataContext()\r\n  const [ethPrice] = useEthPrice()\r\n\r\n  const [stale, setStale] = useState(false)\r\n  const [fetched, setFetched] = useState([])\r\n\r\n  // reset\r\n  useEffect(() => {\r\n    if (pairList) {\r\n      setStale(false)\r\n      setFetched()\r\n    }\r\n  }, [pairList])\r\n\r\n  useEffect(() => {\r\n    async function fetchNewPairData() {\r\n      let newFetched = []\r\n      let unfetched = []\r\n\r\n      pairList.map(async (pair) => {\r\n        let currentData = state?.[pair.id]\r\n        if (!currentData) {\r\n          unfetched.push(pair.id)\r\n        } else {\r\n          newFetched.push(currentData)\r\n        }\r\n      })\r\n\r\n      let newPairData = await getBulkPairData(\r\n        unfetched.map((pair) => {\r\n          return pair\r\n        }),\r\n        ethPrice\r\n      )\r\n      setFetched(newFetched.concat(newPairData))\r\n    }\r\n    if (ethPrice && pairList && pairList.length > 0 && !fetched && !stale) {\r\n      setStale(true)\r\n      fetchNewPairData()\r\n    }\r\n  }, [ethPrice, state, pairList, stale, fetched])\r\n\r\n  let formattedFetch =\r\n    fetched &&\r\n    fetched.reduce((obj, cur) => {\r\n      return { ...obj, [cur?.id]: cur }\r\n    }, {})\r\n\r\n  return formattedFetch\r\n}\r\n\r\n/**\r\n * Get all the current and 24hr changes for a pair\r\n */\r\nexport function usePairData(pairAddress) {\r\n  const [state, { update }] = usePairDataContext()\r\n  const [ethPrice] = useEthPrice()\r\n  const pairData = state?.[pairAddress]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!pairData && pairAddress) {\r\n        let data = await getBulkPairData([pairAddress], ethPrice)\r\n        data && update(pairAddress, data[0])\r\n      }\r\n    }\r\n    if (!pairData && pairAddress && ethPrice && isAddress(pairAddress)) {\r\n      fetchData()\r\n    }\r\n  }, [pairAddress, pairData, update, ethPrice])\r\n\r\n  return pairData || {}\r\n}\r\n\r\n/**\r\n * Get most recent txns for a pair\r\n */\r\nexport function usePairTransactions(pairAddress) {\r\n  const [state, { updatePairTxns }] = usePairDataContext()\r\n  const pairTxns = state?.[pairAddress]?.txns\r\n  useEffect(() => {\r\n    async function checkForTxns() {\r\n      if (!pairTxns) {\r\n        let transactions = await getPairTransactions(pairAddress)\r\n        updatePairTxns(pairAddress, transactions)\r\n      }\r\n    }\r\n    checkForTxns()\r\n  }, [pairTxns, pairAddress, updatePairTxns])\r\n  return pairTxns\r\n}\r\n\r\nexport function usePairChartData(pairAddress) {\r\n  const [state, { updateChartData }] = usePairDataContext()\r\n  const chartData = state?.[pairAddress]?.chartData\r\n\r\n  useEffect(() => {\r\n    async function checkForChartData() {\r\n      if (!chartData) {\r\n        let data = await getPairChartData(pairAddress)\r\n        updateChartData(pairAddress, data)\r\n      }\r\n    }\r\n    checkForChartData()\r\n  }, [chartData, pairAddress, updateChartData])\r\n  return chartData\r\n}\r\n\r\n/**\r\n * Get list of all pairs in VAREN\r\n */\r\nexport function useAllPairData() {\r\n  const [state] = usePairDataContext()\r\n  return state || {}\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\r\nimport { client } from '../apollo/client'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { useTimeframe } from './Application'\r\nimport {\r\n  getPercentChange,\r\n  getBlockFromTimestamp,\r\n  getBlocksFromTimestamps,\r\n  get2DayPercentChange,\r\n  getTimeframe,\r\n} from '../utils'\r\nimport {\r\n  GLOBAL_DATA,\r\n  GLOBAL_TXNS,\r\n  GLOBAL_CHART,\r\n  ETH_PRICE,\r\n  LINK_PRICE,\r\n  YFL_PRICE,\r\n  SYFL_PRICE,\r\n  YFLUSD_PRICE,\r\n  ALL_PAIRS,\r\n  ALL_TOKENS,\r\n  TOP_LPS_PER_PAIRS,\r\n} from '../apollo/queries'\r\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\r\nimport { useAllPairData } from './PairData'\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_TXNS = 'UPDATE_TXNS'\r\nconst UPDATE_CHART = 'UPDATE_CHART'\r\nconst UPDATE_ETH_PRICE = 'UPDATE_ETH_PRICE'\r\nconst UPDATE_LINK_PRICE = 'UPDATE_LINK_PRICE'\r\nconst UPDATE_SYFL_PRICE = 'UPDATE_SYFL_PRICE'\r\nconst UPDATE_YFL_PRICE = 'UPDATE_YFL_PRICE'\r\nconst UPDATE_YFLUSD_PRICE = 'UPDATE_YFLUSD_PRICE'\r\nconst ETH_PRICE_KEY = 'ETH_PRICE_KEY'\r\nconst LINK_PRICE_KEY = 'LINK_PRICE_KEY'\r\nconst YFL_PRICE_KEY = 'YFL_PRICE_KEY'\r\nconst SYFL_PRICE_KEY = 'SYFL_PRICE_KEY'\r\nconst YFLUSD_PRICE_KEY = 'YFLUSD_PRICE_KEY'\r\nconst UPDATE_ALL_PAIRS_IN_VAREN = 'UPDAUPDATE_ALL_PAIRS_IN_VARENTE_TOP_PAIRS'\r\nconst UPDATE_ALL_TOKENS_IN_VAREN = 'UPDATE_ALL_TOKENS_IN_VAREN'\r\nconst UPDATE_TOP_LPS = 'UPDATE_TOP_LPS'\r\n\r\n// format dayjs with the libraries that we need\r\ndayjs.extend(utc)\r\ndayjs.extend(weekOfYear)\r\n\r\nconst GlobalDataContext = createContext()\r\n\r\nfunction useGlobalDataContext() {\r\n  return useContext(GlobalDataContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { data } = payload\r\n      return {\r\n        ...state,\r\n        globalData: data,\r\n      }\r\n    }\r\n    case UPDATE_TXNS: {\r\n      const { transactions } = payload\r\n      return {\r\n        ...state,\r\n        transactions,\r\n      }\r\n    }\r\n    case UPDATE_CHART: {\r\n      const { daily, weekly } = payload\r\n      return {\r\n        ...state,\r\n        chartData: {\r\n          daily,\r\n          weekly,\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_ETH_PRICE: {\r\n      const { ethPrice, ethOneDayPrice, ethPriceChange } = payload\r\n      return {\r\n        ...state,\r\n        [ETH_PRICE_KEY]: ethPrice,\r\n        ethOneDayPrice,\r\n        ethPriceChange,\r\n      }\r\n    }\r\n\r\n    case UPDATE_LINK_PRICE: {\r\n      const { linkPrice, linkOneDayPrice, linkPriceChange } = payload\r\n      return {\r\n        ...state,\r\n        [LINK_PRICE_KEY]: linkPrice,\r\n        linkOneDayPrice,\r\n        linkPriceChange,\r\n      }\r\n    }\r\n\r\n    case UPDATE_YFL_PRICE: {\r\n      const { yflPrice, yflOneDayPrice, yflPriceChange } = payload\r\n      return {\r\n        ...state,\r\n        [YFL_PRICE_KEY]: yflPrice,\r\n        yflOneDayPrice,\r\n        yflPriceChange,\r\n      }\r\n    }\r\n\r\n    case UPDATE_SYFL_PRICE: {\r\n      const { syflPrice, syflOneDayPrice, syflPriceChange } = payload\r\n      return {\r\n        ...state,\r\n        [SYFL_PRICE_KEY]: syflPrice,\r\n        syflOneDayPrice,\r\n        syflPriceChange,\r\n      }\r\n    }\r\n\r\n    case UPDATE_YFLUSD_PRICE: {\r\n      const { yflusdPrice, yflusdOneDayPrice, yflusdPriceChange } = payload\r\n      return {\r\n        ...state,\r\n        [YFLUSD_PRICE_KEY]: yflusdPrice,\r\n        yflusdOneDayPrice,\r\n        yflusdPriceChange,\r\n      }\r\n    }\r\n\r\n    case UPDATE_ALL_PAIRS_IN_VAREN: {\r\n      const { allPairs } = payload\r\n      return {\r\n        ...state,\r\n        allPairs,\r\n      }\r\n    }\r\n\r\n    case UPDATE_ALL_TOKENS_IN_VAREN: {\r\n      const { allTokens } = payload\r\n      return {\r\n        ...state,\r\n        allTokens,\r\n      }\r\n    }\r\n\r\n    case UPDATE_TOP_LPS: {\r\n      const { topLps } = payload\r\n      return {\r\n        ...state,\r\n        topLps,\r\n      }\r\n    }\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {})\r\n  const update = useCallback((data) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTransactions = useCallback((transactions) => {\r\n    dispatch({\r\n      type: UPDATE_TXNS,\r\n      payload: {\r\n        transactions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateChart = useCallback((daily, weekly) => {\r\n    dispatch({\r\n      type: UPDATE_CHART,\r\n      payload: {\r\n        daily,\r\n        weekly,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateEthPrice = useCallback((ethPrice, ethOneDayPrice, ethPriceChange) => {\r\n    dispatch({\r\n      type: UPDATE_ETH_PRICE,\r\n      payload: {\r\n        ethPrice,\r\n        ethOneDayPrice,\r\n        ethPriceChange,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateLinkPrice = useCallback((linkPrice, linkOneDayPrice, linkPriceChange) => {\r\n    dispatch({\r\n      type: UPDATE_LINK_PRICE,\r\n      payload: {\r\n        linkPrice,\r\n        linkOneDayPrice,\r\n        linkPriceChange,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateYflPrice = useCallback((yflPrice, yflOneDayPrice, yflPriceChange) => {\r\n    dispatch({\r\n      type: UPDATE_YFL_PRICE,\r\n      payload: {\r\n        yflPrice,\r\n        yflOneDayPrice,\r\n        yflPriceChange,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateSYflPrice = useCallback((syflPrice, syflOneDayPrice, syflPriceChange) => {\r\n    dispatch({\r\n      type: UPDATE_SYFL_PRICE,\r\n      payload: {\r\n        syflPrice,\r\n        syflOneDayPrice,\r\n        syflPriceChange,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateYflusdPrice = useCallback((yflusdPrice, yflusdOneDayPrice, yflusdPriceChange) => {\r\n    dispatch({\r\n      type: UPDATE_YFLUSD_PRICE,\r\n      payload: {\r\n        yflusdPrice,\r\n        yflusdOneDayPrice,\r\n        yflusdPriceChange,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateAllPairsInDarkHorse = useCallback((allPairs) => {\r\n    dispatch({\r\n      type: UPDATE_ALL_PAIRS_IN_VAREN,\r\n      payload: {\r\n        allPairs,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateAllTokensInDarkHorse = useCallback((allTokens) => {\r\n    dispatch({\r\n      type: UPDATE_ALL_TOKENS_IN_VAREN,\r\n      payload: {\r\n        allTokens,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTopLps = useCallback((topLps) => {\r\n    dispatch({\r\n      type: UPDATE_TOP_LPS,\r\n      payload: {\r\n        topLps,\r\n      },\r\n    })\r\n  }, [])\r\n  return (\r\n    <GlobalDataContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updateTransactions,\r\n            updateChart,\r\n            updateEthPrice,\r\n            updateLinkPrice,\r\n            updateYflPrice,\r\n            updateSYflPrice,\r\n            updateYflusdPrice,\r\n            updateTopLps,\r\n            updateAllPairsInDarkHorse,\r\n            updateAllTokensInDarkHorse,\r\n          },\r\n        ],\r\n        [\r\n          state,\r\n          update,\r\n          updateTransactions,\r\n          updateTopLps,\r\n          updateChart,\r\n          updateEthPrice,\r\n          updateLinkPrice,\r\n          updateYflPrice,\r\n          updateSYflPrice,\r\n          updateYflusdPrice,\r\n          updateAllPairsInDarkHorse,\r\n          updateAllTokensInDarkHorse,\r\n        ]\r\n      )}\r\n    >\r\n      {children}\r\n    </GlobalDataContext.Provider>\r\n  )\r\n}\r\n\r\n/**\r\n * Gets all the global data for the overview page.\r\n * Needs current eth price and the old eth price to get\r\n * 24 hour USD changes.\r\n * @param {*} ethPrice\r\n * @param {*} oldEthPrice\r\n */\r\nasync function getGlobalData(ethPrice, oldEthPrice) {\r\n  // data for each day , historic data used for % changes\r\n  let data = {}\r\n  let oneDayData = {}\r\n  let twoDayData = {}\r\n\r\n  try {\r\n    // get timestamps for the days\r\n    const utcCurrentTime = dayjs()\r\n    const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\r\n    const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\r\n    const utcOneWeekBack = utcCurrentTime.subtract(1, 'week').unix()\r\n    const utcTwoWeeksBack = utcCurrentTime.subtract(2, 'week').unix()\r\n\r\n    // get the blocks needed for time travel queries\r\n    let [oneDayBlock, twoDayBlock, oneWeekBlock, twoWeekBlock] = await getBlocksFromTimestamps([\r\n      utcOneDayBack,\r\n      utcTwoDaysBack,\r\n      utcOneWeekBack,\r\n      utcTwoWeeksBack,\r\n    ])\r\n\r\n    // fetch the global data\r\n    let result = await client.query({\r\n      query: GLOBAL_DATA(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    data = result.data.linkswapFactories[0]\r\n\r\n    // fetch the historical data\r\n    let oneDayResult = await client.query({\r\n      query: GLOBAL_DATA(oneDayBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    oneDayData = oneDayResult.data.linkswapFactories[0]\r\n\r\n    let twoDayResult = await client.query({\r\n      query: GLOBAL_DATA(twoDayBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    twoDayData = twoDayResult.data.linkswapFactories[0]\r\n\r\n    let oneWeekResult = await client.query({\r\n      query: GLOBAL_DATA(oneWeekBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const oneWeekData = oneWeekResult.data.linkswapFactories[0]\r\n\r\n    let twoWeekResult = await client.query({\r\n      query: GLOBAL_DATA(twoWeekBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const twoWeekData = twoWeekResult.data.linkswapFactories[0]\r\n\r\n    if (data && oneDayData && twoDayData && twoWeekData) {\r\n      let [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n        data.totalVolumeUSD,\r\n        oneDayData.totalVolumeUSD ? oneDayData.totalVolumeUSD : 0,\r\n        twoDayData.totalVolumeUSD ? twoDayData.totalVolumeUSD : 0\r\n      )\r\n\r\n      const [oneWeekVolume, weeklyVolumeChange] = get2DayPercentChange(\r\n        data.totalVolumeUSD,\r\n        oneWeekData.totalVolumeUSD,\r\n        twoWeekData.totalVolumeUSD\r\n      )\r\n\r\n      const [oneDayTxns, txnChange] = get2DayPercentChange(\r\n        data.txCount,\r\n        oneDayData.txCount ? oneDayData.txCount : 0,\r\n        twoDayData.txCount ? twoDayData.txCount : 0\r\n      )\r\n\r\n      // format the total liquidity in USD\r\n      data.totalLiquidityUSD = data.totalLiquidityETH * ethPrice\r\n      const liquidityChangeUSD = getPercentChange(\r\n        data.totalLiquidityETH * ethPrice,\r\n        oneDayData.totalLiquidityETH * oldEthPrice\r\n      )\r\n\r\n      // add relevant fields with the calculated amounts\r\n      data.oneDayVolumeUSD = oneDayVolumeUSD\r\n      data.oneWeekVolume = oneWeekVolume\r\n      data.weeklyVolumeChange = weeklyVolumeChange\r\n      data.volumeChangeUSD = volumeChangeUSD\r\n      data.liquidityChangeUSD = liquidityChangeUSD\r\n      data.oneDayTxns = oneDayTxns\r\n      data.txnChange = txnChange\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return data\r\n}\r\n\r\n/**\r\n * Get historical data for volume and liquidity used in global charts\r\n * on main page\r\n * @param {*} oldestDateToFetch // start of window to fetch from\r\n */\r\nconst getChartData = async (oldestDateToFetch) => {\r\n  let data = []\r\n  let weeklyData = []\r\n  const utcEndTime = dayjs.utc()\r\n  let skip = 0\r\n  let allFound = false\r\n\r\n  try {\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: GLOBAL_CHART,\r\n        variables: {\r\n          startTime: oldestDateToFetch,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      skip += 1000\r\n      data = data.concat(result.data.linkswapDayDatas)\r\n      if (result.data.linkswapDayDatas.length < 1000) {\r\n        allFound = true\r\n      }\r\n    }\r\n\r\n    if (data) {\r\n      let dayIndexSet = new Set()\r\n      let dayIndexArray = []\r\n      const oneDay = 24 * 60 * 60\r\n\r\n      // for each day, parse the daily volume and format for chart array\r\n      data.forEach((dayData, i) => {\r\n        // add the day index to the set of days\r\n        dayIndexSet.add((data[i].date / oneDay).toFixed(0))\r\n        dayIndexArray.push(data[i])\r\n        dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\r\n      })\r\n\r\n      // fill in empty days ( there will be no day datas if no trades made that day )\r\n      let timestamp = data[0].date ? data[0].date : oldestDateToFetch\r\n      let latestLiquidityUSD = data[0].totalLiquidityUSD\r\n      let latestDayDats = data[0].mostLiquidTokens\r\n      let index = 1\r\n      while (timestamp < utcEndTime.unix() - oneDay) {\r\n        const nextDay = timestamp + oneDay\r\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\r\n        if (!dayIndexSet.has(currentDayIndex)) {\r\n          data.push({\r\n            date: nextDay,\r\n            dailyVolumeUSD: 0,\r\n            totalLiquidityUSD: latestLiquidityUSD,\r\n            mostLiquidTokens: latestDayDats,\r\n          })\r\n        } else {\r\n          latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\r\n          latestDayDats = dayIndexArray[index].mostLiquidTokens\r\n          index = index + 1\r\n        }\r\n        timestamp = nextDay\r\n      }\r\n    }\r\n\r\n    // format weekly data for weekly sized chunks\r\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\r\n    let startIndexWeekly = -1\r\n    let currentWeek = -1\r\n    data.forEach((entry, i) => {\r\n      const week = dayjs.utc(dayjs.unix(data[i].date)).week()\r\n      if (week !== currentWeek) {\r\n        currentWeek = week\r\n        startIndexWeekly++\r\n      }\r\n      weeklyData[startIndexWeekly] = weeklyData[startIndexWeekly] || {}\r\n      weeklyData[startIndexWeekly].date = data[i].date\r\n      weeklyData[startIndexWeekly].weeklyVolumeUSD =\r\n        (weeklyData[startIndexWeekly].weeklyVolumeUSD ?? 0) + data[i].dailyVolumeUSD\r\n    })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return [data, weeklyData]\r\n}\r\n\r\n/**\r\n * Get and format transactions for global page\r\n */\r\nconst getGlobalTransactions = async () => {\r\n  let transactions = {}\r\n\r\n  try {\r\n    let result = await client.query({\r\n      query: GLOBAL_TXNS,\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    transactions.mints = []\r\n    transactions.burns = []\r\n    transactions.swaps = []\r\n    result?.data?.transactions &&\r\n      result.data.transactions.map((transaction) => {\r\n        if (transaction.mints.length > 0) {\r\n          transaction.mints.map((mint) => {\r\n            return transactions.mints.push(mint)\r\n          })\r\n        }\r\n        if (transaction.burns.length > 0) {\r\n          transaction.burns.map((burn) => {\r\n            return transactions.burns.push(burn)\r\n          })\r\n        }\r\n        if (transaction.swaps.length > 0) {\r\n          transaction.swaps.map((swap) => {\r\n            return transactions.swaps.push(swap)\r\n          })\r\n        }\r\n        return true\r\n      })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return transactions\r\n}\r\n\r\n/**\r\n * Gets the current price  of ETH, 24 hour price, and % change between them\r\n */\r\nconst getEthPrice = async () => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n\r\n  let ethPrice = 0\r\n  let ethPriceOneDay = 0\r\n  let priceChangeETH = 0\r\n\r\n  try {\r\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n    let result = await client.query({\r\n      query: ETH_PRICE(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    let resultOneDay = await client.query({\r\n      query: ETH_PRICE(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const currentPrice = result?.data?.bundles[0]?.ethPrice\r\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.ethPrice\r\n    priceChangeETH = getPercentChange(currentPrice, oneDayBackPrice)\r\n    ethPrice = currentPrice\r\n    ethPriceOneDay = oneDayBackPrice\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return [ethPrice, ethPriceOneDay, priceChangeETH]\r\n}\r\n\r\n/**\r\n * Gets the current price  of LINK, 24 hour price, and % change between them\r\n */\r\nconst getLinkPrice = async () => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n\r\n  let linkPrice = 0\r\n  let linkPriceOneDay = 0\r\n  let priceChangeLINK = 0\r\n\r\n  try {\r\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n    let result = await client.query({\r\n      query: LINK_PRICE(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    let resultOneDay = await client.query({\r\n      query: LINK_PRICE(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const currentPrice = result?.data?.bundles[0]?.linkPrice\r\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.linkPrice\r\n    priceChangeLINK = getPercentChange(currentPrice, oneDayBackPrice)\r\n    linkPrice = currentPrice\r\n    linkPriceOneDay = oneDayBackPrice\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return [linkPrice, linkPriceOneDay, priceChangeLINK]\r\n}\r\n\r\n/**\r\n * Gets the current price  of YFL, 24 hour price, and % change between them\r\n */\r\nconst getYflPrice = async () => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n\r\n  let yflPrice = 0\r\n  let yflPriceOneDay = 0\r\n  let priceChangeYFL = 0\r\n\r\n  try {\r\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n    let result = await client.query({\r\n      query: YFL_PRICE(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    let resultOneDay = await client.query({\r\n      query: YFL_PRICE(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const currentPrice = result?.data?.bundles[0]?.yflPrice\r\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.yflPrice\r\n    priceChangeYFL = getPercentChange(currentPrice, oneDayBackPrice)\r\n    yflPrice = currentPrice\r\n    yflPriceOneDay = oneDayBackPrice\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return [yflPrice, yflPriceOneDay, priceChangeYFL]\r\n}\r\n\r\n/**\r\n * Gets the current price  of sYFL, 24 hour price, and % change between them\r\n */\r\nconst getSYflPrice = async () => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n\r\n  let syflPrice = 0\r\n  let syflPriceOneDay = 0\r\n  let priceChangeSYFL = 0\r\n\r\n  try {\r\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n    let result = await client.query({\r\n      query: SYFL_PRICE(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    let resultOneDay = await client.query({\r\n      query: SYFL_PRICE(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const currentPrice = result?.data?.bundles[0]?.syflPrice\r\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.syflPrice\r\n    priceChangeSYFL = getPercentChange(currentPrice, oneDayBackPrice)\r\n    syflPrice = currentPrice\r\n    syflPriceOneDay = oneDayBackPrice\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return [syflPrice, syflPriceOneDay, priceChangeSYFL]\r\n}\r\n\r\n/**\r\n * Gets the current price  of YFLUSD, 24 hour price, and % change between them\r\n */\r\nconst getYflusdPrice = async () => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n\r\n  let yflusdPrice = 0\r\n  let yflusdPriceOneDay = 0\r\n  let priceChangeYFLUSD = 0\r\n\r\n  try {\r\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n    let result = await client.query({\r\n      query: YFLUSD_PRICE(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    let resultOneDay = await client.query({\r\n      query: YFLUSD_PRICE(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const currentPrice = result?.data?.bundles[0]?.yflusdPrice\r\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.yflusdPrice\r\n    priceChangeYFLUSD = getPercentChange(currentPrice, oneDayBackPrice)\r\n    yflusdPrice = currentPrice\r\n    yflusdPriceOneDay = oneDayBackPrice\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return [yflusdPrice, yflusdPriceOneDay, priceChangeYFLUSD]\r\n}\r\n\r\nconst PAIRS_TO_FETCH = 500\r\nconst TOKENS_TO_FETCH = 500\r\n\r\n/**\r\n * Loop through every pair on varen, used for search\r\n */\r\nasync function getAllPairsOnDarkHorse() {\r\n  try {\r\n    let allFound = false\r\n    let pairs = []\r\n    let skipCount = 0\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: ALL_PAIRS,\r\n        variables: {\r\n          skip: skipCount,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      skipCount = skipCount + PAIRS_TO_FETCH\r\n      pairs = pairs.concat(result?.data?.pairs)\r\n      if (result?.data?.pairs.length < PAIRS_TO_FETCH || pairs.length > PAIRS_TO_FETCH) {\r\n        allFound = true\r\n      }\r\n    }\r\n    return pairs\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n/**\r\n * Loop through every token on varen, used for search\r\n */\r\nasync function getAllTokensOnDarkHorse() {\r\n  try {\r\n    let allFound = false\r\n    let skipCount = 0\r\n    let tokens = []\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: ALL_TOKENS,\r\n        variables: {\r\n          skip: skipCount,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      tokens = tokens.concat(result?.data?.tokens)\r\n      if (result?.data?.tokens?.length < TOKENS_TO_FETCH || tokens.length > TOKENS_TO_FETCH) {\r\n        allFound = true\r\n      }\r\n      skipCount = skipCount += TOKENS_TO_FETCH\r\n    }\r\n    return tokens\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n/**\r\n * Hook that fetches overview data, plus all tokens and pairs for search\r\n */\r\nexport function useGlobalData() {\r\n  const [state, { update, updateAllPairsInDarkHorse, updateAllTokensInDarkHorse }] = useGlobalDataContext()\r\n  const [ethPrice, oldEthPrice] = useEthPrice()\r\n\r\n  const data = state?.globalData\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let globalData = await getGlobalData(ethPrice, oldEthPrice)\r\n      globalData && update(globalData)\r\n\r\n      let allPairs = await getAllPairsOnDarkHorse()\r\n      updateAllPairsInDarkHorse(allPairs)\r\n\r\n      let allTokens = await getAllTokensOnDarkHorse()\r\n      updateAllTokensInDarkHorse(allTokens)\r\n    }\r\n    if (!data && ethPrice && oldEthPrice) {\r\n      fetchData()\r\n    }\r\n  }, [ethPrice, oldEthPrice, update, data, updateAllPairsInDarkHorse, updateAllTokensInDarkHorse])\r\n\r\n  return data || {}\r\n}\r\n\r\nexport function useGlobalChartData() {\r\n  const [state, { updateChart }] = useGlobalDataContext()\r\n  const [oldestDateFetch, setOldestDateFetched] = useState()\r\n  const [activeWindow] = useTimeframe()\r\n\r\n  const chartDataDaily = state?.chartData?.daily\r\n  const chartDataWeekly = state?.chartData?.weekly\r\n\r\n  /**\r\n   * Keep track of oldest date fetched. Used to\r\n   * limit data fetched until its actually needed.\r\n   * (dont fetch year long stuff unless year option selected)\r\n   */\r\n  useEffect(() => {\r\n    // based on window, get starttime\r\n    let startTime = getTimeframe(activeWindow)\r\n\r\n    if ((activeWindow && startTime < oldestDateFetch) || !oldestDateFetch) {\r\n      setOldestDateFetched(startTime)\r\n    }\r\n  }, [activeWindow, oldestDateFetch])\r\n\r\n  /**\r\n   * Fetch data if none fetched or older data is needed\r\n   */\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // historical stuff for chart\r\n      let [newChartData, newWeeklyData] = await getChartData(oldestDateFetch)\r\n      updateChart(newChartData, newWeeklyData)\r\n    }\r\n    if (oldestDateFetch && !(chartDataDaily && chartDataWeekly)) {\r\n      fetchData()\r\n    }\r\n  }, [chartDataDaily, chartDataWeekly, oldestDateFetch, updateChart])\r\n\r\n  return [chartDataDaily, chartDataWeekly]\r\n}\r\n\r\nexport function useGlobalTransactions() {\r\n  const [state, { updateTransactions }] = useGlobalDataContext()\r\n  const transactions = state?.transactions\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!transactions) {\r\n        let txns = await getGlobalTransactions()\r\n        updateTransactions(txns)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [updateTransactions, transactions])\r\n  return transactions\r\n}\r\n\r\nexport function useEthPrice() {\r\n  const [state, { updateEthPrice }] = useGlobalDataContext()\r\n  const ethPrice = state?.[ETH_PRICE_KEY]\r\n  const ethPriceOld = state?.['ethOneDayPrice']\r\n  useEffect(() => {\r\n    async function checkForEthPrice() {\r\n      if (!ethPrice) {\r\n        let [newPrice, oneDayPrice, priceChange] = await getEthPrice()\r\n        updateEthPrice(newPrice, oneDayPrice, priceChange)\r\n      }\r\n    }\r\n    checkForEthPrice()\r\n  }, [ethPrice, updateEthPrice])\r\n\r\n  return [ethPrice, ethPriceOld]\r\n}\r\n\r\nexport function useLinkPrice() {\r\n  const [state, { updateLinkPrice }] = useGlobalDataContext()\r\n  const linkPrice = state?.[LINK_PRICE_KEY]\r\n  const linkPriceOld = state?.['linkOneDayPrice']\r\n  useEffect(() => {\r\n    async function checkForLinkPrice() {\r\n      if (!linkPrice) {\r\n        let [newPrice, oneDayPrice, priceChange] = await getLinkPrice()\r\n        updateLinkPrice(newPrice, oneDayPrice, priceChange)\r\n      }\r\n    }\r\n    checkForLinkPrice()\r\n  }, [linkPrice, updateLinkPrice])\r\n\r\n  return [linkPrice, linkPriceOld]\r\n}\r\n\r\nexport function useYflPrice() {\r\n  const [state, { updateYflPrice }] = useGlobalDataContext()\r\n  const yflPrice = state?.[YFL_PRICE_KEY]\r\n  const yflPriceOld = state?.['yflOneDayPrice']\r\n  useEffect(() => {\r\n    async function checkForYflPrice() {\r\n      if (!yflPrice) {\r\n        let [newPrice, oneDayPrice, priceChange] = await getYflPrice()\r\n        updateYflPrice(newPrice, oneDayPrice, priceChange)\r\n      }\r\n    }\r\n    checkForYflPrice()\r\n  }, [yflPrice, updateYflPrice])\r\n\r\n  return [yflPrice, yflPriceOld]\r\n}\r\n\r\nexport function useSYflPrice() {\r\n  const [state, { updateSYflPrice }] = useGlobalDataContext()\r\n  const syflPrice = state?.[SYFL_PRICE_KEY]\r\n  const syflPriceOld = state?.['syflOneDayPrice']\r\n  useEffect(() => {\r\n    async function checkForSYflPrice() {\r\n      if (!syflPrice) {\r\n        let [newPrice, oneDayPrice, priceChange] = await getSYflPrice()\r\n        updateSYflPrice(newPrice, oneDayPrice, priceChange)\r\n      }\r\n    }\r\n    checkForSYflPrice()\r\n  }, [syflPrice, updateSYflPrice])\r\n\r\n  return [syflPrice, syflPriceOld]\r\n}\r\n\r\nexport function useYflusdPrice() {\r\n  const [state, { updateYflusdPrice }] = useGlobalDataContext()\r\n  const yflusdPrice = state?.[YFLUSD_PRICE_KEY]\r\n  const yflusdPriceOld = state?.['yflusdOneDayPrice']\r\n  useEffect(() => {\r\n    async function checkForYflusdPrice() {\r\n      if (!yflusdPrice) {\r\n        let [newPrice, oneDayPrice, priceChange] = await getYflusdPrice()\r\n        updateYflusdPrice(newPrice, oneDayPrice, priceChange)\r\n      }\r\n    }\r\n    checkForYflusdPrice()\r\n  }, [yflusdPrice, updateYflusdPrice])\r\n\r\n  return [yflusdPrice, yflusdPriceOld]\r\n}\r\n\r\nexport function useAllPairsInDarkHorse() {\r\n  const [state] = useGlobalDataContext()\r\n  let allPairs = state?.allPairs\r\n\r\n  return allPairs || []\r\n}\r\n\r\nexport function useAllTokensInDarkHorse() {\r\n  const [state] = useGlobalDataContext()\r\n  let allTokens = state?.allTokens\r\n\r\n  return allTokens || []\r\n}\r\n\r\n/**\r\n * Get the top liquidity positions based on USD size\r\n * @TODO Not a perfect lookup needs improvement\r\n */\r\nexport function useTopLps() {\r\n  const [state, { updateTopLps }] = useGlobalDataContext()\r\n  let topLps = state?.topLps\r\n\r\n  const allPairs = useAllPairData()\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // get top 20 by reserves\r\n      let topPairs = Object.keys(allPairs)\r\n        ?.sort((a, b) => parseFloat(allPairs[a].reserveUSD > allPairs[b].reserveUSD ? -1 : 1))\r\n        ?.slice(0, 99)\r\n        .map((pair) => pair)\r\n\r\n      let topLpLists = await Promise.all(\r\n        topPairs.map(async (pair) => {\r\n          // for each one, fetch top LPs\r\n          try {\r\n            const { data: results } = await client.query({\r\n              query: TOP_LPS_PER_PAIRS,\r\n              variables: {\r\n                pair: pair.toString(),\r\n              },\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            if (results) {\r\n              return results.liquidityPositions\r\n            }\r\n          } catch (e) { }\r\n        })\r\n      )\r\n\r\n      // get the top lps from the results formatted\r\n      const topLps = []\r\n      topLpLists\r\n        .filter((i) => !!i) // check for ones not fetched correctly\r\n        .map((list) => {\r\n          return list.map((entry) => {\r\n            const pairData = allPairs[entry.pair.id]\r\n            return topLps.push({\r\n              user: entry.user,\r\n              pairName: pairData.token0.symbol + '-' + pairData.token1.symbol,\r\n              pairAddress: entry.pair.id,\r\n              token0: pairData.token0.id,\r\n              token1: pairData.token1.id,\r\n              usd:\r\n                (parseFloat(entry.liquidityTokenBalance) / parseFloat(pairData.totalSupply)) *\r\n                parseFloat(pairData.reserveUSD),\r\n            })\r\n          })\r\n        })\r\n\r\n      const sorted = topLps.sort((a, b) => (a.usd > b.usd ? -1 : 1))\r\n      const shorter = sorted.splice(0, 100)\r\n      updateTopLps(shorter)\r\n    }\r\n\r\n    if (!topLps && allPairs && Object.keys(allPairs).length > 0) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return topLps\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\r\n\r\nimport { client } from '../apollo/client'\r\nimport {\r\n  TOKEN_DATA,\r\n  FILTERED_TRANSACTIONS,\r\n  TOKEN_CHART,\r\n  TOKENS_CURRENT,\r\n  TOKENS_DYNAMIC,\r\n  PRICES_BY_BLOCK,\r\n  PAIR_DATA,\r\n} from '../apollo/queries'\r\n\r\nimport { useEthPrice } from './GlobalData'\r\n\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport {\r\n  get2DayPercentChange,\r\n  getPercentChange,\r\n  getBlockFromTimestamp,\r\n  isAddress,\r\n  getBlocksFromTimestamps,\r\n  splitQuery,\r\n} from '../utils'\r\nimport { timeframeOptions } from '../constants'\r\nimport { useLatestBlocks } from './Application'\r\nimport { updateNameData } from '../utils/data'\r\n\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_TOKEN_TXNS = 'UPDATE_TOKEN_TXNS'\r\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\r\nconst UPDATE_PRICE_DATA = 'UPDATE_PRICE_DATA'\r\nconst UPDATE_TOP_TOKENS = ' UPDATE_TOP_TOKENS'\r\nconst UPDATE_ALL_PAIRS = 'UPDATE_ALL_PAIRS'\r\n\r\nconst TOKEN_PAIRS_KEY = 'TOKEN_PAIRS_KEY'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst TokenDataContext = createContext()\r\n\r\nfunction useTokenDataContext() {\r\n  return useContext(TokenDataContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { tokenAddress, data } = payload\r\n      return {\r\n        ...state,\r\n        [tokenAddress]: {\r\n          ...state?.[tokenAddress],\r\n          ...data,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_TOP_TOKENS: {\r\n      const { topTokens } = payload\r\n      let added = {}\r\n      topTokens &&\r\n        topTokens.map((token) => {\r\n          return (added[token.id] = token)\r\n        })\r\n      return {\r\n        ...state,\r\n        ...added,\r\n      }\r\n    }\r\n\r\n    case UPDATE_TOKEN_TXNS: {\r\n      const { address, transactions } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          txns: transactions,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_CHART_DATA: {\r\n      const { address, chartData } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          chartData,\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_PRICE_DATA: {\r\n      const { address, data, timeWindow, interval } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          [timeWindow]: {\r\n            ...state?.[address]?.[timeWindow],\r\n            [interval]: data,\r\n          },\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_ALL_PAIRS: {\r\n      const { address, allPairs } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          [TOKEN_PAIRS_KEY]: allPairs,\r\n        },\r\n      }\r\n    }\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {})\r\n  const update = useCallback((tokenAddress, data) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        tokenAddress,\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTopTokens = useCallback((topTokens) => {\r\n    dispatch({\r\n      type: UPDATE_TOP_TOKENS,\r\n      payload: {\r\n        topTokens,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTokenTxns = useCallback((address, transactions) => {\r\n    dispatch({\r\n      type: UPDATE_TOKEN_TXNS,\r\n      payload: { address, transactions },\r\n    })\r\n  }, [])\r\n\r\n  const updateChartData = useCallback((address, chartData) => {\r\n    dispatch({\r\n      type: UPDATE_CHART_DATA,\r\n      payload: { address, chartData },\r\n    })\r\n  }, [])\r\n\r\n  const updateAllPairs = useCallback((address, allPairs) => {\r\n    dispatch({\r\n      type: UPDATE_ALL_PAIRS,\r\n      payload: { address, allPairs },\r\n    })\r\n  }, [])\r\n\r\n  const updatePriceData = useCallback((address, data, timeWindow, interval) => {\r\n    dispatch({\r\n      type: UPDATE_PRICE_DATA,\r\n      payload: { address, data, timeWindow, interval },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <TokenDataContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updateTokenTxns,\r\n            updateChartData,\r\n            updateTopTokens,\r\n            updateAllPairs,\r\n            updatePriceData,\r\n          },\r\n        ],\r\n        [state, update, updateTokenTxns, updateChartData, updateTopTokens, updateAllPairs, updatePriceData]\r\n      )}\r\n    >\r\n      {children}\r\n    </TokenDataContext.Provider>\r\n  )\r\n}\r\n\r\nconst getTopTokens = async (ethPrice, ethPriceOld) => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\r\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\r\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\r\n\r\n  try {\r\n    let current = await client.query({\r\n      query: TOKENS_CURRENT,\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let oneDayResult = await client.query({\r\n      query: TOKENS_DYNAMIC(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let twoDayResult = await client.query({\r\n      query: TOKENS_DYNAMIC(twoDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let oneDayData = oneDayResult?.data?.tokens.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let twoDayData = twoDayResult?.data?.tokens.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let bulkResults = await Promise.all(\r\n      current &&\r\n        oneDayData &&\r\n        twoDayData &&\r\n        current?.data?.tokens.map(async (token) => {\r\n          let data = token\r\n\r\n          // let liquidityDataThisToken = liquidityData?.[token.id]\r\n          let oneDayHistory = oneDayData?.[token.id]\r\n          let twoDayHistory = twoDayData?.[token.id]\r\n\r\n          // catch the case where token wasnt in top list in previous days\r\n          if (!oneDayHistory) {\r\n            let oneDayResult = await client.query({\r\n              query: TOKEN_DATA(token.id, oneDayBlock),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            oneDayHistory = oneDayResult.data.tokens[0]\r\n          }\r\n          if (!twoDayHistory) {\r\n            let twoDayResult = await client.query({\r\n              query: TOKEN_DATA(token.id, twoDayBlock),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            twoDayHistory = twoDayResult.data.tokens[0]\r\n          }\r\n\r\n          // calculate percentage changes and daily changes\r\n          const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n            data.tradeVolumeUSD,\r\n            oneDayHistory?.tradeVolumeUSD ?? 0,\r\n            twoDayHistory?.tradeVolumeUSD ?? 0\r\n          )\r\n          const [oneDayTxns, txnChange] = get2DayPercentChange(\r\n            data.txCount,\r\n            oneDayHistory?.txCount ?? 0,\r\n            twoDayHistory?.txCount ?? 0\r\n          )\r\n\r\n          const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\r\n          const oldLiquidityUSD = oneDayHistory?.totalLiquidity * ethPriceOld * oneDayHistory?.derivedETH\r\n\r\n          // percent changes\r\n          const priceChangeUSD = getPercentChange(\r\n            data?.derivedETH * ethPrice,\r\n            oneDayHistory?.derivedETH ? oneDayHistory?.derivedETH * ethPriceOld : 0\r\n          )\r\n\r\n          // set data\r\n          data.priceUSD = data?.derivedETH * ethPrice\r\n          data.totalLiquidityUSD = currentLiquidityUSD\r\n          data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\r\n          data.volumeChangeUSD = volumeChangeUSD\r\n          data.priceChangeUSD = priceChangeUSD\r\n          data.liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\r\n          data.oneDayTxns = oneDayTxns\r\n          data.txnChange = txnChange\r\n\r\n          // new tokens\r\n          if (!oneDayHistory && data) {\r\n            data.oneDayVolumeUSD = data.tradeVolumeUSD\r\n            data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\r\n            data.oneDayTxns = data.txCount\r\n          }\r\n\r\n          // update name data for\r\n          updateNameData({\r\n            token0: data,\r\n          })\r\n\r\n          return data\r\n        })\r\n    )\r\n\r\n    return bulkResults\r\n\r\n    // calculate percentage changes and daily changes\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getTokenData = async (address, ethPrice, ethPriceOld) => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\r\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\r\n\r\n  // initialize data arrays\r\n  let data = {}\r\n  let oneDayData = {}\r\n  let twoDayData = {}\r\n\r\n  try {\r\n    // fetch all current and historical data\r\n    let result = await client.query({\r\n      query: TOKEN_DATA(address),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    data = result?.data?.tokens?.[0]\r\n\r\n    // get results from 24 hours in past\r\n    let oneDayResult = await client.query({\r\n      query: TOKEN_DATA(address, oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    oneDayData = oneDayResult.data.tokens[0]\r\n\r\n    // get results from 48 hours in past\r\n    let twoDayResult = await client.query({\r\n      query: TOKEN_DATA(address, twoDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    twoDayData = twoDayResult.data.tokens[0]\r\n\r\n    // catch the case where token wasnt in top list in previous days\r\n    if (!oneDayData) {\r\n      let oneDayResult = await client.query({\r\n        query: TOKEN_DATA(address, oneDayBlock),\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      oneDayData = oneDayResult.data.tokens[0]\r\n    }\r\n    if (!twoDayData) {\r\n      let twoDayResult = await client.query({\r\n        query: TOKEN_DATA(address, twoDayBlock),\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      twoDayData = twoDayResult.data.tokens[0]\r\n    }\r\n\r\n    // calculate percentage changes and daily changes\r\n    const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n      data.tradeVolumeUSD,\r\n      oneDayData?.tradeVolumeUSD ?? 0,\r\n      twoDayData?.tradeVolumeUSD ?? 0\r\n    )\r\n\r\n    // calculate percentage changes and daily changes\r\n    const [oneDayVolumeUT, volumeChangeUT] = get2DayPercentChange(\r\n      data.untrackedVolumeUSD,\r\n      oneDayData?.untrackedVolumeUSD ?? 0,\r\n      twoDayData?.untrackedVolumeUSD ?? 0\r\n    )\r\n\r\n    // calculate percentage changes and daily changes\r\n    const [oneDayTxns, txnChange] = get2DayPercentChange(\r\n      data.txCount,\r\n      oneDayData?.txCount ?? 0,\r\n      twoDayData?.txCount ?? 0\r\n    )\r\n\r\n    const priceChangeUSD = getPercentChange(\r\n      data?.derivedETH * ethPrice,\r\n      parseFloat(oneDayData?.derivedETH ?? 0) * ethPriceOld\r\n    )\r\n\r\n    const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\r\n    const oldLiquidityUSD = oneDayData?.totalLiquidity * ethPriceOld * oneDayData?.derivedETH\r\n\r\n    // set data\r\n    data.priceUSD = data?.derivedETH * ethPrice\r\n    data.totalLiquidityUSD = currentLiquidityUSD\r\n    data.oneDayVolumeUSD = oneDayVolumeUSD\r\n    data.volumeChangeUSD = volumeChangeUSD\r\n    data.priceChangeUSD = priceChangeUSD\r\n    data.oneDayVolumeUT = oneDayVolumeUT\r\n    data.volumeChangeUT = volumeChangeUT\r\n    const liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\r\n    data.liquidityChangeUSD = liquidityChangeUSD\r\n    data.oneDayTxns = oneDayTxns\r\n    data.txnChange = txnChange\r\n\r\n    // new tokens\r\n    if (!oneDayData && data) {\r\n      data.oneDayVolumeUSD = data.tradeVolumeUSD\r\n      data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\r\n      data.oneDayTxns = data.txCount\r\n    }\r\n\r\n    // update name data for\r\n    updateNameData({\r\n      token0: data,\r\n    })\r\n\r\n    // HOTFIX for Aave\r\n    if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\r\n      const aaveData = await client.query({\r\n        query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      const result = aaveData.data.pairs[0]\r\n      data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\r\n      data.liquidityChangeUSD = 0\r\n      data.priceChangeUSD = 0\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return data\r\n}\r\n\r\nconst getTokenTransactions = async (allPairsFormatted) => {\r\n  const transactions = {}\r\n  try {\r\n    let result = await client.query({\r\n      query: FILTERED_TRANSACTIONS,\r\n      variables: {\r\n        allPairs: allPairsFormatted,\r\n      },\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    transactions.mints = result.data.mints\r\n    transactions.burns = result.data.burns\r\n    transactions.swaps = result.data.swaps\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return transactions\r\n}\r\n\r\nconst getTokenPairs = async (tokenAddress) => {\r\n  try {\r\n    // fetch all current and historical data\r\n    let result = await client.query({\r\n      query: TOKEN_DATA(tokenAddress),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    return result.data?.['pairs0'].concat(result.data?.['pairs1'])\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getIntervalTokenData = async (tokenAddress, startTime, interval = 3600, latestBlock) => {\r\n  const utcEndTime = dayjs.utc()\r\n  let time = startTime\r\n\r\n  // create an array of hour start times until we reach current hour\r\n  // buffer by half hour to catch case where graph isnt synced to latest block\r\n  const timestamps = []\r\n  while (time < utcEndTime.unix()) {\r\n    timestamps.push(time)\r\n    time += interval\r\n  }\r\n\r\n  // backout if invalid timestamp format\r\n  if (timestamps.length === 0) {\r\n    return []\r\n  }\r\n\r\n  // once you have all the timestamps, get the blocks for each timestamp in a bulk query\r\n  let blocks\r\n  try {\r\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\r\n\r\n    // catch failing case\r\n    if (!blocks || blocks.length === 0) {\r\n      return []\r\n    }\r\n\r\n    if (latestBlock) {\r\n      blocks = blocks.filter((b) => {\r\n        return parseFloat(b.number) <= parseFloat(latestBlock)\r\n      })\r\n    }\r\n\r\n    let result = await splitQuery(PRICES_BY_BLOCK, client, [tokenAddress], blocks, 50)\r\n\r\n    // format token ETH price results\r\n    let values = []\r\n    for (var row in result) {\r\n      let timestamp = row.split('t')[1]\r\n      let derivedETH = parseFloat(result[row]?.derivedETH)\r\n      if (timestamp) {\r\n        values.push({\r\n          timestamp,\r\n          derivedETH,\r\n        })\r\n      }\r\n    }\r\n\r\n    // go through eth usd prices and assign to original values array\r\n    let index = 0\r\n    for (var brow in result) {\r\n      let timestamp = brow.split('b')[1]\r\n      if (timestamp) {\r\n        values[index].priceUSD = parseFloat(result[brow]?.ethPrice) * values[index].derivedETH\r\n        index += 1\r\n      }\r\n    }\r\n\r\n    let formattedHistory = []\r\n\r\n    // for each hour, construct the open and close price\r\n    for (let i = 0; i < values.length - 1; i++) {\r\n      formattedHistory.push({\r\n        timestamp: values[i].timestamp,\r\n        open: parseFloat(values[i].priceUSD),\r\n        close: parseFloat(values[i + 1].priceUSD),\r\n      })\r\n    }\r\n\r\n    return formattedHistory\r\n  } catch (e) {\r\n    console.log(e)\r\n    console.log('error fetching blocks')\r\n    return []\r\n  }\r\n}\r\n\r\nconst getTokenChartData = async (tokenAddress) => {\r\n  let data = []\r\n  const utcEndTime = dayjs.utc()\r\n  let utcStartTime = utcEndTime.subtract(1, 'year')\r\n  let startTime = utcStartTime.startOf('minute').unix() - 1\r\n\r\n  try {\r\n    let allFound = false\r\n    let skip = 0\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: TOKEN_CHART,\r\n        variables: {\r\n          tokenAddr: tokenAddress,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      if (result.data.tokenDayDatas.length < 1000) {\r\n        allFound = true\r\n      }\r\n      skip += 1000\r\n      data = data.concat(result.data.tokenDayDatas)\r\n    }\r\n\r\n    let dayIndexSet = new Set()\r\n    let dayIndexArray = []\r\n    const oneDay = 24 * 60 * 60\r\n    data.forEach((dayData, i) => {\r\n      // add the day index to the set of days\r\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\r\n      dayIndexArray.push(data[i])\r\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\r\n    })\r\n\r\n    // fill in empty days\r\n    let timestamp = data[0] && data[0].date ? data[0].date : startTime\r\n    let latestLiquidityUSD = data[0] && data[0].totalLiquidityUSD\r\n    let latestPriceUSD = data[0] && data[0].priceUSD\r\n    let index = 1\r\n    while (timestamp < utcEndTime.startOf('minute').unix() - oneDay) {\r\n      const nextDay = timestamp + oneDay\r\n      let currentDayIndex = (nextDay / oneDay).toFixed(0)\r\n      if (!dayIndexSet.has(currentDayIndex)) {\r\n        data.push({\r\n          date: nextDay,\r\n          dayString: nextDay,\r\n          dailyVolumeUSD: 0,\r\n          priceUSD: latestPriceUSD,\r\n          totalLiquidityUSD: latestLiquidityUSD,\r\n        })\r\n      } else {\r\n        latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\r\n        latestPriceUSD = dayIndexArray[index].priceUSD\r\n        index = index + 1\r\n      }\r\n      timestamp = nextDay\r\n    }\r\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return data\r\n}\r\n\r\nexport function Updater() {\r\n  const [, { updateTopTokens }] = useTokenDataContext()\r\n  const [ethPrice, ethPriceOld] = useEthPrice()\r\n  useEffect(() => {\r\n    async function getData() {\r\n      // get top pairs for overview list\r\n      let topTokens = await getTopTokens(ethPrice, ethPriceOld)\r\n      topTokens && updateTopTokens(topTokens)\r\n    }\r\n    ethPrice && ethPriceOld && getData()\r\n  }, [ethPrice, ethPriceOld, updateTopTokens])\r\n  return null\r\n}\r\n\r\nexport function useTokenData(tokenAddress) {\r\n  const [state, { update }] = useTokenDataContext()\r\n  const [ethPrice, ethPriceOld] = useEthPrice()\r\n  const tokenData = state?.[tokenAddress]\r\n\r\n  useEffect(() => {\r\n    if (!tokenData && ethPrice && ethPriceOld && isAddress(tokenAddress)) {\r\n      getTokenData(tokenAddress, ethPrice, ethPriceOld).then((data) => {\r\n        update(tokenAddress, data)\r\n      })\r\n    }\r\n  }, [ethPrice, ethPriceOld, tokenAddress, tokenData, update])\r\n\r\n  return tokenData || {}\r\n}\r\n\r\nexport function useTokenTransactions(tokenAddress) {\r\n  const [state, { updateTokenTxns }] = useTokenDataContext()\r\n  const tokenTxns = state?.[tokenAddress]?.txns\r\n\r\n  const allPairsFormatted =\r\n    state[tokenAddress] &&\r\n    state[tokenAddress].TOKEN_PAIRS_KEY &&\r\n    state[tokenAddress].TOKEN_PAIRS_KEY.map((pair) => {\r\n      return pair.id\r\n    })\r\n\r\n  useEffect(() => {\r\n    async function checkForTxns() {\r\n      if (!tokenTxns && allPairsFormatted) {\r\n        let transactions = await getTokenTransactions(allPairsFormatted)\r\n        updateTokenTxns(tokenAddress, transactions)\r\n      }\r\n    }\r\n    checkForTxns()\r\n  }, [tokenTxns, tokenAddress, updateTokenTxns, allPairsFormatted])\r\n\r\n  return tokenTxns || []\r\n}\r\n\r\nexport function useTokenPairs(tokenAddress) {\r\n  const [state, { updateAllPairs }] = useTokenDataContext()\r\n  const tokenPairs = state?.[tokenAddress]?.[TOKEN_PAIRS_KEY]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let allPairs = await getTokenPairs(tokenAddress)\r\n      updateAllPairs(tokenAddress, allPairs)\r\n    }\r\n    if (!tokenPairs && isAddress(tokenAddress)) {\r\n      fetchData()\r\n    }\r\n  }, [tokenAddress, tokenPairs, updateAllPairs])\r\n\r\n  return tokenPairs || []\r\n}\r\n\r\nexport function useTokenChartData(tokenAddress) {\r\n  const [state, { updateChartData }] = useTokenDataContext()\r\n  const chartData = state?.[tokenAddress]?.chartData\r\n  useEffect(() => {\r\n    async function checkForChartData() {\r\n      if (!chartData) {\r\n        let data = await getTokenChartData(tokenAddress)\r\n        updateChartData(tokenAddress, data)\r\n      }\r\n    }\r\n    checkForChartData()\r\n  }, [chartData, tokenAddress, updateChartData])\r\n  return chartData\r\n}\r\n\r\n/**\r\n * get candlestick data for a token - saves in context based on the window and the\r\n * interval size\r\n * @param {*} tokenAddress\r\n * @param {*} timeWindow // a preset time window from constant - how far back to look\r\n * @param {*} interval  // the chunk size in seconds - default is 1 hour of 3600s\r\n */\r\nexport function useTokenPriceData(tokenAddress, timeWindow, interval = 3600) {\r\n  const [state, { updatePriceData }] = useTokenDataContext()\r\n  const chartData = state?.[tokenAddress]?.[timeWindow]?.[interval]\r\n  const [latestBlock] = useLatestBlocks()\r\n\r\n  useEffect(() => {\r\n    const currentTime = dayjs.utc()\r\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\r\n    const startTime =\r\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\r\n\r\n    async function fetch() {\r\n      let data = await getIntervalTokenData(tokenAddress, startTime, interval, latestBlock)\r\n      updatePriceData(tokenAddress, data, timeWindow, interval)\r\n    }\r\n    if (!chartData) {\r\n      fetch()\r\n    }\r\n  }, [chartData, interval, timeWindow, tokenAddress, updatePriceData, latestBlock])\r\n\r\n  return chartData\r\n}\r\n\r\nexport function useAllTokenData() {\r\n  const [state] = useTokenDataContext()\r\n  return state\r\n}\r\n","import { USER_MINTS_BUNRS_PER_PAIR } from '../apollo/queries'\r\nimport { client } from '../apollo/client'\r\nimport dayjs from 'dayjs'\r\nimport { getShareValueOverTime } from '.'\r\n\r\nexport const priceOverrides = [\r\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', // USDC\r\n  '0x6b175474e89094c44da98b954eedeac495271d0f', // DAI\r\n]\r\n\r\ninterface ReturnMetrics {\r\n  hodleReturn: number // difference in asset values t0 -> t1 with t0 deposit amounts\r\n  netReturn: number // net return from t0 -> t1\r\n  varenReturn: number // netReturn - hodlReturn\r\n  impLoss: number\r\n  fees: number\r\n}\r\n\r\n// used to calculate returns within a given window bounded by two positions\r\ninterface Position {\r\n  pair: any\r\n  liquidityTokenBalance: number\r\n  liquidityTokenTotalSupply: number\r\n  reserve0: number\r\n  reserve1: number\r\n  reserveUSD: number\r\n  token0PriceUSD: number\r\n  token1PriceUSD: number\r\n}\r\n\r\nconst PRICE_DISCOVERY_START_TIMESTAMP = 1589747086\r\n\r\nfunction formatPricesForEarlyTimestamps(position): Position {\r\n  if (position.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n    if (priceOverrides.includes(position?.pair?.token0.id)) {\r\n      position.token0PriceUSD = 1\r\n    }\r\n    if (priceOverrides.includes(position?.pair?.token1.id)) {\r\n      position.token1PriceUSD = 1\r\n    }\r\n    // WETH price\r\n    if (position.pair?.token0.id === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\r\n      position.token0PriceUSD = 203\r\n    }\r\n    if (position.pair?.token1.id === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\r\n      position.token1PriceUSD = 203\r\n    }\r\n  }\r\n  return position\r\n}\r\n\r\nasync function getPrincipalForUserPerPair(user: string, pairAddress: string) {\r\n  let usd = 0\r\n  let amount0 = 0\r\n  let amount1 = 0\r\n  // get all minst and burns to get principal amounts\r\n  const results = await client.query({\r\n    query: USER_MINTS_BUNRS_PER_PAIR,\r\n    variables: {\r\n      user,\r\n      pair: pairAddress,\r\n    },\r\n  })\r\n  for (const index in results.data.mints) {\r\n    const mint = results.data.mints[index]\r\n    const mintToken0 = mint.pair.token0.id\r\n    const mintToken1 = mint.pair.token1.id\r\n\r\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\r\n    if (priceOverrides.includes(mintToken0) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(mint.amount0) * 2\r\n    } else if (priceOverrides.includes(mintToken1) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(mint.amount1) * 2\r\n    } else {\r\n      usd += parseFloat(mint.amountUSD)\r\n    }\r\n    amount0 += amount0 + parseFloat(mint.amount0)\r\n    amount1 += amount1 + parseFloat(mint.amount1)\r\n  }\r\n\r\n  for (const index in results.data.burns) {\r\n    const burn = results.data.burns[index]\r\n    const burnToken0 = burn.pair.token0.id\r\n    const burnToken1 = burn.pair.token1.id\r\n\r\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\r\n    if (priceOverrides.includes(burnToken0) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(burn.amount0) * 2\r\n    } else if (priceOverrides.includes(burnToken1) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(burn.amount1) * 2\r\n    } else {\r\n      usd -= parseFloat(results.data.burns[index].amountUSD)\r\n    }\r\n\r\n    amount0 -= parseFloat(results.data.burns[index].amount0)\r\n    amount1 -= parseFloat(results.data.burns[index].amount1)\r\n  }\r\n\r\n  return { usd, amount0, amount1 }\r\n}\r\n\r\n/**\r\n * Core algorithm for calculating retursn within one time window.\r\n * @param positionT0 // users liquidity info and token rates at beginning of window\r\n * @param positionT1 // '' at the end of the window\r\n */\r\nexport function getMetricsForPositionWindow(positionT0: Position, positionT1: Position): ReturnMetrics {\r\n  positionT0 = formatPricesForEarlyTimestamps(positionT0)\r\n  positionT1 = formatPricesForEarlyTimestamps(positionT1)\r\n\r\n  // calculate ownership at ends of window, for end of window we need original LP token balance / new total supply\r\n  const t0Ownership = positionT0.liquidityTokenBalance / positionT0.liquidityTokenTotalSupply\r\n  const t1Ownership = positionT0.liquidityTokenBalance / positionT1.liquidityTokenTotalSupply\r\n\r\n  // get starting amounts of token0 and token1 deposited by LP\r\n  const token0_amount_t0 = t0Ownership * positionT0.reserve0\r\n  const token1_amount_t0 = t0Ownership * positionT0.reserve1\r\n\r\n  // get current token values\r\n  const token0_amount_t1 = t1Ownership * positionT1.reserve0\r\n  const token1_amount_t1 = t1Ownership * positionT1.reserve1\r\n\r\n  // calculate squares to find imp loss and fee differences\r\n  const sqrK_t0 = Math.sqrt(token0_amount_t0 * token1_amount_t0)\r\n  // eslint-disable-next-line eqeqeq\r\n  const priceRatioT1 = positionT1.token0PriceUSD != 0 ? positionT1.token1PriceUSD / positionT1.token0PriceUSD : 0\r\n\r\n  const token0_amount_no_fees = positionT1.token1PriceUSD && priceRatioT1 ? sqrK_t0 * Math.sqrt(priceRatioT1) : 0\r\n  const token1_amount_no_fees =\r\n    Number(positionT1.token1PriceUSD) && priceRatioT1 ? sqrK_t0 / Math.sqrt(priceRatioT1) : 0\r\n  const no_fees_usd =\r\n    token0_amount_no_fees * positionT1.token0PriceUSD + token1_amount_no_fees * positionT1.token1PriceUSD\r\n\r\n  const difference_fees_token0 = token0_amount_t1 - token0_amount_no_fees\r\n  const difference_fees_token1 = token1_amount_t1 - token1_amount_no_fees\r\n  const difference_fees_usd =\r\n    difference_fees_token0 * positionT1.token0PriceUSD + difference_fees_token1 * positionT1.token1PriceUSD\r\n\r\n  // calculate USD value at t0 and t1 using initial token deposit amounts for asset return\r\n  const assetValueT0 = token0_amount_t0 * positionT0.token0PriceUSD + token1_amount_t0 * positionT0.token1PriceUSD\r\n  const assetValueT1 = token0_amount_t0 * positionT1.token0PriceUSD + token1_amount_t0 * positionT1.token1PriceUSD\r\n\r\n  const imp_loss_usd = no_fees_usd - assetValueT1\r\n  const varen_return = difference_fees_usd + imp_loss_usd\r\n\r\n  // get net value change for combined data\r\n  const netValueT0 = t0Ownership * positionT0.reserveUSD\r\n  const netValueT1 = t1Ownership * positionT1.reserveUSD\r\n\r\n  return {\r\n    hodleReturn: assetValueT1 - assetValueT0,\r\n    netReturn: netValueT1 - netValueT0,\r\n    varenReturn: varen_return,\r\n    impLoss: imp_loss_usd,\r\n    fees: difference_fees_usd,\r\n  }\r\n}\r\n\r\n/**\r\n * formats data for historical chart for an LPs position in 1 pair over time\r\n * @param startDateTimestamp // day to start tracking at\r\n * @param currentPairData // current stat of the pair\r\n * @param pairSnapshots // history of entries and exits for lp on this pair\r\n * @param currentETHPrice // current price of eth used for usd conversions\r\n */\r\nexport async function getHistoricalPairReturns(startDateTimestamp, currentPairData, pairSnapshots, currentETHPrice) {\r\n  // catch case where data not puplated yet\r\n  if (!currentPairData.createdAtTimestamp) {\r\n    return []\r\n  }\r\n  let dayIndex: number = Math.round(startDateTimestamp / 86400) // get unique day bucket unix\r\n  const currentDayIndex: number = Math.round(dayjs.utc().unix() / 86400)\r\n  const sortedPositions = pairSnapshots.sort((a, b) => {\r\n    return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\r\n  })\r\n  if (sortedPositions[0].timestamp > startDateTimestamp) {\r\n    dayIndex = Math.round(sortedPositions[0].timestamp / 86400)\r\n  }\r\n\r\n  const dayTimestamps = []\r\n  while (dayIndex < currentDayIndex) {\r\n    // only account for days where this pair existed\r\n    if (dayIndex * 86400 >= parseInt(currentPairData.createdAtTimestamp)) {\r\n      dayTimestamps.push(dayIndex * 86400)\r\n    }\r\n    dayIndex = dayIndex + 1\r\n  }\r\n\r\n  const shareValues = await getShareValueOverTime(currentPairData.id, dayTimestamps)\r\n  const shareValuesFormatted = {}\r\n  shareValues?.map((share) => {\r\n    shareValuesFormatted[share.timestamp] = share\r\n  })\r\n\r\n  // set the default position and data\r\n  let positionT0 = pairSnapshots[0]\r\n  const formattedHistory = []\r\n  let netFees = 0\r\n\r\n  // keep track of up to date metrics as we parse each day\r\n  for (const index in dayTimestamps) {\r\n    // get the bounds on the day\r\n    const dayTimestamp = dayTimestamps[index]\r\n    const timestampCeiling = dayTimestamp + 86400\r\n\r\n    // for each change in position value that day, create a window and update\r\n    const dailyChanges = pairSnapshots.filter((snapshot) => {\r\n      return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\r\n    })\r\n    for (let i = 0; i < dailyChanges.length; i++) {\r\n      const positionT1 = dailyChanges[i]\r\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\r\n      netFees = netFees + localReturns.fees\r\n      positionT0 = positionT1\r\n    }\r\n\r\n    // now treat the end of the day as a hypothetical position\r\n    let positionT1 = shareValuesFormatted[dayTimestamp + 86400]\r\n    if (!positionT1) {\r\n      positionT1 = {\r\n        pair: currentPairData.id,\r\n        liquidityTokenBalance: positionT0.liquidityTokenBalance,\r\n        totalSupply: currentPairData.totalSupply,\r\n        reserve0: currentPairData.reserve0,\r\n        reserve1: currentPairData.reserve1,\r\n        reserveUSD: currentPairData.reserveUSD,\r\n        token0PriceUSD: currentPairData.token0.derivedETH * currentETHPrice,\r\n        token1PriceUSD: currentPairData.token1.derivedETH * currentETHPrice,\r\n      }\r\n    }\r\n\r\n    if (positionT1) {\r\n      positionT1.liquidityTokenTotalSupply = positionT1.totalSupply\r\n      positionT1.liquidityTokenBalance = positionT0.liquidityTokenBalance\r\n      const currentLiquidityValue =\r\n        (parseFloat(positionT1.liquidityTokenBalance) / parseFloat(positionT1.liquidityTokenTotalSupply)) *\r\n        parseFloat(positionT1.reserveUSD)\r\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\r\n      const localFees = netFees + localReturns.fees\r\n\r\n      formattedHistory.push({\r\n        date: dayTimestamp,\r\n        usdValue: currentLiquidityValue,\r\n        fees: localFees,\r\n      })\r\n    }\r\n  }\r\n\r\n  return formattedHistory\r\n}\r\n\r\n/**\r\n * For a given pair and user, get the return metrics\r\n * @param user\r\n * @param pair\r\n * @param ethPrice\r\n */\r\nexport async function getLPReturnsOnPair(user: string, pair, ethPrice: number, snapshots) {\r\n  // initialize values\r\n  const principal = await getPrincipalForUserPerPair(user, pair.id)\r\n  let hodlReturn = 0\r\n  let netReturn = 0\r\n  let varenReturn = 0\r\n  let fees = 0\r\n\r\n  snapshots = snapshots.filter((entry) => {\r\n    return entry.pair.id === pair.id\r\n  })\r\n\r\n  // get data about the current position\r\n  const currentPosition: Position = {\r\n    pair,\r\n    liquidityTokenBalance: snapshots[snapshots.length - 1]?.liquidityTokenBalance,\r\n    liquidityTokenTotalSupply: pair.totalSupply,\r\n    reserve0: pair.reserve0,\r\n    reserve1: pair.reserve1,\r\n    reserveUSD: pair.reserveUSD,\r\n    token0PriceUSD: pair.token0.derivedETH * ethPrice,\r\n    token1PriceUSD: pair.token1.derivedETH * ethPrice,\r\n  }\r\n\r\n  for (const index in snapshots) {\r\n    // get positions at both bounds of the window\r\n    const positionT0 = snapshots[index]\r\n    const positionT1 = parseInt(index) === snapshots.length - 1 ? currentPosition : snapshots[parseInt(index) + 1]\r\n\r\n    const results = getMetricsForPositionWindow(positionT0, positionT1)\r\n    hodlReturn = hodlReturn + results.hodleReturn\r\n    netReturn = netReturn + results.netReturn\r\n    varenReturn = varenReturn + results.varenReturn\r\n    fees = fees + results.fees\r\n  }\r\n\r\n  return {\r\n    principal,\r\n    net: {\r\n      return: netReturn,\r\n    },\r\n    varen: {\r\n      return: varenReturn,\r\n    },\r\n    fees: {\r\n      sum: fees,\r\n    },\r\n  }\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\r\nimport { useAllPairData, usePairData } from './PairData'\r\nimport { client, stakingClient } from '../apollo/client'\r\nimport {\r\n  USER_TRANSACTIONS,\r\n  USER_POSITIONS,\r\n  USER_HISTORY,\r\n  PAIR_DAY_DATA_BULK,\r\n  MINING_POSITIONS,\r\n} from '../apollo/queries'\r\nimport { useTimeframe, useStartTimestamp } from './Application'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { useEthPrice } from './GlobalData'\r\nimport { getLPReturnsOnPair, getHistoricalPairReturns } from '../utils/returns'\r\nimport { timeframeOptions } from '../constants'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst UPDATE_TRANSACTIONS = 'UPDATE_TRANSACTIONS'\r\nconst UPDATE_POSITIONS = 'UPDATE_POSITIONS '\r\nconst UPDATE_MINING_POSITIONS = 'UPDATE_MINING_POSITIONS'\r\nconst UPDATE_USER_POSITION_HISTORY = 'UPDATE_USER_POSITION_HISTORY'\r\nconst UPDATE_USER_PAIR_RETURNS = 'UPDATE_USER_PAIR_RETURNS'\r\n\r\nconst TRANSACTIONS_KEY = 'TRANSACTIONS_KEY'\r\nconst POSITIONS_KEY = 'POSITIONS_KEY'\r\nconst MINING_POSITIONS_KEY = 'MINING_POSITIONS_KEY'\r\nconst USER_SNAPSHOTS = 'USER_SNAPSHOTS'\r\nconst USER_PAIR_RETURNS_KEY = 'USER_PAIR_RETURNS_KEY'\r\n\r\nconst UserContext = createContext()\r\n\r\nfunction useUserContext() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE_TRANSACTIONS: {\r\n      const { account, transactions } = payload\r\n      return {\r\n        ...state,\r\n        [account]: {\r\n          ...state?.[account],\r\n          [TRANSACTIONS_KEY]: transactions,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_POSITIONS: {\r\n      const { account, positions } = payload\r\n      return {\r\n        ...state,\r\n        [account]: { ...state?.[account], [POSITIONS_KEY]: positions },\r\n      }\r\n    }\r\n    case UPDATE_MINING_POSITIONS: {\r\n      const { account, miningPositions } = payload\r\n      return {\r\n        ...state,\r\n        [account]: { ...state?.[account], [MINING_POSITIONS_KEY]: miningPositions },\r\n      }\r\n    }\r\n    case UPDATE_USER_POSITION_HISTORY: {\r\n      const { account, historyData } = payload\r\n      return {\r\n        ...state,\r\n        [account]: { ...state?.[account], [USER_SNAPSHOTS]: historyData },\r\n      }\r\n    }\r\n\r\n    case UPDATE_USER_PAIR_RETURNS: {\r\n      const { account, pairAddress, data } = payload\r\n      return {\r\n        ...state,\r\n        [account]: {\r\n          ...state?.[account],\r\n          [USER_PAIR_RETURNS_KEY]: {\r\n            ...state?.[account]?.[USER_PAIR_RETURNS_KEY],\r\n            [pairAddress]: data,\r\n          },\r\n        },\r\n      }\r\n    }\r\n\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nconst INITIAL_STATE = {}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\r\n\r\n  const updateTransactions = useCallback((account, transactions) => {\r\n    dispatch({\r\n      type: UPDATE_TRANSACTIONS,\r\n      payload: {\r\n        account,\r\n        transactions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updatePositions = useCallback((account, positions) => {\r\n    dispatch({\r\n      type: UPDATE_POSITIONS,\r\n      payload: {\r\n        account,\r\n        positions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateMiningPositions = useCallback((account, miningPositions) => {\r\n    dispatch({\r\n      type: UPDATE_MINING_POSITIONS,\r\n      payload: {\r\n        account,\r\n        miningPositions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateUserSnapshots = useCallback((account, historyData) => {\r\n    dispatch({\r\n      type: UPDATE_USER_POSITION_HISTORY,\r\n      payload: {\r\n        account,\r\n        historyData,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateUserPairReturns = useCallback((account, pairAddress, data) => {\r\n    dispatch({\r\n      type: UPDATE_USER_PAIR_RETURNS,\r\n      payload: {\r\n        account,\r\n        pairAddress,\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          { updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns },\r\n        ],\r\n        [state, updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns]\r\n      )}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useUserTransactions(account) {\r\n  const [state, { updateTransactions }] = useUserContext()\r\n  const transactions = state?.[account]?.[TRANSACTIONS_KEY]\r\n  useEffect(() => {\r\n    async function fetchData(account) {\r\n      try {\r\n        let result = await client.query({\r\n          query: USER_TRANSACTIONS,\r\n          variables: {\r\n            user: account,\r\n          },\r\n          fetchPolicy: 'no-cache',\r\n        })\r\n        if (result?.data) {\r\n          updateTransactions(account, result?.data)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    if (!transactions && account) {\r\n      fetchData(account)\r\n    }\r\n  }, [account, transactions, updateTransactions])\r\n\r\n  return transactions || {}\r\n}\r\n\r\n/**\r\n * Store all the snapshots of liquidity activity for this account.\r\n * Each snapshot is a moment when an LP position was created or updated.\r\n * @param {*} account\r\n */\r\nexport function useUserSnapshots(account) {\r\n  const [state, { updateUserSnapshots }] = useUserContext()\r\n  const snapshots = state?.[account]?.[USER_SNAPSHOTS]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let skip = 0\r\n        let allResults = []\r\n        let found = false\r\n        while (!found) {\r\n          let result = await client.query({\r\n            query: USER_HISTORY,\r\n            variables: {\r\n              skip: skip,\r\n              user: account,\r\n            },\r\n            fetchPolicy: 'cache-first',\r\n          })\r\n          allResults = allResults.concat(result.data.liquidityPositionSnapshots)\r\n          if (result.data.liquidityPositionSnapshots.length < 1000) {\r\n            found = true\r\n          } else {\r\n            skip += 1000\r\n          }\r\n        }\r\n        if (allResults) {\r\n          updateUserSnapshots(account, allResults)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    if (!snapshots && account) {\r\n      fetchData()\r\n    }\r\n  }, [account, snapshots, updateUserSnapshots])\r\n\r\n  return snapshots\r\n}\r\n\r\n/**\r\n * For a given position (data about holding) and user, get the chart\r\n * data for the fees and liquidity over time\r\n * @param {*} position\r\n * @param {*} account\r\n */\r\nexport function useUserPositionChart(position, account) {\r\n  const pairAddress = position?.pair?.id\r\n  const [state, { updateUserPairReturns }] = useUserContext()\r\n\r\n  // get oldest date of data to fetch\r\n  const startDateTimestamp = useStartTimestamp()\r\n\r\n  // get users adds and removes on this pair\r\n  const snapshots = useUserSnapshots(account)\r\n  const pairSnapshots =\r\n    snapshots &&\r\n    position &&\r\n    snapshots.filter((currentSnapshot) => {\r\n      return currentSnapshot.pair.id === position.pair.id\r\n    })\r\n\r\n  // get data needed for calculations\r\n  const currentPairData = usePairData(pairAddress)\r\n  const [currentETHPrice] = useEthPrice()\r\n\r\n  // formatetd array to return for chart data\r\n  const formattedHistory = state?.[account]?.[USER_PAIR_RETURNS_KEY]?.[pairAddress]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let fetchedData = await getHistoricalPairReturns(\r\n        startDateTimestamp,\r\n        currentPairData,\r\n        pairSnapshots,\r\n        currentETHPrice\r\n      )\r\n      updateUserPairReturns(account, pairAddress, fetchedData)\r\n    }\r\n    if (\r\n      account &&\r\n      startDateTimestamp &&\r\n      pairSnapshots &&\r\n      !formattedHistory &&\r\n      currentPairData &&\r\n      Object.keys(currentPairData).length > 0 &&\r\n      pairAddress &&\r\n      currentETHPrice\r\n    ) {\r\n      fetchData()\r\n    }\r\n  }, [\r\n    account,\r\n    startDateTimestamp,\r\n    pairSnapshots,\r\n    formattedHistory,\r\n    pairAddress,\r\n    currentPairData,\r\n    currentETHPrice,\r\n    updateUserPairReturns,\r\n    position.pair.id,\r\n  ])\r\n\r\n  return formattedHistory\r\n}\r\n\r\n/**\r\n * For each day starting with min(first position timestamp, beginning of time window),\r\n * get total liquidity supplied by user in USD. Format in array with date timestamps\r\n * and usd liquidity value.\r\n */\r\nexport function useUserLiquidityChart(account) {\r\n  const history = useUserSnapshots(account)\r\n  // formatetd array to return for chart data\r\n  const [formattedHistory, setFormattedHistory] = useState()\r\n\r\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\r\n  const [activeWindow] = useTimeframe()\r\n\r\n  // monitor the old date fetched\r\n  useEffect(() => {\r\n    const utcEndTime = dayjs.utc()\r\n    // based on window, get starttime\r\n    let utcStartTime\r\n    switch (activeWindow) {\r\n      case timeframeOptions.WEEK:\r\n        utcStartTime = utcEndTime.subtract(1, 'week').startOf('day')\r\n        break\r\n      case timeframeOptions.ALL_TIME:\r\n        utcStartTime = utcEndTime.subtract(1, 'year')\r\n        break\r\n      default:\r\n        utcStartTime = utcEndTime.subtract(1, 'year').startOf('year')\r\n        break\r\n    }\r\n    let startTime = utcStartTime.unix() - 1\r\n    if ((activeWindow && startTime < startDateTimestamp) || !startDateTimestamp) {\r\n      setStartDateTimestamp(startTime)\r\n    }\r\n  }, [activeWindow, startDateTimestamp])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let dayIndex = parseInt(startDateTimestamp / 86400) // get unique day bucket unix\r\n      const currentDayIndex = parseInt(dayjs.utc().unix() / 86400)\r\n\r\n      // sort snapshots in order\r\n      let sortedPositions = history.sort((a, b) => {\r\n        return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\r\n      })\r\n      // if UI start time is > first position time - bump start index to this time\r\n      if (parseInt(sortedPositions[0].timestamp) > dayIndex) {\r\n        dayIndex = parseInt(parseInt(sortedPositions[0].timestamp) / 86400)\r\n      }\r\n\r\n      const dayTimestamps = []\r\n      // get date timestamps for all days in view\r\n      while (dayIndex < currentDayIndex) {\r\n        dayTimestamps.push(parseInt(dayIndex) * 86400)\r\n        dayIndex = dayIndex + 1\r\n      }\r\n\r\n      const pairs = history.reduce((pairList, position) => {\r\n        return [...pairList, position.pair.id]\r\n      }, [])\r\n\r\n      // get all day datas where date is in this list, and pair is in pair list\r\n      let {\r\n        data: { pairDayDatas },\r\n      } = await client.query({\r\n        query: PAIR_DAY_DATA_BULK(pairs, startDateTimestamp),\r\n      })\r\n\r\n      const formattedHistory = []\r\n\r\n      // map of current pair => ownership %\r\n      const ownershipPerPair = {}\r\n      for (const index in dayTimestamps) {\r\n        const dayTimestamp = dayTimestamps[index]\r\n        const timestampCeiling = dayTimestamp + 86400\r\n\r\n        // cycle through relevant positions and update ownership for any that we need to\r\n        const relevantPositions = history.filter((snapshot) => {\r\n          return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\r\n        })\r\n        for (const index in relevantPositions) {\r\n          const position = relevantPositions[index]\r\n          // case where pair not added yet\r\n          if (!ownershipPerPair[position.pair.id]) {\r\n            ownershipPerPair[position.pair.id] = {\r\n              lpTokenBalance: position.liquidityTokenBalance,\r\n              timestamp: position.timestamp,\r\n            }\r\n          }\r\n          // case where more recent timestamp is found for pair\r\n          if (ownershipPerPair[position.pair.id] && ownershipPerPair[position.pair.id].timestamp < position.timestamp) {\r\n            ownershipPerPair[position.pair.id] = {\r\n              lpTokenBalance: position.liquidityTokenBalance,\r\n              timestamp: position.timestamp,\r\n            }\r\n          }\r\n        }\r\n\r\n        const relavantDayDatas = Object.keys(ownershipPerPair).map((pairAddress) => {\r\n          // find last day data after timestamp update\r\n          const dayDatasForThisPair = pairDayDatas.filter((dayData) => {\r\n            return dayData.pairAddress === pairAddress\r\n          })\r\n          // find the most recent reference to pair liquidity data\r\n          let mostRecent = dayDatasForThisPair[0]\r\n          for (const index in dayDatasForThisPair) {\r\n            const dayData = dayDatasForThisPair[index]\r\n            if (dayData.date < dayTimestamp && dayData.date > mostRecent.date) {\r\n              mostRecent = dayData\r\n            }\r\n          }\r\n          return mostRecent\r\n        })\r\n\r\n        // now cycle through pair day datas, for each one find usd value = ownership[address] * reserveUSD\r\n        const dailyUSD = relavantDayDatas.reduce((totalUSD, dayData) => {\r\n          if (dayData) {\r\n            return (totalUSD =\r\n              totalUSD +\r\n              (ownershipPerPair[dayData.pairAddress]\r\n                ? (parseFloat(ownershipPerPair[dayData.pairAddress].lpTokenBalance) / parseFloat(dayData.totalSupply)) *\r\n                  parseFloat(dayData.reserveUSD)\r\n                : 0))\r\n          } else {\r\n            return totalUSD\r\n          }\r\n        }, 0)\r\n\r\n        formattedHistory.push({\r\n          date: dayTimestamp,\r\n          valueUSD: dailyUSD,\r\n        })\r\n      }\r\n\r\n      setFormattedHistory(formattedHistory)\r\n    }\r\n    if (history && startDateTimestamp && history.length > 0) {\r\n      fetchData()\r\n    }\r\n  }, [history, startDateTimestamp])\r\n\r\n  return formattedHistory\r\n}\r\n\r\nexport function useUserPositions(account) {\r\n  const [state, { updatePositions }] = useUserContext()\r\n  const positions = state?.[account]?.[POSITIONS_KEY]\r\n\r\n  const snapshots = useUserSnapshots(account)\r\n  const [ethPrice] = useEthPrice()\r\n\r\n  useEffect(() => {\r\n    async function fetchData(account) {\r\n      try {\r\n        let result = await client.query({\r\n          query: USER_POSITIONS,\r\n          variables: {\r\n            user: account,\r\n          },\r\n          fetchPolicy: 'no-cache',\r\n        })\r\n        if (result?.data?.liquidityPositions) {\r\n          let formattedPositions = await Promise.all(\r\n            result?.data?.liquidityPositions.map(async (positionData) => {\r\n              const returnData = await getLPReturnsOnPair(account, positionData.pair, ethPrice, snapshots)\r\n              return {\r\n                ...positionData,\r\n                ...returnData,\r\n              }\r\n            })\r\n          )\r\n          updatePositions(account, formattedPositions)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    if (!positions && account && ethPrice && snapshots) {\r\n      fetchData(account)\r\n    }\r\n  }, [account, positions, updatePositions, ethPrice, snapshots])\r\n\r\n  return positions\r\n}\r\n\r\nexport function useMiningPositions(account) {\r\n  const [state, { updateMiningPositions }] = useUserContext()\r\n  const allPairData = useAllPairData()\r\n  const miningPositions = state?.[account]?.[MINING_POSITIONS_KEY]\r\n\r\n  const snapshots = useUserSnapshots(account)\r\n\r\n  useEffect(() => {\r\n    async function fetchData(account) {\r\n      try {\r\n        let miningPositionData = []\r\n        let result = await stakingClient.query({\r\n          query: MINING_POSITIONS(account),\r\n          fetchPolicy: 'no-cache',\r\n        })\r\n        if (!result?.data?.user?.miningPosition) {\r\n          return\r\n        }\r\n        miningPositionData = result.data.user.miningPosition\r\n        for (const miningPosition of miningPositionData) {\r\n          const pairAddress = miningPosition.miningPool.pair.id\r\n          miningPosition.pairData = allPairData[pairAddress]\r\n        }\r\n        updateMiningPositions(account, miningPositionData)\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n\r\n    if (!miningPositions && account && snapshots) {\r\n      fetchData(account)\r\n    }\r\n  }, [account, miningPositions, updateMiningPositions, snapshots, allPairData])\r\n  return miningPositions\r\n}\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: center;\r\n  align-items: ${({ align }) => align && align};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  justify-content: ${({ justify }) => justify};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)`\r\n  flex-wrap: ${({ wrap }) => wrap ?? 'nowrap'};\r\n  margin: -${({ gap }) => gap};\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)`\r\n  width: fit-content;\r\n`\r\n\r\nexport default Row\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n  pointer-events: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  ${(props) =>\r\n  props.fill && !props.height\r\n    ? css`\r\n          height: 100vh;\r\n        `\r\n    : css`\r\n          height: 180px;\r\n        `}\r\n`\r\n\r\nconst Loader = styled.div`\r\n  margin: 100px auto;\r\n  width: 40px;\r\n  height: 40px;\r\n  position: relative;\r\n  z-index: 5;\r\n  \r\n  .sk-child {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n  \r\n    :before {\r\n      content: '';\r\n      display: block;\r\n      margin: 0 auto;\r\n      width: 15%;\r\n      height: 15%;\r\n      background-color: #bebebe;\r\n      border-radius: 100%;\r\n      animation: sk-circleBounceDelay 1.2s infinite ease-in-out both;\r\n    }\r\n  }\r\n  \r\n  .sk-circle2 {\r\n    transform: rotate(30deg); \r\n  }\r\n  .sk-circle3 {\r\n    transform: rotate(60deg); \r\n  }\r\n  .sk-circle4 {\r\n    transform: rotate(90deg); \r\n  }\r\n  .sk-circle5 {\r\n    transform: rotate(120deg); \r\n  }\r\n  .sk-circle6 {\r\n    transform: rotate(150deg); \r\n  }\r\n  .sk-circle7 {\r\n    transform: rotate(180deg); \r\n  }\r\n  .sk-circle8 {\r\n    transform: rotate(210deg); \r\n  }\r\n  .sk-circle9 {\r\n    transform: rotate(240deg); \r\n  }\r\n  .sk-circle10 {\r\n    transform: rotate(270deg); \r\n  }\r\n  .sk-circle11 {\r\n    transform: rotate(300deg); \r\n  }\r\n  .sk-circle12 {\r\n    transform: rotate(330deg); \r\n  }\r\n  .sk-circle2:before {\r\n    animation-delay: -1.1s; \r\n  }\r\n  .sk-circle3:before {\r\n    animation-delay: -1s; \r\n  }\r\n  .sk-circle4:before {\r\n    animation-delay: -0.9s; \r\n  }\r\n  .sk-circle5:before {\r\n    animation-delay: -0.8s; \r\n  }\r\n  .sk-circle6:before {\r\n    animation-delay: -0.7s; \r\n  }\r\n  .sk-circle7:before {\r\n    animation-delay: -0.6s; \r\n  }\r\n  .sk-circle8:before {\r\n    animation-delay: -0.5s; \r\n  }\r\n  .sk-circle9:before {\r\n    animation-delay: -0.4s; \r\n  }\r\n  .sk-circle10:before {\r\n    animation-delay: -0.3s; \r\n  }\r\n  .sk-circle11:before {\r\n    animation-delay: -0.2s; \r\n  }\r\n  .sk-circle12:before {\r\n    animation-delay: -0.1s; \r\n  }\r\n`\r\n\r\nconst LocalLoader = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Loader>\r\n          <div className=\"sk-circle1 sk-child\" />\r\n          <div className=\"sk-circle2 sk-child\" />\r\n          <div className=\"sk-circle3 sk-child\" />\r\n          <div className=\"sk-circle4 sk-child\" />\r\n          <div className=\"sk-circle5 sk-child\" />\r\n          <div className=\"sk-circle6 sk-child\" />\r\n          <div className=\"sk-circle7 sk-child\" />\r\n          <div className=\"sk-circle8 sk-child\" />\r\n          <div className=\"sk-circle9 sk-child\" />\r\n          <div className=\"sk-circle10 sk-child\" />\r\n          <div className=\"sk-circle11 sk-child\" />\r\n          <div className=\"sk-circle12 sk-child\" />\r\n      </Loader>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default LocalLoader\r\n","import React from 'react'\r\nimport { Link as RebassLink } from 'rebass'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { lighten, darken } from 'polished'\r\n\r\nconst WrappedLink = ({ external, children, ...rest }) => (\r\n  <RebassLink\r\n    target={external ? '_blank' : null}\r\n    rel={external ? 'noopener noreferrer' : null}\r\n    {...rest}\r\n  >\r\n    {children}\r\n  </RebassLink>\r\n)\r\n\r\nWrappedLink.propTypes = {\r\n  external: PropTypes.bool,\r\n}\r\n\r\nconst Link = styled(WrappedLink)`\r\n  color: ${({ theme }) => theme.grey};\r\n \r\n  &:hover {\r\n    color: ${({ theme }) => theme.white};\r\n  }\r\n`\r\n\r\nexport default Link\r\n\r\nexport const CustomLink = styled(RouterLink)`\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: ${({ color, theme }) => (color ? color : theme.link)};\r\n\r\n  &:visited {\r\n    color: ${({ color, theme }) => (color ? lighten(0.1, color) : lighten(0.1, theme.link))};\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    underline: none;\r\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.link))};\r\n  }\r\n`\r\n\r\nexport const BasicLink = styled(RouterLink)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    underline: none;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Box } from 'rebass'\r\n\r\nimport Link from './Link'\r\n\r\nimport { urls } from '../utils'\r\n\r\nconst Divider = styled(Box)`\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.divider};\r\n`\r\n\r\nexport const IconWrapper = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  border-radius: 3px;\r\n  height: 16px;\r\n  width: 16px;\r\n  padding: 0px;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst Hint = ({ children, ...rest }) => (\r\n  <Text fontSize={16} weight={500} {...rest}>\r\n    {children}\r\n  </Text>\r\n)\r\n\r\nconst Address = ({ address, token, ...rest }) => (\r\n  <Link\r\n    color=\"button\"\r\n    href={token ? urls.showToken(address) : urls.showAddress(address)}\r\n    external\r\n    style={{ wordBreak: 'break-all' }}\r\n    {...rest}\r\n  >\r\n    {address}\r\n  </Link>\r\n)\r\n\r\nexport const Hover = styled.div`\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: ${({ fade }) => fade && '0.7'};\r\n  }\r\n`\r\n\r\nexport const StyledIcon = styled.div`\r\n  color: ${({ theme }) => theme.text1};\r\n`\r\n\r\nconst EmptyCard = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 200px;\r\n  border-radius: 20px;\r\n  color: ${({ theme }) => theme.text1};\r\n  height: ${({ height }) => height && height};\r\n`\r\n\r\nexport const SideBar = styled.span`\r\n  display: grid;\r\n  grid-gap: 24px;\r\n  position: sticky;\r\n  top: 4rem;\r\n`\r\n\r\nexport const SubNav = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 0;\r\n  margin-bottom: 2rem;\r\n`\r\nexport const SubNavEl = styled.li`\r\n  list-style: none;\r\n  display: flex;\r\n  padding-bottom: 0.5rem;\r\n  margin-right: 1rem;\r\n  font-weight: ${({ isActive }) => (isActive ? 600 : 500)};\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0);\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    border-bottom: 1px solid ${({ theme }) => theme.bg4};\r\n  }\r\n`\r\n\r\nexport const PageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 36px;\r\n  padding-bottom: 80px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    & > * {\r\n      padding: 0 12px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const ContentWrapper = styled.div`\r\n  display: grid;\r\n  justify-content: start;\r\n  align-items: start;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 24px;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  box-sizing: border-box;\r\n  overflow-x: hidden;\r\n  position: relative;\r\n  z-index: 99;\r\n   \r\n  @media screen and (max-width: 1180px) {\r\n    grid-template-columns: 1fr;\r\n    padding: 0 1rem;\r\n  }\r\n \r\n`\r\n\r\nexport const ContentWrapperLarge = styled.div`\r\n  display: grid;\r\n  justify-content: start;\r\n  align-items: start;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 24px;\r\n  padding: 0 2rem;\r\n  margin: 0 auto;\r\n  box-sizing: border-box;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 99;\r\n  \r\n  @media screen and (max-width: 1282px) {\r\n    grid-template-columns: 1fr;\r\n    padding: 0 1rem;\r\n  }\r\n`\r\n\r\nexport const FullWrapper = styled.div`\r\n  display: grid;\r\n  justify-content: start;\r\n  align-items: start;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 24px;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  z-index: 99;\r\n  \r\n  @media screen and (max-width: 1180px) {\r\n    grid-template-columns: 1fr;\r\n    padding: 0 1rem;\r\n  }\r\n`\r\n\r\nexport const FixedMenu = styled.div`\r\n  z-index: 99;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 1rem;\r\n  box-sizing: border-box;\r\n  margin-bottom: 2rem;\r\n  max-width: 100vw;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nexport { Hint, Divider, Address, EmptyCard }\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { isAddress } from '../../utils/index.js'\r\nimport EthereumLogo from '../../assets/eth.png'\r\n\r\nconst BAD_IMAGES = {}\r\n\r\nconst Inline = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  align-self: center;\r\n`\r\n\r\nconst Image = styled.img`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n  border-radius: 50%;\r\n`\r\n\r\nconst StyledEthereumLogo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  > img {\r\n    width: ${({ size }) => size};\r\n    height: ${({ size }) => size};\r\n  }\r\n`\r\n\r\nexport default function TokenLogo({ address, header = false, size = '24px', ...rest }) {\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setError(false)\r\n  }, [address])\r\n\r\n  if (error || BAD_IMAGES[address]) {\r\n    return <Inline />\r\n  }\r\n\r\n  if (address?.toLowerCase() === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\r\n    return (\r\n      <StyledEthereumLogo size={size} {...rest}>\r\n        <img\r\n          src={EthereumLogo}\r\n          style={{\r\n            boxShadow: '0px 6px 10px rgba(0, 0, 0, 0.075)',\r\n            borderRadius: '24px'\r\n          }}\r\n          alt=\"\"\r\n        />\r\n      </StyledEthereumLogo>\r\n    )\r\n  }\r\n\r\n  const path = `https://logos.varen.finance/${isAddress(address)}.png`.toLowerCase()\r\n\r\n  return (\r\n    <Inline>\r\n      <Image\r\n        {...rest}\r\n        alt={''}\r\n        src={path}\r\n        size={size}\r\n        onError={event => {\r\n          BAD_IMAGES[address] = true\r\n          setError(true)\r\n          event.preventDefault()\r\n        }}\r\n      />\r\n    </Inline>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport TokenLogo from '../TokenLogo'\r\n\r\nexport default function DoubleTokenLogo({ a0, a1, size = 24, margin = false }) {\r\n  const TokenWrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-right: ${({ sizeraw, margin }) => margin && (sizeraw / 3 + 8).toString() + 'px'};\r\n  `\r\n\r\n  const HigherLogo = styled(TokenLogo)`\r\n    z-index: 2;\r\n    border-radius: 50%;\r\n  `\r\n\r\n  const CoveredLogo = styled(TokenLogo)`\r\n    position: absolute;\r\n    left: ${({ sizeraw }) => (sizeraw / 2).toString() + 'px'};\r\n    border-radius: 50%;\r\n  `\r\n\r\n  return (\r\n    <TokenWrapper sizeraw={size} margin={margin}>\r\n      <HigherLogo address={a0} size={size.toString() + 'px'} sizeraw={size} />\r\n      <CoveredLogo address={a1} size={size.toString() + 'px'} sizeraw={size} />\r\n    </TokenWrapper>\r\n  )\r\n}\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.bg2};\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\r\n  color: ${({ theme }) => theme.text2};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    border: 1px solid ${({ theme }) => theme.bg4};\r\n    transform: rotate(45deg);\r\n    background: ${({ theme }) => theme.bg2};\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n\r\n  useInterval(update, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useCallback, useEffect, useRef } from 'react'\r\nimport copy from 'copy-to-clipboard'\r\n\r\nexport function useColor() {\r\n  return '#bebebe'\r\n}\r\n\r\nexport function useCopyClipboard(timeout = 500) {\r\n  const [isCopied, setIsCopied] = useState(false)\r\n\r\n  const staticCopy = useCallback((text) => {\r\n    const didCopy = copy(text)\r\n    setIsCopied(didCopy)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isCopied) {\r\n      const hide = setTimeout(() => {\r\n        setIsCopied(false)\r\n      }, timeout)\r\n\r\n      return () => {\r\n        clearTimeout(hide)\r\n      }\r\n    }\r\n  }, [isCopied, setIsCopied, timeout])\r\n\r\n  return [isCopied, staticCopy]\r\n}\r\n\r\nexport const useOutsideClick = (ref, ref2, callback) => {\r\n  const handleClick = (e) => {\r\n    if (ref.current && ref.current && !ref2.current) {\r\n      callback(true)\r\n    } else if (ref.current && !ref.current.contains(e.target) && ref2.current && !ref2.current.contains(e.target)) {\r\n      callback(true)\r\n    } else {\r\n      callback(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  })\r\n}\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const current = savedCallback.current\r\n      current && current()\r\n    }\r\n\r\n    if (delay !== null) {\r\n      tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return\r\n  }, [delay])\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { HelpCircle as Question } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  color: ${({ theme }) => theme.text2};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 400;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n}\r\n\r\nexport function Tooltip({ text, ...rest }: TooltipProps) {\r\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n}\r\n\r\nexport default function QuestionHelper({ text, disabled }: { text: string; disabled?: boolean }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4 }}>\r\n      <Tooltip text={text} show={show && !disabled}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <Question size={16} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tooltip } from '../QuestionHelper'\r\n\r\nconst TextWrapper = styled.div`\r\n  position: relative;\r\n  margin-left: ${({ margin }) => margin && '4px'};\r\n  color: ${({ theme, link }) => (link ? theme.grey : theme.text1)};\r\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\r\n\r\n  :hover {\r\n    color: ${({ theme, link }) => (link ? theme.white : theme.text1)};\r\n    color: ${({ link }) => (link ? 'pointer' : 'default')};\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\r\n  }\r\n`\r\n\r\nconst FormattedName = ({ text, maxCharacters, margin = false, adjustSize = false, fontSize, link, ...rest }) => {\r\n  const [showHover, setShowHover] = useState(false)\r\n\r\n  if (!text) {\r\n    return ''\r\n  }\r\n\r\n  if (text.length > maxCharacters) {\r\n    return (\r\n      <Tooltip text={text} show={showHover}>\r\n        <TextWrapper\r\n          onMouseEnter={() => setShowHover(true)}\r\n          onMouseLeave={() => setShowHover(false)}\r\n          margin={margin}\r\n          adjustSize={adjustSize}\r\n          link={link}\r\n          fontSize={fontSize}\r\n          {...rest}\r\n        >\r\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\r\n        </TextWrapper>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <TextWrapper margin={margin} adjustSize={adjustSize} link={link} fontSize={fontSize} {...rest}>\r\n      {text}\r\n    </TextWrapper>\r\n  )\r\n}\r\n\r\nexport default FormattedName\r\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '../../components'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, formattedPercent } from '../../utils'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport FormattedName from '../FormattedName'\nimport QuestionHelper from '../QuestionHelper'\nimport { TYPE } from '../../Theme'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'name liq vol';\n  padding: 0 1.125rem;\n\n  > * {\n    justify-content: flex-end;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 740px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr};\n    grid-template-areas: ' name liq vol pool ';\n  }\n\n  @media screen and (min-width: 1080px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n  }\n`\n\nconst SORT_FIELD = {\n  LIQ: 0,\n  VOL: 1,\n  VOL_7DAYS: 3,\n  FEES: 4,\n  APY: 5,\n}\n\nconst FIELD_TO_VALUE = {\n  [SORT_FIELD.LIQ]: 'trackedReserveUSD', // sort with tracked volume only\n  [SORT_FIELD.VOL]: 'oneDayVolumeUSD',\n  [SORT_FIELD.VOL_7DAYS]: 'oneWeekVolumeUSD',\n  [SORT_FIELD.FEES]: 'oneDayVolumeUSD',\n}\n\nfunction PairList({ pairs, color, disbaleLinks, maxItems = 10 }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below740 = useMedia('(max-width: 740px)')\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [pairs])\n\n  useEffect(() => {\n    if (pairs) {\n      let extraPages = 1\n      if (Object.keys(pairs).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(pairs).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, pairs])\n\n  const ListItem = ({ pairAddress, index }) => {\n    const pairData = pairs[pairAddress]\n\n    if (pairData && pairData.token0 && pairData.token1) {\n      const liquidity = formattedNum(pairData.reserveUSD, true)\n      const volume = formattedNum(pairData.oneDayVolumeUSD, true)\n      const apy = formattedPercent((pairData.oneDayVolumeUSD * 0.003 * 365 * 100) / pairData.reserveUSD)\n\n      let token0 = pairData.token0\n      let token1 = pairData.token1\n\n      if (\n        token1.symbol === 'ETH' ||\n        (token1.symbol === 'LINK' && token0.symbol !== 'ETH') ||\n        (token1.symbol === 'YFLUSD' && token0.symbol !== 'ETH' && token0.symbol !== 'LINK')\n      ) {\n        token0 = pairData.token1\n        token1 = pairData.token0\n      }\n\n      return (\n        <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\n          <DataText area=\"name\" fontWeight=\"500\">\n            {!below600 && <div style={{ marginRight: '20px', width: '10px' }}>{index}</div>}\n            <DoubleTokenLogo size={below600 ? 16 : 20} a0={token0.id} a1={token1.id} margin={!below740} />\n            <CustomLink style={{ marginLeft: '20px', whiteSpace: 'nowrap' }} to={'/pair/' + pairAddress} color={color}>\n              <FormattedName\n                text={token0.symbol + '-' + token1.symbol}\n                maxCharacters={below600 ? 8 : 16}\n                adjustSize={true}\n                link={true}\n              />\n            </CustomLink>\n          </DataText>\n          <DataText area=\"liq\">{liquidity}</DataText>\n          <DataText area=\"vol\">{volume}</DataText>\n          {!below1080 && <DataText area=\"volWeek\">{formattedNum(pairData.oneWeekVolumeUSD, true)}</DataText>}\n          {!below1080 && <DataText area=\"fees\">{formattedNum(pairData.oneDayVolumeUSD * 0.003, true)}</DataText>}\n          {!below1080 && <DataText area=\"apy\">{apy}</DataText>}\n        </DashGrid>\n      )\n    } else {\n      return ''\n    }\n  }\n\n  const pairList =\n    pairs &&\n    Object.keys(pairs)\n      .sort((addressA, addressB) => {\n        const pairA = pairs[addressA]\n        const pairB = pairs[addressB]\n        if (sortedColumn === SORT_FIELD.APY) {\n          const apy0 = parseFloat(pairA.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairA.reserveUSD)\n          const apy1 = parseFloat(pairB.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairB.reserveUSD)\n          return apy0 > apy1 ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\n        }\n        return parseFloat(pairA[FIELD_TO_VALUE[sortedColumn]]) > parseFloat(pairB[FIELD_TO_VALUE[sortedColumn]])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((pairAddress, index) => {\n        return (\n          pairAddress && (\n            <div key={index}>\n              <ListItem key={index} index={(page - 1) * ITEMS_PER_PAGE + index + 1} pairAddress={pairAddress} />\n              <Divider />\n            </div>\n          )\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid\n        center={true}\n        disbaleLinks={disbaleLinks}\n        style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}\n      >\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <TYPE.main area=\"name\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"liq\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.LIQ)\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\n            }}\n          >\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"vol\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VOL)\n              setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection)\n            }}\n          >\n            Volume (24hrs)\n            {sortedColumn === SORT_FIELD.VOL ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"volWeek\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.VOL_7DAYS)\n                setSortDirection(sortedColumn !== SORT_FIELD.VOL_7DAYS ? true : !sortDirection)\n              }}\n            >\n              Volume (7d) {sortedColumn === SORT_FIELD.VOL_7DAYS ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"fees\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.FEES)\n                setSortDirection(sortedColumn !== SORT_FIELD.FEES ? true : !sortDirection)\n              }}\n            >\n              Fees (24hr) {sortedColumn === SORT_FIELD.FEES ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"apy\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.APY)\n                setSortDirection(sortedColumn !== SORT_FIELD.APY ? true : !sortDirection)\n              }}\n            >\n              1y Fees / Liquidity {sortedColumn === SORT_FIELD.APY ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n            <QuestionHelper text={'Based on 24hr volume annualized'} />\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!pairList ? <LocalLoader /> : pairList}</List>\n      <PageButtons>\n        <div\n          onClick={(e) => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div\n          onClick={(e) => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PairList)\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport TokenLogo from '../TokenLogo'\r\nimport { CustomLink } from '../Link'\r\nimport Row from '../Row'\r\nimport { Divider } from '..'\r\n\r\nimport { formattedNum, formattedPercent } from '../../utils'\r\nimport { useMedia } from 'react-use'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { OVERVIEW_TOKEN_BLACKLIST } from '../../constants'\r\nimport FormattedName from '../FormattedName'\r\nimport { TYPE } from '../../Theme'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 2em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: ${({ theme }) => theme.primary1};\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 100px 1fr 1fr;\r\n  grid-template-areas: 'name liq vol';\r\n  padding: 0 1.125rem;\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n\r\n    &:first-child {\r\n      justify-content: flex-start;\r\n      text-align: left;\r\n      width: 100px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 680px) {\r\n    display: grid;\r\n    grid-gap: 1em;\r\n    grid-template-columns: 180px 1fr 1fr 1fr;\r\n    grid-template-areas: 'name symbol liq vol ';\r\n\r\n    > * {\r\n      justify-content: flex-end;\r\n      width: 100%;\r\n\r\n      &:first-child {\r\n        justify-content: flex-start;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1080px) {\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n    grid-template-columns: 1.5fr 0.6fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'name symbol liq vol price change';\r\n  }\r\n`\r\n\r\nconst ListWrapper = styled.div``\r\n\r\nconst ClickableText = styled(Text)`\r\n  text-align: end;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n  user-select: none;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 0.85rem;\r\n  }\r\n`\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  & > * {\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  LIQ: 'totalLiquidityUSD',\r\n  VOL: 'oneDayVolumeUSD',\r\n  SYMBOL: 'symbol',\r\n  NAME: 'name',\r\n  PRICE: 'priceUSD',\r\n  CHANGE: 'priceChangeUSD',\r\n}\r\n\r\n// @TODO rework into virtualized list\r\nfunction TopTokenList({ tokens, itemMax = 10 }) {\r\n  // page state\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n\r\n  // sorting\r\n  const [sortDirection, setSortDirection] = useState(true)\r\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below680 = useMedia('(max-width: 680px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [tokens])\r\n\r\n  const formattedTokens = useMemo(() => {\r\n    return (\r\n      tokens &&\r\n      Object.keys(tokens)\r\n        .filter((key) => {\r\n          return !OVERVIEW_TOKEN_BLACKLIST.includes(key)\r\n        })\r\n        .map((key) => tokens[key])\r\n    )\r\n  }, [tokens])\r\n\r\n  useEffect(() => {\r\n    if (tokens && formattedTokens) {\r\n      let extraPages = 1\r\n      if (formattedTokens.length % itemMax === 0) {\r\n        extraPages = 0\r\n      }\r\n      setMaxPage(Math.floor(formattedTokens.length / itemMax) + extraPages)\r\n    }\r\n  }, [tokens, formattedTokens, itemMax])\r\n\r\n  const filteredList = useMemo(() => {\r\n    return (\r\n      formattedTokens &&\r\n      formattedTokens\r\n        .sort((a, b) => {\r\n          if (sortedColumn === SORT_FIELD.SYMBOL || sortedColumn === SORT_FIELD.NAME) {\r\n            return a[sortedColumn] > b[sortedColumn] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\r\n          }\r\n          return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\r\n            ? (sortDirection ? -1 : 1) * 1\r\n            : (sortDirection ? -1 : 1) * -1\r\n        })\r\n        .slice(itemMax * (page - 1), page * itemMax)\r\n    )\r\n  }, [formattedTokens, itemMax, page, sortDirection, sortedColumn])\r\n\r\n  const ListItem = ({ item, index }) => {\r\n    return (\r\n      <DashGrid style={{ height: '48px' }} focus={true}>\r\n        <DataText area=\"name\" fontWeight=\"500\">\r\n          <Row>\r\n            {!below680 && <div style={{ marginRight: '1rem', width: '10px' }}>{index}</div>}\r\n            <TokenLogo address={item.id} />\r\n            <CustomLink style={{ marginLeft: '16px', whiteSpace: 'nowrap' }} to={'/token/' + item.id}>\r\n              <FormattedName\r\n                text={below680 ? item.symbol : item.name}\r\n                maxCharacters={below600 ? 8 : 16}\r\n                adjustSize={true}\r\n                link={true}\r\n              />\r\n            </CustomLink>\r\n          </Row>\r\n        </DataText>\r\n        {!below680 && (\r\n          <DataText area=\"symbol\" color=\"text\" fontWeight=\"500\">\r\n            <FormattedName text={item.symbol} maxCharacters={5} />\r\n          </DataText>\r\n        )}\r\n        <DataText area=\"liq\">{formattedNum(item.totalLiquidityUSD, true)}</DataText>\r\n        <DataText area=\"vol\">{formattedNum(item.oneDayVolumeUSD, true)}</DataText>\r\n        {!below1080 && (\r\n          <DataText area=\"price\" fontWeight=\"500\">\r\n            {formattedNum(item.priceUSD, true)}\r\n          </DataText>\r\n        )}\r\n        {!below1080 && <DataText area=\"change\">{formattedPercent(item.priceChangeUSD)}</DataText>}\r\n      </DashGrid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}>\r\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\r\n          <ClickableText\r\n            area=\"name\"\r\n            fontWeight=\"500\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.NAME)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.NAME ? true : !sortDirection)\r\n            }}\r\n          >\r\n            {below680 ? 'Symbol' : 'Name'} {sortedColumn === SORT_FIELD.NAME ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below680 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"symbol\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.SYMBOL)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.SYMBOL ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Symbol {sortedColumn === SORT_FIELD.SYMBOL ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n\r\n        <Flex alignItems=\"center\">\r\n          <ClickableText\r\n            area=\"liq\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.LIQ)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        <Flex alignItems=\"center\">\r\n          <ClickableText\r\n            area=\"vol\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.VOL)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Volume (24hrs)\r\n            {sortedColumn === SORT_FIELD.VOL ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below1080 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"price\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.PRICE)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.PRICE ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Price {sortedColumn === SORT_FIELD.PRICE ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n        {!below1080 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"change\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.CHANGE)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.CHANGE ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Price Change (24hrs)\r\n              {sortedColumn === SORT_FIELD.CHANGE ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>\r\n        {filteredList &&\r\n          filteredList.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <ListItem key={index} index={(page - 1) * itemMax + index + 1} item={item} />\r\n                <Divider />\r\n              </div>\r\n            )\r\n          })}\r\n      </List>\r\n      <PageButtons>\r\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\r\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\r\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </ListWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(TopTokenList)\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Row, { RowBetween } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\nimport { ChevronDown as Arrow } from 'react-feather'\r\nimport { TYPE } from '../../Theme'\r\nimport { StyledIcon } from '..'\r\n\r\nconst Wrapper = styled.div`\r\n  z-index: 20;\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  border: 1px solid ${({ open, color }) => (open ? color : 'rgba(0, 0, 0, 0.15);')} \r\n  width: 100px;\r\n  padding: 4px 10px;\r\n  padding-right: 6px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Dropdown = styled.div`\r\n  position: absolute;\r\n  top: 34px;\r\n  padding-top: 40px;\r\n  width: calc(100% - 40px);\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  border: 1px solid rgba(0, 0, 0, 0.15);\r\n  padding: 10px 10px;\r\n  border-radius: 8px;\r\n  width: calc(100% - 20px);\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n  color: black;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ArrowStyled = styled(Arrow)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-left: 6px;\r\n`\r\n\r\nconst DropdownSelect = ({ options, active, setActive, color }) => {\r\n  const [showDropdown, toggleDropdown] = useState(false)\r\n\r\n  return (\r\n    <Wrapper open={showDropdown} color={color}>\r\n      <RowBetween onClick={() => toggleDropdown(!showDropdown)} justify=\"center\">\r\n        <TYPE.main>{active}</TYPE.main>\r\n        <StyledIcon>\r\n          <ArrowStyled />\r\n        </StyledIcon>\r\n      </RowBetween>\r\n      {showDropdown && (\r\n        <Dropdown>\r\n          <AutoColumn gap=\"20px\">\r\n            {Object.keys(options).map((key, index) => {\r\n              let option = options[key]\r\n              return (\r\n                option !== active && (\r\n                  <Row\r\n                    onClick={() => {\r\n                      toggleDropdown(!showDropdown)\r\n                      setActive(option)\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    <TYPE.body fontSize={14}>{option}</TYPE.body>\r\n                  </Row>\r\n                )\r\n              )\r\n            })}\r\n          </AutoColumn>\r\n        </Dropdown>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DropdownSelect\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport { formatTime, formattedNum, urls } from '../../utils'\r\nimport { useMedia } from 'react-use'\r\nimport { useCurrentCurrency } from '../../contexts/Application'\r\nimport { RowFixed, RowBetween } from '../Row'\r\n\r\nimport LocalLoader from '../LocalLoader'\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport Link from '../Link'\r\nimport { Divider, EmptyCard } from '..'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport FormattedName from '../FormattedName'\r\nimport { TYPE } from '../../Theme'\r\nimport { updateNameData } from '../../utils/data'\r\n\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: ${({ theme }) => theme.grey};\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n   color: ${({ theme }) => theme.white};\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 100px 1fr 1fr;\r\n  grid-template-areas: 'txn value time';\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n\r\n    &:first-child {\r\n      justify-content: flex-start;\r\n      text-align: left;\r\n      width: 100px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 500px) {\r\n    > * {\r\n      &:first-child {\r\n        width: 180px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 780px) {\r\n    max-width: 1320px;\r\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'txn value amountToken amountOther time';\r\n\r\n    > * {\r\n      &:first-child {\r\n        width: 180px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1080px) {\r\n    max-width: 1320px;\r\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'txn value amountToken amountOther account time';\r\n  }\r\n`\r\n\r\nconst ClickableText = styled(Text)`\r\n  color: ${({ theme }) => theme.text1};\r\n  user-select: none;\r\n  text-align: end;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: right;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  & > * {\r\n    font-size: 1em;\r\n  }\r\n\r\n  @media screen and (max-width: 40em) {\r\n    font-size: 0.85rem;\r\n  }\r\n`\r\n\r\nconst SortText = styled.button`\r\n  cursor: pointer;\r\n  font-weight: ${({ active, theme }) => (active ? 500 : 400)};\r\n  margin-right: 0.75rem !important;\r\n  border: none;\r\n  background-color: transparent;\r\n  font-size: 1rem;\r\n  padding: 0px;\r\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text3)};\r\n  outline: none;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  VALUE: 'amountUSD',\r\n  AMOUNT0: 'token0Amount',\r\n  AMOUNT1: 'token1Amount',\r\n  TIMESTAMP: 'timestamp',\r\n}\r\n\r\nconst TXN_TYPE = {\r\n  ALL: 'All',\r\n  SWAP: 'Swaps',\r\n  ADD: 'Adds',\r\n  REMOVE: 'Removes',\r\n}\r\n\r\nconst ITEMS_PER_PAGE = 10\r\n\r\nfunction getTransactionType(event, symbol0, symbol1) {\r\n  const formattedS0 = symbol0?.length > 8 ? symbol0.slice(0, 7) + '...' : symbol0\r\n  const formattedS1 = symbol1?.length > 8 ? symbol1.slice(0, 7) + '...' : symbol1\r\n  switch (event) {\r\n    case TXN_TYPE.ADD:\r\n      return 'Add ' + formattedS0 + ' and ' + formattedS1\r\n    case TXN_TYPE.REMOVE:\r\n      return 'Remove ' + formattedS0 + ' and ' + formattedS1\r\n    case TXN_TYPE.SWAP:\r\n      return 'Swap ' + formattedS0 + ' for ' + formattedS1\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n\r\nfunction TxnList({ transactions, symbol0Override, symbol1Override, color }) {\r\n  // page state\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n\r\n  // sorting\r\n  const [sortDirection, setSortDirection] = useState(true)\r\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.TIMESTAMP)\r\n  const [filteredItems, setFilteredItems] = useState()\r\n  const [txFilter, setTxFilter] = useState(TXN_TYPE.ALL)\r\n\r\n  const [currency] = useCurrentCurrency()\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [transactions])\r\n\r\n  // parse the txns and format for UI\r\n  useEffect(() => {\r\n    if (transactions && transactions.mints && transactions.burns && transactions.swaps) {\r\n      let newTxns = []\r\n      if (transactions.mints.length > 0) {\r\n        transactions.mints.map((mint) => {\r\n          let newTxn = {}\r\n          newTxn.hash = mint.transaction.id\r\n          newTxn.timestamp = mint.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.ADD\r\n          newTxn.token0Amount = mint.amount0\r\n          newTxn.token1Amount = mint.amount1\r\n          newTxn.account = mint.to\r\n          newTxn.token0Symbol = updateNameData(mint.pair).token0.symbol\r\n          newTxn.token1Symbol = updateNameData(mint.pair).token1.symbol\r\n          newTxn.amountUSD = mint.amountUSD\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n      if (transactions.burns.length > 0) {\r\n        transactions.burns.map((burn) => {\r\n          let newTxn = {}\r\n          newTxn.hash = burn.transaction.id\r\n          newTxn.timestamp = burn.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.REMOVE\r\n          newTxn.token0Amount = burn.amount0\r\n          newTxn.token1Amount = burn.amount1\r\n          newTxn.account = burn.sender\r\n          newTxn.token0Symbol = updateNameData(burn.pair).token0.symbol\r\n          newTxn.token1Symbol = updateNameData(burn.pair).token1.symbol\r\n          newTxn.amountUSD = burn.amountUSD\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n      if (transactions.swaps.length > 0) {\r\n        transactions.swaps.map((swap) => {\r\n          const netToken0 = swap.amount0In - swap.amount0Out\r\n          const netToken1 = swap.amount1In - swap.amount1Out\r\n\r\n          let newTxn = {}\r\n\r\n          if (netToken0 < 0) {\r\n            newTxn.token0Symbol = updateNameData(swap.pair).token0.symbol\r\n            newTxn.token1Symbol = updateNameData(swap.pair).token1.symbol\r\n            newTxn.token0Amount = Math.abs(netToken0)\r\n            newTxn.token1Amount = Math.abs(netToken1)\r\n          } else if (netToken1 < 0) {\r\n            newTxn.token0Symbol = updateNameData(swap.pair).token1.symbol\r\n            newTxn.token1Symbol = updateNameData(swap.pair).token0.symbol\r\n            newTxn.token0Amount = Math.abs(netToken1)\r\n            newTxn.token1Amount = Math.abs(netToken0)\r\n          }\r\n\r\n          newTxn.hash = swap.transaction.id\r\n          newTxn.timestamp = swap.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.SWAP\r\n\r\n          newTxn.amountUSD = swap.amountUSD\r\n          newTxn.account = swap.to\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n\r\n      const filtered = newTxns.filter((item) => {\r\n        if (txFilter !== TXN_TYPE.ALL) {\r\n          return item.type === txFilter\r\n        }\r\n        return true\r\n      })\r\n      setFilteredItems(filtered)\r\n      let extraPages = 1\r\n      if (filtered.length % ITEMS_PER_PAGE === 0) {\r\n        extraPages = 0\r\n      }\r\n      if (filtered.length === 0) {\r\n        setMaxPage(1)\r\n      } else {\r\n        setMaxPage(Math.floor(filtered.length / ITEMS_PER_PAGE) + extraPages)\r\n      }\r\n    }\r\n  }, [transactions, txFilter])\r\n\r\n  useEffect(() => {\r\n    setPage(1)\r\n  }, [txFilter])\r\n\r\n  const filteredList =\r\n    filteredItems &&\r\n    filteredItems\r\n      .sort((a, b) => {\r\n        return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\r\n          ? (sortDirection ? -1 : 1) * 1\r\n          : (sortDirection ? -1 : 1) * -1\r\n      })\r\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below780 = useMedia('(max-width: 780px)')\r\n\r\n  const ListItem = ({ item }) => {\r\n    if(item.token0Amount === null) {\r\n      return true\r\n    } else {\r\n\r\n    return (\r\n      <DashGrid style={{ height: '48px' }}>\r\n        <DataText area=\"txn\" fontWeight=\"500\">\r\n          <Link external href={urls.showTransaction(item.hash)}>\r\n            {getTransactionType(item.type, item.token1Symbol, item.token0Symbol)}\r\n          </Link>\r\n        </DataText>\r\n        <DataText area=\"value\">\r\n          {currency === 'ETH' ? 'Ξ ' + formattedNum(item.valueETH) : formattedNum(item.amountUSD, true)}\r\n        </DataText>\r\n        {!below780 && (\r\n          <>\r\n            <DataText area=\"amountOther\">\r\n              {formattedNum(item.token1Amount) + ' '}{' '}\r\n              <FormattedName text={item.token1Symbol} maxCharacters={5} margin={true} />\r\n            </DataText>\r\n            <DataText area=\"amountToken\">\r\n              {formattedNum(item.token0Amount) + ' '}{' '}\r\n              <FormattedName text={item.token0Symbol} maxCharacters={5} margin={true} />\r\n            </DataText>\r\n          </>\r\n        )}\r\n        {!below1080 && (\r\n          <DataText area=\"account\">\r\n            <Link color={color} external href={'https://etherscan.io/address/' + item.account}>\r\n              {item.account && item.account.slice(0, 6) + '...' + item.account.slice(38, 42)}\r\n            </Link>\r\n          </DataText>\r\n        )}\r\n        <DataText area=\"time\">{formatTime(item.timestamp)}</DataText>\r\n      </DashGrid>\r\n    )\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\r\n        {below780 ? (\r\n          <RowBetween area=\"txn\">\r\n            <DropdownSelect options={TXN_TYPE} active={txFilter} setActive={setTxFilter} color={color} />\r\n          </RowBetween>\r\n        ) : (\r\n          <RowFixed area=\"txn\" gap=\"10px\" pl={4}>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.ALL)\r\n              }}\r\n              active={txFilter === TXN_TYPE.ALL}\r\n            >\r\n              All\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.SWAP)\r\n              }}\r\n              active={txFilter === TXN_TYPE.SWAP}\r\n            >\r\n              Swaps\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.ADD)\r\n              }}\r\n              active={txFilter === TXN_TYPE.ADD}\r\n            >\r\n              Adds\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.REMOVE)\r\n              }}\r\n              active={txFilter === TXN_TYPE.REMOVE}\r\n            >\r\n              Removes\r\n            </SortText>\r\n          </RowFixed>\r\n        )}\r\n\r\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\r\n          <ClickableText\r\n            color=\"textDim\"\r\n            area=\"value\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.VALUE)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Total Value {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below780 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"amountToken\"\r\n              color=\"textDim\"\r\n              onClick={() => {\r\n                setSortedColumn(SORT_FIELD.AMOUNT0)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT0 ? true : !sortDirection)\r\n              }}\r\n            >\r\n              {symbol0Override ? symbol0Override + ' Amount' : 'Token Amount'}{' '}\r\n              {sortedColumn === SORT_FIELD.AMOUNT0 ? (sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n        <>\r\n          {!below780 && (\r\n            <Flex alignItems=\"center\">\r\n              <ClickableText\r\n                area=\"amountOther\"\r\n                color=\"textDim\"\r\n                onClick={() => {\r\n                  setSortedColumn(SORT_FIELD.AMOUNT1)\r\n                  setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT1 ? true : !sortDirection)\r\n                }}\r\n              >\r\n                {symbol1Override ? symbol1Override + ' Amount' : 'Token Amount'}{' '}\r\n                {sortedColumn === SORT_FIELD.AMOUNT1 ? (sortDirection ? '↑' : '↓') : ''}\r\n              </ClickableText>\r\n            </Flex>\r\n          )}\r\n          {!below1080 && (\r\n            <Flex alignItems=\"center\">\r\n              <TYPE.body area=\"account\">Account</TYPE.body>\r\n            </Flex>\r\n          )}\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"time\"\r\n              color=\"textDim\"\r\n              onClick={() => {\r\n                setSortedColumn(SORT_FIELD.TIMESTAMP)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.TIMESTAMP ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Time {sortedColumn === SORT_FIELD.TIMESTAMP ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        </>\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>\r\n        {!filteredList ? (\r\n          <LocalLoader />\r\n        ) : filteredList.length === 0 ? (\r\n          <EmptyCard>No recent transactions found.</EmptyCard>\r\n        ) : (\r\n          filteredList.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <ListItem key={index} index={index + 1} item={item} />\r\n                <Divider />\r\n              </div>\r\n            )\r\n          })\r\n        )}\r\n      </List>\r\n      <PageButtons>\r\n        <div\r\n          onClick={(e) => {\r\n            setPage(page === 1 ? page : page - 1)\r\n          }}\r\n        >\r\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div\r\n          onClick={(e) => {\r\n            setPage(page === maxPage ? page : page + 1)\r\n          }}\r\n        >\r\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TxnList\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { createChart } from 'lightweight-charts'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { formattedNum } from '../../utils'\r\nimport styled from 'styled-components'\r\nimport { usePrevious } from 'react-use'\r\nimport { Play } from 'react-feather'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\nimport { IconWrapper } from '..'\r\n\r\ndayjs.extend(utc)\r\n\r\nexport const CHART_TYPES = {\r\n  BAR: 'BAR',\r\n  AREA: 'AREA',\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\n// constant height for charts\r\nconst HEIGHT = 300\r\n\r\nconst TradingViewChart = ({\r\n  type = CHART_TYPES.BAR,\r\n  data,\r\n  base,\r\n  baseChange,\r\n  field,\r\n  title,\r\n  width,\r\n  useWeekly = false,\r\n}) => {\r\n  // reference for DOM element to create with chart\r\n  const ref = useRef()\r\n\r\n  // pointer to the chart object\r\n  const [chartCreated, setChartCreated] = useState(false)\r\n  const dataPrev = usePrevious(data)\r\n\r\n  useEffect(() => {\r\n    if (data !== dataPrev && chartCreated && type === CHART_TYPES.BAR) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id' + type)\r\n      let node = document.getElementById('test-id' + type)\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, data, dataPrev, type])\r\n\r\n  // parese the data and format for tardingview consumption\r\n  const formattedData = data?.map((entry) => {\r\n    return {\r\n      time: dayjs.unix(entry.date).utc().format('YYYY-MM-DD'),\r\n      value: parseFloat(entry[field]),\r\n    }\r\n  })\r\n\r\n  // adjust the scale based on the type of chart\r\n  const topScale = type === CHART_TYPES.AREA ? 0.32 : 0.2\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n  const previousTheme = usePrevious(darkMode)\r\n\r\n  // reset the chart if them switches\r\n  useEffect(() => {\r\n    if (chartCreated && previousTheme !== darkMode) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id' + type)\r\n      let node = document.getElementById('test-id' + type)\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, darkMode, previousTheme, type])\r\n\r\n  // if no chart created yet, create one with options and add to DOM manually\r\n  useEffect(() => {\r\n    if (!chartCreated && formattedData) {\r\n      var chart = createChart(ref.current, {\r\n        width: width,\r\n        height: HEIGHT,\r\n        layout: {\r\n          backgroundColor: 'transparent',\r\n          textColor: textColor,\r\n        },\r\n        rightPriceScale: {\r\n          scaleMargins: {\r\n            top: topScale,\r\n            bottom: 0,\r\n          },\r\n          borderVisible: false,\r\n        },\r\n        timeScale: {\r\n          borderVisible: false,\r\n        },\r\n        grid: {\r\n          horzLines: {\r\n            color: 'rgba(197, 203, 206, 0.5)',\r\n            visible: false,\r\n          },\r\n          vertLines: {\r\n            color: 'rgba(197, 203, 206, 0.5)',\r\n            visible: false,\r\n          },\r\n        },\r\n        crosshair: {\r\n          horzLine: {\r\n            visible: false,\r\n            labelVisible: false,\r\n          },\r\n          vertLine: {\r\n            visible: true,\r\n            style: 0,\r\n            width: 2,\r\n            color: 'rgba(32, 38, 46, 0.1)',\r\n            labelVisible: false,\r\n          },\r\n        },\r\n        localization: {\r\n          priceFormatter: (val) => formattedNum(val, true),\r\n        },\r\n      })\r\n\r\n      var series =\r\n        type === CHART_TYPES.BAR\r\n          ? chart.addHistogramSeries({\r\n              color: '#bebebe',\r\n              priceFormat: {\r\n                type: 'volume',\r\n              },\r\n              scaleMargins: {\r\n                top: 0.32,\r\n                bottom: 0,\r\n              },\r\n              lineColor: '#dddddd',\r\n              lineWidth: 3,\r\n            })\r\n          : chart.addAreaSeries({\r\n              topColor: '#bebebe',\r\n              bottomColor: 'rgba(255, 255, 255, 0)',\r\n              lineColor: '#bebebe',\r\n              lineWidth: 3,\r\n            })\r\n\r\n      series.setData(formattedData)\r\n      var toolTip = document.createElement('div')\r\n      toolTip.setAttribute('id', 'tooltip-id' + type)\r\n      toolTip.className = darkMode ? 'three-line-legend-dark' : 'three-line-legend'\r\n      ref.current.appendChild(toolTip)\r\n      toolTip.style.display = 'block'\r\n      toolTip.style.fontWeight = '500'\r\n      toolTip.style.left = -4 + 'px'\r\n      toolTip.style.top = '-' + 8 + 'px'\r\n      toolTip.style.backgroundColor = 'transparent'\r\n\r\n      // format numbers\r\n      let percentChange = baseChange?.toFixed(2)\r\n      let formattedPercentChange = (percentChange > 0 ? '+' : '') + percentChange + '%'\r\n      let color = percentChange >= 0 ? 'green' : 'red'\r\n\r\n      // get the title of the chart\r\n      function setLastBarText() {\r\n        toolTip.innerHTML =\r\n          `<div style=\"font-size: 16px; margin: 4px 0px; color: ${textColor};\">${title} ${\r\n            type === CHART_TYPES.BAR && !useWeekly ? '(24hr)' : ''\r\n          }</div>` +\r\n          `<div style=\"font-size: 22px; margin: 4px 0px; color:${textColor}\" >` +\r\n          formattedNum(base ?? 0, true) +\r\n          `<span style=\"margin-left: 10px; font-size: 16px; color: ${color};\">${formattedPercentChange}</span>` +\r\n          '</div>'\r\n      }\r\n      setLastBarText()\r\n\r\n      // update the title when hovering on the chart\r\n      chart.subscribeCrosshairMove(function (param) {\r\n        if (\r\n          param === undefined ||\r\n          param.time === undefined ||\r\n          param.point.x < 0 ||\r\n          param.point.x > width ||\r\n          param.point.y < 0 ||\r\n          param.point.y > HEIGHT\r\n        ) {\r\n          setLastBarText()\r\n        } else {\r\n          let dateStr = useWeekly\r\n            ? dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\r\n                .startOf('week')\r\n                .format('MMMM D, YYYY') +\r\n              '-' +\r\n              dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\r\n                .endOf('week')\r\n                .format('MMMM D, YYYY')\r\n            : dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day).format('MMMM D, YYYY')\r\n          var price = param.seriesPrices.get(series)\r\n\r\n          toolTip.innerHTML =\r\n            `<div style=\"font-size: 16px; margin: 4px 0px; color: ${textColor};\">${title}</div>` +\r\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\r\n            formattedNum(price, true) +\r\n            '</div>' +\r\n            '<div>' +\r\n            dateStr +\r\n            '</div>'\r\n        }\r\n      })\r\n\r\n      chart.timeScale().fitContent()\r\n\r\n      setChartCreated(chart)\r\n    }\r\n  }, [\r\n    base,\r\n    baseChange,\r\n    chartCreated,\r\n    darkMode,\r\n    data,\r\n    formattedData,\r\n    textColor,\r\n    title,\r\n    topScale,\r\n    type,\r\n    useWeekly,\r\n    width,\r\n  ])\r\n\r\n  // responsiveness\r\n  useEffect(() => {\r\n    if (width) {\r\n      chartCreated && chartCreated.resize(width, HEIGHT)\r\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\r\n    }\r\n  }, [chartCreated, width])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div ref={ref} id={'test-id' + type} />\r\n      <IconWrapper>\r\n        <Play\r\n          onClick={() => {\r\n            chartCreated && chartCreated.timeScale().fitContent()\r\n          }}\r\n        />\r\n      </IconWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TradingViewChart\r\n","import React from 'react'\r\nimport { Button as RebassButton } from 'rebass/styled-components'\r\nimport styled from 'styled-components'\r\nimport { Plus, ChevronDown, ChevronUp } from 'react-feather'\r\nimport { darken, transparentize } from 'polished'\r\nimport { RowBetween } from '../Row'\r\nimport { StyledIcon } from '..'\r\n\r\nconst Base = styled(RebassButton)`\r\n  padding: 8px 12px;\r\n  font-size: 0.825rem;\r\n  font-weight: 600;\r\n  border-radius: 12px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: 1px solid transparent;\r\n  outline: none;\r\n  border-bottom-right-radius: ${({ open }) => open && '0'};\r\n  border-bottom-left-radius: ${({ open }) => open && '0'};\r\n`\r\n\r\nconst BaseCustom = styled(RebassButton)`\r\n  padding: 16px 12px;\r\n  font-size: 0.825rem;\r\n  font-weight: 400;\r\n  border-radius: 12px;\r\n  cursor: pointer;\r\n  outline: none;\r\n`\r\n\r\nconst Dull = styled(Base)`\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  color: black;\r\n  height: 100%;\r\n  font-weight: 400;\r\n  &:hover,\r\n  :focus {\r\n    background-color: rgba(255, 255, 255, 0.25);\r\n    border-color: rgba(255, 255, 255, 0.25);\r\n  }\r\n  &:focus {\r\n    box-shadow: 0 0 0 1pt rgba(255, 255, 255, 0.25);\r\n  }\r\n  &:active {\r\n    background-color: rgba(255, 255, 255, 0.25);\r\n    border-color: rgba(255, 255, 255, 0.25);\r\n  }\r\n`\r\n\r\nexport default function ButtonStyled({ children, ...rest }) {\r\n  return <Base {...rest}>{children}</Base>\r\n}\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const ButtonLight = styled(Base)`\r\n  background-color: ${({ color, theme }) => (color ? transparentize(0.9, color) : transparentize(0.9, theme.primary1))};\r\n  color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\r\n\r\n  min-width: fit-content;\r\n  border-radius: 12px;\r\n  white-space: nowrap;\r\n\r\n  a {\r\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\r\n  }\r\n\r\n  :hover {\r\n    background-color: ${({ color, theme }) =>\r\n      color ? transparentize(0.8, color) : transparentize(0.8, theme.primary1)};\r\n  }\r\n`\r\n\r\nexport function ButtonDropdown({ disabled = false, children, open, ...rest }) {\r\n  return (\r\n    <ButtonFaded {...rest} disabled={disabled} open={open}>\r\n      <RowBetween>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\r\n        {open ? (\r\n          <StyledIcon>\r\n            <ChevronUp size={24} />\r\n          </StyledIcon>\r\n        ) : (\r\n          <StyledIcon>\r\n            <ChevronDown size={24} />\r\n          </StyledIcon>\r\n        )}\r\n      </RowBetween>\r\n    </ButtonFaded>\r\n  )\r\n}\r\n\r\nexport const ButtonDark = styled(Base)`\r\n  background-color: ${({ color, theme }) => (color ? color : theme.primary1)};\r\n  color: white;\r\n  width: fit-content;\r\n  border-radius: 12px;\r\n  white-space: nowrap;\r\n\r\n  :hover {\r\n    background-color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.primary1))};\r\n  }\r\n`\r\n\r\nexport const ButtonFaded = styled(Base)`\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  color: (255, 255, 255, 0.5);\r\n  white-space: nowrap;\r\n\r\n  :hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\nexport function ButtonPlusDull({ disabled, children, ...rest }) {\r\n  return (\r\n    <Dull {...rest}>\r\n      <ContentWrapper>\r\n        <Plus size={16} />\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\r\n      </ContentWrapper>\r\n    </Dull>\r\n  )\r\n}\r\n\r\nexport function ButtonCustom({ children, bgColor, color, ...rest }) {\r\n  return (\r\n    <BaseCustom bg={bgColor} color={color} {...rest}>\r\n      {children}\r\n    </BaseCustom>\r\n  )\r\n}\r\n\r\nexport const OptionButton = styled.div`\r\n  font-weight: 500;\r\n  width: fit-content;\r\n  white-space: nowrap;\r\n  padding: 6px;\r\n  border-radius: 6px;\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n  background-color: ${({ active, theme }) => active && theme.bg3};\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  :hover {\r\n    cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  }\r\n`\r\n","import React, { useState, useMemo, useEffect, useRef } from 'react'\r\nimport { ResponsiveContainer } from 'recharts'\r\nimport { timeframeOptions } from '../../constants'\r\nimport { useGlobalChartData, useGlobalData } from '../../contexts/GlobalData'\r\nimport { useMedia } from 'react-use'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport TradingViewChart, { CHART_TYPES } from '../TradingviewChart'\r\nimport { RowFixed } from '../Row'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { getTimeframe } from '../../utils'\r\nimport { TYPE } from '../../Theme'\r\n\r\nconst CHART_VIEW = {\r\n  VOLUME: 'Volume',\r\n  LIQUIDITY: 'Liquidity',\r\n}\r\n\r\nconst VOLUME_WINDOW = {\r\n  WEEKLY: 'WEEKLY',\r\n  DAYS: 'DAYS',\r\n}\r\nconst GlobalChart = ({ display }) => {\r\n  // chart options\r\n  const [chartView, setChartView] = useState(display === 'volume' ? CHART_VIEW.VOLUME : CHART_VIEW.LIQUIDITY)\r\n\r\n  // time window and window size for chart\r\n  const timeWindow = timeframeOptions.ALL_TIME\r\n  const [volumeWindow, setVolumeWindow] = useState(VOLUME_WINDOW.DAYS)\r\n\r\n  // global historical data\r\n  const [dailyData, weeklyData] = useGlobalChartData()\r\n  const {\r\n    totalLiquidityUSD,\r\n    oneDayVolumeUSD,\r\n    volumeChangeUSD,\r\n    liquidityChangeUSD,\r\n    oneWeekVolume,\r\n    weeklyVolumeChange,\r\n  } = useGlobalData()\r\n\r\n  // based on window, get starttim\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n\r\n  const chartDataFiltered = useMemo(() => {\r\n    let currentData = volumeWindow === VOLUME_WINDOW.DAYS ? dailyData : weeklyData\r\n    return (\r\n      currentData &&\r\n      Object.keys(currentData)\r\n        ?.map((key) => {\r\n          let item = currentData[key]\r\n          if (item.date > utcStartTime) {\r\n            return item\r\n          } else {\r\n            return\r\n          }\r\n        })\r\n        .filter((item) => {\r\n          return !!item\r\n        })\r\n    )\r\n  }, [dailyData, utcStartTime, volumeWindow, weeklyData])\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  // update the width on a window resize\r\n  const ref = useRef()\r\n  const isClient = typeof window === 'object'\r\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n    function handleResize() {\r\n      setWidth(ref?.current?.container?.clientWidth ?? width)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return chartDataFiltered ? (\r\n    <>\r\n      {below800 && (\r\n        <DropdownSelect options={CHART_VIEW} active={chartView} setActive={setChartView} color={'#295bdb'} />\r\n      )}\r\n\r\n      {chartDataFiltered && chartView === CHART_VIEW.LIQUIDITY && (\r\n        <ResponsiveContainer aspect={60 / 28} ref={ref}>\r\n          <TradingViewChart\r\n            data={dailyData}\r\n            base={totalLiquidityUSD}\r\n            baseChange={liquidityChangeUSD}\r\n            title=\"Liquidity\"\r\n            field=\"totalLiquidityUSD\"\r\n            width={width}\r\n            type={CHART_TYPES.AREA}\r\n          />\r\n        </ResponsiveContainer>\r\n      )}\r\n      {chartDataFiltered && chartView === CHART_VIEW.VOLUME && (\r\n        <ResponsiveContainer aspect={60 / 28}>\r\n          <TradingViewChart\r\n            data={chartDataFiltered}\r\n            base={volumeWindow === VOLUME_WINDOW.WEEKLY ? oneWeekVolume : oneDayVolumeUSD}\r\n            baseChange={volumeWindow === VOLUME_WINDOW.WEEKLY ? weeklyVolumeChange : volumeChangeUSD}\r\n            title={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'Volume (7d)' : 'Volume'}\r\n            field={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'weeklyVolumeUSD' : 'dailyVolumeUSD'}\r\n            width={width}\r\n            type={CHART_TYPES.BAR}\r\n            useWeekly={volumeWindow === VOLUME_WINDOW.WEEKLY}\r\n          />\r\n        </ResponsiveContainer>\r\n      )}\r\n      {display === 'volume' && (\r\n        <RowFixed\r\n          style={{\r\n            bottom: '70px',\r\n            position: 'absolute',\r\n            left: '20px',\r\n            zIndex: 10,\r\n          }}\r\n        >\r\n          <OptionButton\r\n            active={volumeWindow === VOLUME_WINDOW.DAYS}\r\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.DAYS)}\r\n          >\r\n            <TYPE.body>D</TYPE.body>\r\n          </OptionButton>\r\n          <OptionButton\r\n            style={{ marginLeft: '4px' }}\r\n            active={volumeWindow === VOLUME_WINDOW.WEEKLY}\r\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.WEEKLY)}\r\n          >\r\n            <TYPE.body>W</TYPE.body>\r\n          </OptionButton>\r\n        </RowFixed>\r\n      )}\r\n    </>\r\n  ) : (\r\n    ''\r\n  )\r\n}\r\n\r\nexport default GlobalChart\r\n","import React, { useState, useEffect, useMemo, useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Row, { RowFixed } from '../Row'\r\nimport TokenLogo from '../TokenLogo'\r\nimport { Search as SearchIcon, X } from 'react-feather'\r\nimport { BasicLink } from '../Link'\r\n\r\nimport { useAllTokenData, useTokenData } from '../../contexts/TokenData'\r\nimport { useAllPairData, usePairData } from '../../contexts/PairData'\r\nimport DoubleTokenLogo from '../DoubleLogo'\r\nimport { useMedia } from 'react-use'\r\nimport { useAllPairsInDarkHorse, useAllTokensInDarkHorse } from '../../contexts/GlobalData'\r\nimport { OVERVIEW_TOKEN_BLACKLIST, PAIR_BLACKLIST } from '../../constants'\r\n\r\nimport { transparentize } from 'polished'\r\nimport { client } from '../../apollo/client'\r\nimport { PAIR_SEARCH, TOKEN_SEARCH } from '../../apollo/queries'\r\nimport FormattedName from '../FormattedName'\r\nimport { TYPE } from '../../Theme'\r\nimport { updateNameData } from '../../utils/data'\r\n\r\nconst Container = styled.div`\r\n  height: 48px;\r\n  z-index: 30;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 12px 16px;\r\n  border-radius: 12px;\r\n  background: ${({ theme, small, open }) =>\r\n    small ? (open ? transparentize(0.4, theme.bg1) : 'none') : transparentize(0.4, theme.bg6)};\r\n  border-bottom-right-radius: ${({ open }) => (open ? '0px' : '12px')};\r\n  border-bottom-left-radius: ${({ open }) => (open ? '0px' : '12px')};\r\n  z-index: 9999;\r\n  width: 100%;\r\n  min-width: 300px;\r\n  box-sizing: border-box;\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n  box-shadow: ${({ open, small }) =>\r\n    !open && !small\r\n      ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\r\n      : 'none'};\r\n  @media screen and (max-width: 500px) {\r\n    background: ${({ theme }) => transparentize(0.4, theme.bg1)};\r\n    box-shadow: ${({ open }) =>\r\n      !open\r\n        ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\r\n        : 'none'};\r\n  }\r\n`\r\nconst Input = styled.input`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  width: 100%;\r\n  color: ${({ theme }) => theme.text1};\r\n  font-size: ${({ large }) => (large ? '20px' : '14px')};\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.text3};\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    ::placeholder {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst SearchIconLarge = styled(SearchIcon)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 0.5rem;\r\n  position: absolute;\r\n  right: 10px;\r\n  pointer-events: none;\r\n  color: ${({ theme }) => theme.text3};\r\n`\r\n\r\nconst CloseIcon = styled(X)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 0.5rem;\r\n  position: absolute;\r\n  right: 10px;\r\n  color: ${({ theme }) => theme.text3};\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 9999;\r\n  width: 100%;\r\n  top: 50px;\r\n  max-height: 540px;\r\n  overflow: auto;\r\n  left: 0;\r\n  padding-bottom: 20px;\r\n  background: ${({ theme }) => theme.bg6};\r\n  border-bottom-right-radius: 12px;\r\n  border-bottom-left-radius: 12px;\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.04);\r\n  display: ${({ hide }) => hide && 'none'};\r\n`\r\n\r\nconst MenuItem = styled(Row)`\r\n  padding: 1rem;\r\n  font-size: 0.85rem;\r\n  & > * {\r\n    margin-right: 6px;\r\n  }\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.bg2};\r\n  }\r\n`\r\n\r\nconst Heading = styled(Row)`\r\n  padding: 1rem;\r\n  display: ${({ hide = false }) => hide && 'none'};\r\n`\r\n\r\nconst Gray = styled.span`\r\n  color: #888d9b;\r\n`\r\n\r\nconst Blue = styled.span`\r\n  color: #bebebe;\r\n  :hover {\r\n    color: #ffffff;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const Search = ({ small = false }) => {\r\n  let allTokens = useAllTokensInDarkHorse()\r\n  const allTokenData = useAllTokenData()\r\n\r\n  let allPairs = useAllPairsInDarkHorse()\r\n  const allPairData = useAllPairData()\r\n\r\n  const [showMenu, toggleMenu] = useState(false)\r\n  const [value, setValue] = useState('')\r\n  const [, toggleShadow] = useState(false)\r\n  const [, toggleBottomShadow] = useState(false)\r\n\r\n  // fetch new data on tokens and pairs if needed\r\n  useTokenData(value)\r\n  usePairData(value)\r\n\r\n  const below700 = useMedia('(max-width: 700px)')\r\n  const below470 = useMedia('(max-width: 470px)')\r\n  const below410 = useMedia('(max-width: 410px)')\r\n\r\n  useEffect(() => {\r\n    if (value !== '') {\r\n      toggleMenu(true)\r\n    } else {\r\n      toggleMenu(false)\r\n    }\r\n  }, [value])\r\n\r\n  const [searchedTokens, setSearchedTokens] = useState([])\r\n  const [searchedPairs, setSearchedPairs] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        if (value?.length > 0) {\r\n          let tokens = await client.query({\r\n            query: TOKEN_SEARCH,\r\n            variables: {\r\n              value: value ? value.toUpperCase() : '',\r\n              id: value\r\n            }\r\n          })\r\n\r\n          let pairs = await client.query({\r\n            query: PAIR_SEARCH,\r\n            variables: {\r\n              tokens: tokens.data.asSymbol?.map(t => t.id),\r\n              id: value\r\n            }\r\n          })\r\n\r\n          setSearchedPairs(\r\n            updateNameData(pairs.data.as0)\r\n              .concat(updateNameData(pairs.data.as1))\r\n              .concat(updateNameData(pairs.data.asAddress))\r\n          )\r\n          const foundTokens = tokens.data.asSymbol.concat(tokens.data.asAddress).concat(tokens.data.asName)\r\n          setSearchedTokens(foundTokens)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [value])\r\n\r\n  function escapeRegExp(string) {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n  }\r\n\r\n  // add the searched tokens to the list if not found yet\r\n  allTokens = allTokens.concat(\r\n    searchedTokens.filter(searchedToken => {\r\n      let included = false\r\n      updateNameData()\r\n      allTokens.map(token => {\r\n        if (token.id === searchedToken.id) {\r\n          included = true\r\n        }\r\n        return true\r\n      })\r\n      return !included\r\n    })\r\n  )\r\n\r\n  let uniqueTokens = []\r\n  let found = {}\r\n  allTokens &&\r\n    allTokens.map(token => {\r\n      if (!found[token.id]) {\r\n        found[token.id] = true\r\n        uniqueTokens.push(token)\r\n      }\r\n      return true\r\n    })\r\n\r\n  allPairs = allPairs.concat(\r\n    searchedPairs.filter(searchedPair => {\r\n      let included = false\r\n      allPairs.map(pair => {\r\n        if (pair.id === searchedPair.id) {\r\n          included = true\r\n        }\r\n        return true\r\n      })\r\n      return !included\r\n    })\r\n  )\r\n\r\n  let uniquePairs = []\r\n  let pairsFound = {}\r\n  allPairs &&\r\n    allPairs.map(pair => {\r\n      if (!pairsFound[pair.id]) {\r\n        pairsFound[pair.id] = true\r\n        uniquePairs.push(pair)\r\n      }\r\n      return true\r\n    })\r\n\r\n  const filteredTokenList = useMemo(() => {\r\n    return uniqueTokens\r\n      ? uniqueTokens\r\n          .sort((a, b) => {\r\n            if (OVERVIEW_TOKEN_BLACKLIST.includes(a.id)) {\r\n              return 1\r\n            }\r\n            if (OVERVIEW_TOKEN_BLACKLIST.includes(b.id)) {\r\n              return -1\r\n            }\r\n            const tokenA = allTokenData[a.id]\r\n            const tokenB = allTokenData[b.id]\r\n            if (tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\r\n              return tokenA.oneDayVolumeUSD > tokenB.oneDayVolumeUSD ? -1 : 1\r\n            }\r\n            if (tokenA?.oneDayVolumeUSD && !tokenB?.oneDayVolumeUSD) {\r\n              return -1\r\n            }\r\n            if (!tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\r\n              return tokenA?.totalLiquidity > tokenB?.totalLiquidity ? -1 : 1\r\n            }\r\n            return 1\r\n          })\r\n          .filter(token => {\r\n            if (OVERVIEW_TOKEN_BLACKLIST.includes(token.id)) {\r\n              return false\r\n            }\r\n            const regexMatches = Object.keys(token).map(tokenEntryKey => {\r\n              const isAddress = value.slice(0, 2) === '0x'\r\n              if (tokenEntryKey === 'id' && isAddress) {\r\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n              }\r\n              if (tokenEntryKey === 'symbol' && !isAddress) {\r\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n              }\r\n              if (tokenEntryKey === 'name' && !isAddress) {\r\n                return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n              }\r\n              return false\r\n            })\r\n            return regexMatches.some(m => m)\r\n          })\r\n      : []\r\n  }, [allTokenData, uniqueTokens, value])\r\n\r\n  const filteredPairList = useMemo(() => {\r\n    return uniquePairs\r\n      ? uniquePairs\r\n          .sort((a, b) => {\r\n            const pairA = allPairData[a.id]\r\n            const pairB = allPairData[b.id]\r\n            if (pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\r\n              return parseFloat(pairA.trackedReserveETH) > parseFloat(pairB.trackedReserveETH) ? -1 : 1\r\n            }\r\n            if (pairA?.trackedReserveETH && !pairB?.trackedReserveETH) {\r\n              return -1\r\n            }\r\n            if (!pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\r\n              return 1\r\n            }\r\n            return 0\r\n          })\r\n          .filter(pair => {\r\n            if (PAIR_BLACKLIST.includes(pair.id)) {\r\n              return false\r\n            }\r\n            if (value && value.includes(' ')) {\r\n              const pairA = value.split(' ')[0]?.toUpperCase()\r\n              const pairB = value.split(' ')[1]?.toUpperCase()\r\n              return (\r\n                (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\r\n                (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\r\n              )\r\n            }\r\n            if (value && value.includes('-')) {\r\n              const pairA = value.split('-')[0]?.toUpperCase()\r\n              const pairB = value.split('-')[1]?.toUpperCase()\r\n              return (\r\n                (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\r\n                (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\r\n              )\r\n            }\r\n            const regexMatches = Object.keys(pair).map(field => {\r\n              const isAddress = value.slice(0, 2) === '0x'\r\n              if (field === 'id' && isAddress) {\r\n                return pair[field].match(new RegExp(escapeRegExp(value), 'i'))\r\n              }\r\n              if (field === 'token0') {\r\n                return (\r\n                  pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\r\n                  pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\r\n                )\r\n              }\r\n              if (field === 'token1') {\r\n                return (\r\n                  pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\r\n                  pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\r\n                )\r\n              }\r\n              return false\r\n            })\r\n            return regexMatches.some(m => m)\r\n          })\r\n      : []\r\n  }, [allPairData, uniquePairs, value])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(filteredTokenList).length > 2) {\r\n      toggleShadow(true)\r\n    } else {\r\n      toggleShadow(false)\r\n    }\r\n  }, [filteredTokenList])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(filteredPairList).length > 2) {\r\n      toggleBottomShadow(true)\r\n    } else {\r\n      toggleBottomShadow(false)\r\n    }\r\n  }, [filteredPairList])\r\n\r\n  const [tokensShown, setTokensShown] = useState(3)\r\n  const [pairsShown, setPairsShown] = useState(3)\r\n\r\n  function onDismiss() {\r\n    setPairsShown(3)\r\n    setTokensShown(3)\r\n    toggleMenu(false)\r\n    setValue('')\r\n  }\r\n\r\n  // refs to detect clicks outside modal\r\n  const wrapperRef = useRef()\r\n  const menuRef = useRef()\r\n\r\n  const handleClick = e => {\r\n    if (\r\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\r\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\r\n    ) {\r\n      setPairsShown(3)\r\n      setTokensShown(3)\r\n      toggleMenu(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container small={small}>\r\n      <Wrapper open={showMenu} shadow={true} small={small}>\r\n        <Input\r\n          large={!small}\r\n          type={'text'}\r\n          ref={wrapperRef}\r\n          placeholder={\r\n            small\r\n              ? ''\r\n              : below410\r\n              ? 'Search...'\r\n              : below470\r\n              ? 'Search Varen Finance...'\r\n              : below700\r\n              ? 'Search pairs and tokens...'\r\n              : 'Search Varen Finance pairs and tokens...'\r\n          }\r\n          value={value}\r\n          onChange={e => {\r\n            setValue(e.target.value)\r\n          }}\r\n          onFocus={() => {\r\n            if (!showMenu) {\r\n              toggleMenu(true)\r\n            }\r\n          }}\r\n        />\r\n        {!showMenu ? <SearchIconLarge /> : <CloseIcon onClick={() => toggleMenu(false)} />}\r\n      </Wrapper>\r\n      <Menu hide={!showMenu} ref={menuRef}>\r\n        <Heading>\r\n          <Gray>Pairs</Gray>\r\n        </Heading>\r\n        <div>\r\n          {filteredPairList && Object.keys(filteredPairList).length === 0 && (\r\n            <MenuItem>\r\n              <TYPE.body>No results</TYPE.body>\r\n            </MenuItem>\r\n          )}\r\n          {filteredPairList &&\r\n            filteredPairList.slice(0, pairsShown).map(pair => {\r\n              //format incorrect names\r\n              updateNameData(pair)\r\n              return (\r\n                <BasicLink to={'/pair/' + pair.id} key={pair.id} onClick={onDismiss}>\r\n                  <MenuItem>\r\n                    <DoubleTokenLogo a0={pair?.token0?.id} a1={pair?.token1?.id} margin={true} />\r\n                    <TYPE.body style={{ marginLeft: '10px' }}>\r\n                      {pair.token0.symbol + '-' + pair.token1.symbol} Pair\r\n                    </TYPE.body>\r\n                  </MenuItem>\r\n                </BasicLink>\r\n              )\r\n            })}\r\n          <Heading\r\n            hide={!(Object.keys(filteredPairList).length > 3 && Object.keys(filteredPairList).length >= pairsShown)}\r\n          >\r\n            <Blue\r\n              onClick={() => {\r\n                setPairsShown(pairsShown + 5)\r\n              }}\r\n            >\r\n              See more...\r\n            </Blue>\r\n          </Heading>\r\n        </div>\r\n        <Heading>\r\n          <Gray>Tokens</Gray>\r\n        </Heading>\r\n        <div>\r\n          {Object.keys(filteredTokenList).length === 0 && (\r\n            <MenuItem>\r\n              <TYPE.body>No results</TYPE.body>\r\n            </MenuItem>\r\n          )}\r\n          {filteredTokenList.slice(0, tokensShown).map(token => {\r\n            // update displayed names\r\n            updateNameData({ token0: token })\r\n            return (\r\n              <BasicLink to={'/token/' + token.id} key={token.id} onClick={onDismiss}>\r\n                <MenuItem>\r\n                  <RowFixed>\r\n                    <TokenLogo address={token.id} style={{ marginRight: '10px' }} />\r\n                    <FormattedName text={token.name} maxCharacters={20} style={{ marginRight: '6px' }} />\r\n                    (<FormattedName text={token.symbol} maxCharacters={6} />)\r\n                  </RowFixed>\r\n                </MenuItem>\r\n              </BasicLink>\r\n            )\r\n          })}\r\n\r\n          <Heading\r\n            hide={!(Object.keys(filteredTokenList).length > 3 && Object.keys(filteredTokenList).length >= tokensShown)}\r\n          >\r\n            <Blue\r\n              onClick={() => {\r\n                setTokensShown(tokensShown + 5)\r\n              }}\r\n            >\r\n              See more...\r\n            </Blue>\r\n          </Heading>\r\n        </div>\r\n      </Menu>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { RowFixed, RowBetween } from '../Row'\r\nimport { useMedia } from 'react-use'\r\nimport { useGlobalData, useEthPrice, useLinkPrice, useYflPrice, useSYflPrice, useYflusdPrice } from '../../contexts/GlobalData'\r\nimport { formattedNum, localNumber } from '../../utils'\r\n\r\nimport { TYPE } from '../../Theme'\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  position: sticky;\r\n  top: 0;\r\n`\r\n\r\nconst Medium = styled.span`\r\n  font-weight: 500;\r\n`\r\n\r\nexport default function GlobalStats() {\r\n  const below1295 = useMedia('(max-width: 1295px)')\r\n  const below1180 = useMedia('(max-width: 1180px)')\r\n  const below1024 = useMedia('(max-width: 1024px)')\r\n  const below400 = useMedia('(max-width: 400px)')\r\n  const below816 = useMedia('(max-width: 816px)')\r\n\r\n  const { oneDayVolumeUSD, oneDayTxns, pairCount } = useGlobalData()\r\n  const [ethPrice] = useEthPrice()\r\n  const [linkPrice] = useLinkPrice()\r\n  const [yflPrice] = useYflPrice()\r\n  const [syflPrice] = useSYflPrice()\r\n  const [yflusdPrice] = useYflusdPrice()\r\n  const formattedEthPrice = ethPrice ? formattedNum(ethPrice, true) : '-'\r\n  const formattedLinkPrice = linkPrice ? formattedNum(linkPrice, true) : '-'\r\n  const formattedYflPrice = yflPrice ? formattedNum(yflPrice, true) : '-'\r\n  const formattedSYflPrice = syflPrice ? formattedNum(syflPrice, true) : '-'\r\n  const formattedYflUsdPrices = yflusdPrice ? formattedNum(yflusdPrice, true) : '-'\r\n  const oneDayFees = oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD * 0.003, true) : ''\r\n\r\n  return (\r\n    <Header>\r\n      <RowBetween style={{ padding: below816 ? '0.5rem' : '.5rem' }}>\r\n        <RowFixed>\r\n          {!below400 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              ETH Price: <Medium>{formattedEthPrice}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n\r\n          {!below400 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              LINK Price: <Medium>{formattedLinkPrice}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n\r\n          {!below400 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              YFL Price: <Medium>{formattedYflPrice}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n\r\n          {!below400 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              YFLUSD Price: <Medium>{formattedYflUsdPrices}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n\r\n          {!below400 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              sYFL Price: <Medium>{formattedSYflPrice}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n\r\n          {!below1180 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              Transactions (24H): <Medium>{localNumber(oneDayTxns)}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n          {!below1024 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              Pairs: <Medium>{localNumber(pairCount)}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n          {!below1295 && (\r\n            <TYPE.main mr={'1rem'}>\r\n              Fees (24H): <Medium>{oneDayFees}</Medium>&nbsp;\r\n            </TYPE.main>\r\n          )}\r\n        </RowFixed>\r\n      </RowBetween>\r\n    </Header>\r\n  )\r\n}\r\n","import { Box as RebassBox } from 'rebass'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst panelPseudo = css`\r\n  :after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    height: 10px;\r\n  }\r\n\r\n  @media only screen and (min-width: 40em) {\r\n    :after {\r\n      content: unset;\r\n    }\r\n  }\r\n`\r\n\r\nconst Panel = styled(RebassBox)`\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.advancedBG};\r\n  padding: 1.25rem;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  border-radius: 8px;\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.05); /* box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.01), 0px 16px 24px rgba(0, 0, 0, 0.01), 0px 24px 32px rgba(0, 0, 0, 0.01); */\r\n  :hover {\r\n    cursor: ${({ hover }) => hover && 'pointer'};\r\n    border: ${({ hover, theme }) => hover && '1px solid' + theme.bg5};\r\n  }\r\n\r\n  ${(props) => props.background && `background-color: ${props.theme.advancedBG};`}\r\n\r\n  ${(props) => (props.area ? `grid-area: ${props.area};` : null)}\r\n\r\n  ${(props) =>\r\n    props.grouped &&\r\n    css`\r\n      @media only screen and (min-width: 40em) {\r\n        &:first-of-type {\r\n          border-radius: 20px 20px 0 0;\r\n        }\r\n        &:last-of-type {\r\n          border-radius: 0 0 20px 20px;\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.rounded &&\r\n    css`\r\n      border-radius: 8px;\r\n      @media only screen and (min-width: 40em) {\r\n        border-radius: 10px;\r\n      }\r\n    `};\r\n\r\n  ${(props) => !props.last && panelPseudo}\r\n`\r\n\r\nexport default Panel\r\n","import React, { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Box } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { AutoRow, RowBetween } from '../components/Row'\r\nimport { AutoColumn } from '../components/Column'\r\nimport PairList from '../components/PairList'\r\nimport TopTokenList from '../components/TokenList'\r\nimport TxnList from '../components/TxnList'\r\nimport GlobalChart from '../components/GlobalChart'\r\nimport Search from '../components/Search'\r\nimport GlobalStats from '../components/GlobalStats'\r\n\r\nimport { useGlobalData, useGlobalTransactions } from '../contexts/GlobalData'\r\nimport { useAllPairData } from '../contexts/PairData'\r\nimport { useMedia } from 'react-use'\r\nimport Panel from '../components/Panel'\r\nimport { useAllTokenData } from '../contexts/TokenData'\r\nimport { formattedNum, formattedPercent } from '../utils'\r\nimport {TYPE, ThemedBackground} from '../Theme'\r\nimport { CustomLink } from '../components/Link'\r\n\r\nimport { PageWrapper, ContentWrapper } from '../components'\r\n\r\nconst ListOptions = styled(AutoRow)`\r\n  height: 40px;\r\n  width: 100%;\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 1rem;\r\n  }\r\n`\r\n\r\nconst GridRow = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  grid-template-columns: 1fr 1fr;\r\n  column-gap: 6px;\r\n  align-items: start;\r\n  justify-content: space-between;\r\n`\r\n\r\nfunction GlobalPage() {\r\n  // get data for lists and totals\r\n  const allPairs = useAllPairData()\r\n  const allTokens = useAllTokenData()\r\n  const transactions = useGlobalTransactions()\r\n  const { totalLiquidityUSD, oneDayVolumeUSD, volumeChangeUSD, liquidityChangeUSD } = useGlobalData()\r\n\r\n  // breakpoints\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  // scrolling refs\r\n\r\n  useEffect(() => {\r\n    document.querySelector('body').scrollTo({\r\n      behavior: 'smooth',\r\n      top: 0,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ThemedBackground/>\r\n      <ContentWrapper>\r\n        <div>\r\n          <AutoColumn gap=\"24px\" style={{ paddingBottom: below800 ? '0' : '24px' }}>\r\n            <TYPE.largeHeader>{below800 ? 'Protocol Analytics' : 'Varen Finance Protocol Analytics'}</TYPE.largeHeader>\r\n            <Search />\r\n            <GlobalStats />\r\n          </AutoColumn>\r\n          {below800 && ( // mobile card\r\n            <Box mb={20}>\r\n              <Panel>\r\n                <Box>\r\n                  <AutoColumn gap=\"36px\">\r\n                    <AutoColumn gap=\"20px\">\r\n                      <RowBetween>\r\n                        <TYPE.main>Volume (24hrs)</TYPE.main>\r\n                        <div />\r\n                      </RowBetween>\r\n                      <RowBetween align=\"flex-end\">\r\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\r\n                          {formattedNum(oneDayVolumeUSD, true)}\r\n                        </TYPE.main>\r\n                        <TYPE.main fontSize={12}>{formattedPercent(volumeChangeUSD)}</TYPE.main>\r\n                      </RowBetween>\r\n                    </AutoColumn>\r\n                    <AutoColumn gap=\"20px\">\r\n                      <RowBetween>\r\n                        <TYPE.main>Total Liquidity</TYPE.main>\r\n                        <div />\r\n                      </RowBetween>\r\n                      <RowBetween align=\"flex-end\">\r\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\r\n                          {formattedNum(totalLiquidityUSD, true)}\r\n                        </TYPE.main>\r\n                        <TYPE.main fontSize={12}>{formattedPercent(liquidityChangeUSD)}</TYPE.main>\r\n                      </RowBetween>\r\n                    </AutoColumn>\r\n                  </AutoColumn>\r\n                </Box>\r\n              </Panel>\r\n            </Box>\r\n          )}\r\n          {!below800 && (\r\n            <GridRow>\r\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\r\n                <GlobalChart display=\"liquidity\" />\r\n              </Panel>\r\n              <Panel style={{ height: '100%' }}>\r\n                <GlobalChart display=\"volume\" />\r\n              </Panel>\r\n            </GridRow>\r\n          )}\r\n          {below800 && (\r\n            <AutoColumn style={{ marginTop: '6px' }} gap=\"24px\">\r\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\r\n                <GlobalChart display=\"liquidity\" />\r\n              </Panel>\r\n            </AutoColumn>\r\n          )}\r\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\r\n            <RowBetween>\r\n              <TYPE.main fontSize={'1.125rem'}>Top Tokens</TYPE.main>\r\n              <CustomLink to={'/tokens'}>See All</CustomLink>\r\n            </RowBetween>\r\n          </ListOptions>\r\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\r\n            <TopTokenList tokens={allTokens} />\r\n          </Panel>\r\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\r\n            <RowBetween>\r\n              <TYPE.main fontSize={'1rem'}>Top Pairs</TYPE.main>\r\n              <CustomLink to={'/pairs'}>See All</CustomLink>\r\n            </RowBetween>\r\n          </ListOptions>\r\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\r\n            <PairList pairs={allPairs} />\r\n          </Panel>\r\n\r\n          <span>\r\n            <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\r\n              Transactions\r\n            </TYPE.main>\r\n          </span>\r\n          <Panel style={{ margin: '1rem 0' }}>\r\n            <TxnList transactions={transactions} />\r\n          </Panel>\r\n        </div>\r\n      </ContentWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(GlobalPage)\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { createChart, CrosshairMode } from 'lightweight-charts'\r\nimport dayjs from 'dayjs'\r\nimport { formattedNum } from '../../utils'\r\nimport { usePrevious } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Play } from 'react-feather'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst IconWrapper = styled.div`\r\n  position: absolute;\r\n  right: 10px;\r\n  color: ${({ theme }) => theme.text1}\r\n  border-radius: 3px;\r\n  height: 16px;\r\n  width: 16px;\r\n  padding: 0px;\r\n  bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst CandleStickChart = ({\r\n  data,\r\n  width,\r\n  height = 300,\r\n  base,\r\n  margin = true,\r\n  valueFormatter = (val) => formattedNum(val, true),\r\n}) => {\r\n  // reference for DOM element to create with chart\r\n  const ref = useRef()\r\n\r\n  const formattedData = data?.map((entry) => {\r\n    return {\r\n      time: parseFloat(entry.timestamp),\r\n      open: parseFloat(entry.open),\r\n      low: parseFloat(entry.open),\r\n      close: parseFloat(entry.close),\r\n      high: parseFloat(entry.close),\r\n    }\r\n  })\r\n\r\n  if (formattedData && formattedData.length > 0) {\r\n    formattedData.push({\r\n      time: dayjs().unix(),\r\n      open: parseFloat(formattedData[formattedData.length - 1].close),\r\n      close: parseFloat(base),\r\n      low: Math.min(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\r\n      high: Math.max(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\r\n    })\r\n  }\r\n\r\n  // pointer to the chart object\r\n  const [chartCreated, setChartCreated] = useState(false)\r\n  const dataPrev = usePrevious(data)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n  const previousTheme = usePrevious(darkMode)\r\n\r\n  // reset the chart if theme switches\r\n  useEffect(() => {\r\n    if (chartCreated && previousTheme !== darkMode) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id')\r\n      let node = document.getElementById('test-id')\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, darkMode, previousTheme])\r\n\r\n  useEffect(() => {\r\n    if (data !== dataPrev && chartCreated) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id')\r\n      let node = document.getElementById('test-id')\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, data, dataPrev])\r\n\r\n  // if no chart created yet, create one with options and add to DOM manually\r\n  useEffect(() => {\r\n    if (!chartCreated) {\r\n      const chart = createChart(ref.current, {\r\n        width: width,\r\n        height: height,\r\n        layout: {\r\n          backgroundColor: 'transparent',\r\n          textColor: textColor,\r\n        },\r\n        grid: {\r\n          vertLines: {\r\n            color: 'rgba(255, 255, 255, 0.2)',\r\n          },\r\n          horzLines: {\r\n            color: 'rgba(255, 255, 255, 0.2)',\r\n          },\r\n        },\r\n        crosshair: {\r\n          mode: CrosshairMode.Normal,\r\n        },\r\n        rightPriceScale: {\r\n          borderColor: 'rgba(197, 203, 206, 0.8)',\r\n          visible: true,\r\n        },\r\n        timeScale: {\r\n          borderColor: 'rgba(197, 203, 206, 0.8)',\r\n        },\r\n        localization: {\r\n          priceFormatter: (val) => formattedNum(val),\r\n        },\r\n      })\r\n\r\n      var candleSeries = chart.addCandlestickSeries({\r\n        upColor: 'green',\r\n        downColor: 'red',\r\n        borderDownColor: 'red',\r\n        borderUpColor: 'green',\r\n        wickDownColor: 'red',\r\n        wickUpColor: 'green',\r\n      })\r\n\r\n      candleSeries.setData(formattedData)\r\n\r\n      var toolTip = document.createElement('div')\r\n      toolTip.setAttribute('id', 'tooltip-id')\r\n      toolTip.className = 'three-line-legend'\r\n      ref.current.appendChild(toolTip)\r\n      toolTip.style.display = 'block'\r\n      toolTip.style.left = (margin ? 116 : 10) + 'px'\r\n      toolTip.style.top = 50 + 'px'\r\n      toolTip.style.backgroundColor = 'transparent'\r\n\r\n      // get the title of the chart\r\n      function setLastBarText() {\r\n        toolTip.innerHTML = base\r\n          ? `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` + valueFormatter(base) + '</div>'\r\n          : ''\r\n      }\r\n      setLastBarText()\r\n\r\n      // update the title when hovering on the chart\r\n      chart.subscribeCrosshairMove(function (param) {\r\n        if (\r\n          param === undefined ||\r\n          param.time === undefined ||\r\n          param.point.x < 0 ||\r\n          param.point.x > width ||\r\n          param.point.y < 0 ||\r\n          param.point.y > height\r\n        ) {\r\n          setLastBarText()\r\n        } else {\r\n          var price = param.seriesPrices.get(candleSeries).close\r\n          const time = dayjs.unix(param.time).format('MM/DD h:mm A')\r\n          toolTip.innerHTML =\r\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\r\n            valueFormatter(price) +\r\n            `<span style=\"font-size: 12px; margin: 4px 6px; color: ${textColor}\">` +\r\n            time +\r\n            ' UTC' +\r\n            '</span>' +\r\n            '</div>'\r\n        }\r\n      })\r\n\r\n      chart.timeScale().fitContent()\r\n\r\n      setChartCreated(chart)\r\n    }\r\n  }, [chartCreated, formattedData, width, height, valueFormatter, base, margin, textColor])\r\n\r\n  // responsiveness\r\n  useEffect(() => {\r\n    if (width) {\r\n      chartCreated && chartCreated.resize(width, height)\r\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\r\n    }\r\n  }, [chartCreated, height, width])\r\n\r\n  return (\r\n    <div>\r\n      <div ref={ref} id=\"test-id\" />\r\n      <IconWrapper>\r\n        <Play\r\n          onClick={() => {\r\n            chartCreated && chartCreated.timeScale().fitContent()\r\n          }}\r\n        />\r\n      </IconWrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CandleStickChart\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\r\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\r\n\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { darken } from 'polished'\r\nimport { useMedia, usePrevious } from 'react-use'\r\nimport { timeframeOptions } from '../../constants'\r\nimport { useTokenChartData, useTokenPriceData } from '../../contexts/TokenData'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport CandleStickChart from '../CandleChart'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { AutoColumn } from '../Column'\r\nimport { Activity } from 'react-feather'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 100%;\r\n  min-height: 300px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst PriceOption = styled(OptionButton)`\r\n  border-radius: 2px;\r\n`\r\n\r\nconst CHART_VIEW = {\r\n  VOLUME: 'Volume',\r\n  LIQUIDITY: 'Liquidity',\r\n  PRICE: 'Price',\r\n  LINE_PRICE: 'Price (Line)',\r\n}\r\n\r\nconst DATA_FREQUENCY = {\r\n  DAY: 'DAY',\r\n  HOUR: 'HOUR',\r\n  LINE: 'LINE',\r\n}\r\n\r\nconst TokenChart = ({ address, color, base }) => {\r\n  // settings for the window and candle width\r\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.PRICE)\r\n  const [frequency, setFrequency] = useState(DATA_FREQUENCY.HOUR)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  // reset view on new address\r\n  const addressPrev = usePrevious(address)\r\n  useEffect(() => {\r\n    if (address !== addressPrev && addressPrev) {\r\n      setChartFilter(CHART_VIEW.LIQUIDITY)\r\n    }\r\n  }, [address, addressPrev])\r\n\r\n  let chartData = useTokenChartData(address)\r\n\r\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.WEEK)\r\n  const prevWindow = usePrevious(timeWindow)\r\n\r\n  // hourly and daily price data based on the current time window\r\n  const hourlyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 3600)\r\n  const hourlyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 3600)\r\n  const hourlyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 3600)\r\n  const dailyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 86400)\r\n  const dailyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 86400)\r\n  const dailyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 86400)\r\n\r\n  const priceData =\r\n    timeWindow === timeframeOptions.MONTH\r\n      ? // monthly selected\r\n        frequency === DATA_FREQUENCY.DAY\r\n        ? dailyMonth\r\n        : hourlyMonth\r\n      : // weekly selected\r\n      timeWindow === timeframeOptions.WEEK\r\n      ? frequency === DATA_FREQUENCY.DAY\r\n        ? dailyWeek\r\n        : hourlyWeek\r\n      : // all time selected\r\n      frequency === DATA_FREQUENCY.DAY\r\n      ? dailyAll\r\n      : hourlyAll\r\n\r\n  // switch to hourly data when switched to week window\r\n  useEffect(() => {\r\n    if (timeWindow === timeframeOptions.WEEK && prevWindow && prevWindow !== timeframeOptions.WEEK) {\r\n      setFrequency(DATA_FREQUENCY.HOUR)\r\n    }\r\n  }, [prevWindow, timeWindow])\r\n\r\n  // switch to daily data if switche to month or all time view\r\n  useEffect(() => {\r\n    if (timeWindow === timeframeOptions.MONTH && prevWindow && prevWindow !== timeframeOptions.MONTH) {\r\n      setFrequency(DATA_FREQUENCY.DAY)\r\n    }\r\n    if (timeWindow === timeframeOptions.ALL_TIME && prevWindow && prevWindow !== timeframeOptions.ALL_TIME) {\r\n      setFrequency(DATA_FREQUENCY.DAY)\r\n    }\r\n  }, [prevWindow, timeWindow])\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\r\n  const aspect = below1080 ? 60 / 32 : below600 ? 60 / 42 : 60 / 22\r\n\r\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\r\n\r\n  // update the width on a window resize\r\n  const ref = useRef()\r\n  const isClient = typeof window === 'object'\r\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n    function handleResize() {\r\n      setWidth(ref?.current?.container?.clientWidth ?? width)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\r\n        </RowBetween>\r\n      ) : (\r\n        <RowBetween\r\n          mb={\r\n            chartFilter === CHART_VIEW.LIQUIDITY ||\r\n            chartFilter === CHART_VIEW.VOLUME ||\r\n            (chartFilter === CHART_VIEW.PRICE && frequency === DATA_FREQUENCY.LINE)\r\n              ? 40\r\n              : 0\r\n          }\r\n          align=\"flex-start\"\r\n        >\r\n          <AutoColumn gap=\"8px\">\r\n            <RowFixed>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.LIQUIDITY}\r\n                onClick={() => setChartFilter(CHART_VIEW.LIQUIDITY)}\r\n                style={{ marginRight: '6px' }}\r\n              >\r\n                Liquidity\r\n              </OptionButton>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.VOLUME}\r\n                onClick={() => setChartFilter(CHART_VIEW.VOLUME)}\r\n                style={{ marginRight: '6px' }}\r\n              >\r\n                Volume\r\n              </OptionButton>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.PRICE}\r\n                onClick={() => {\r\n                  setChartFilter(CHART_VIEW.PRICE)\r\n                }}\r\n              >\r\n                Price\r\n              </OptionButton>\r\n            </RowFixed>\r\n            {chartFilter === CHART_VIEW.PRICE && (\r\n              <AutoRow gap=\"4px\">\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.DAY}\r\n                  onClick={() => {\r\n                    setTimeWindow(timeframeOptions.MONTH)\r\n                    setFrequency(DATA_FREQUENCY.DAY)\r\n                  }}\r\n                >\r\n                  D\r\n                </PriceOption>\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.HOUR}\r\n                  onClick={() => setFrequency(DATA_FREQUENCY.HOUR)}\r\n                >\r\n                  H\r\n                </PriceOption>\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.LINE}\r\n                  onClick={() => setFrequency(DATA_FREQUENCY.LINE)}\r\n                >\r\n                  <Activity size={14} />\r\n                </PriceOption>\r\n              </AutoRow>\r\n            )}\r\n          </AutoColumn>\r\n          <AutoRow justify=\"flex-end\" gap=\"6px\" align=\"flex-start\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </RowBetween>\r\n      )}\r\n      {chartFilter === CHART_VIEW.LIQUIDITY && chartData && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={16}\r\n              minTickGap={120}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Area\r\n              key={'other'}\r\n              dataKey={'totalLiquidityUSD'}\r\n              stackId=\"2\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n              type=\"monotone\"\r\n              name={'Liquidity'}\r\n              yAxisId={0}\r\n              stroke={darken(0.12, color)}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n      {chartFilter === CHART_VIEW.PRICE &&\r\n        (frequency === DATA_FREQUENCY.LINE ? (\r\n          <ResponsiveContainer aspect={below1080 ? 60 / 32 : 60 / 16}>\r\n            <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n              <defs>\r\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                  <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n                </linearGradient>\r\n              </defs>\r\n              <XAxis\r\n                tickLine={false}\r\n                axisLine={false}\r\n                interval=\"preserveEnd\"\r\n                tickMargin={16}\r\n                minTickGap={120}\r\n                tickFormatter={(tick) => toNiceDate(tick)}\r\n                dataKey=\"date\"\r\n                tick={{ fill: textColor }}\r\n                type={'number'}\r\n                domain={domain}\r\n              />\r\n              <YAxis\r\n                type=\"number\"\r\n                orientation=\"right\"\r\n                tickFormatter={(tick) => '$' + toK(tick)}\r\n                axisLine={false}\r\n                tickLine={false}\r\n                interval=\"preserveEnd\"\r\n                minTickGap={80}\r\n                yAxisId={0}\r\n                tick={{ fill: textColor }}\r\n              />\r\n              <Tooltip\r\n                cursor={true}\r\n                formatter={(val) => formattedNum(val, true)}\r\n                labelFormatter={(label) => toNiceDateYear(label)}\r\n                labelStyle={{ paddingTop: 4 }}\r\n                contentStyle={{\r\n                  padding: '10px 14px',\r\n                  borderRadius: 10,\r\n                  borderColor: color,\r\n                  color: 'black',\r\n                }}\r\n                wrapperStyle={{ top: -70, left: -10 }}\r\n              />\r\n              <Area\r\n                key={'other'}\r\n                dataKey={'priceUSD'}\r\n                stackId=\"2\"\r\n                strokeWidth={2}\r\n                dot={false}\r\n                type=\"monotone\"\r\n                name={'Price'}\r\n                yAxisId={0}\r\n                stroke={darken(0.12, color)}\r\n                fill=\"url(#colorUv)\"\r\n              />\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        ) : priceData ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart data={priceData} width={width} base={base} />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.VOLUME && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <BarChart margin={{ top: 0, right: 10, bottom: 6, left: 10 }} barCategoryGap={1} data={chartData}>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              tickMargin={14}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              axisLine={false}\r\n              tickMargin={16}\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              tickLine={false}\r\n              orientation=\"right\"\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={{ fill: color, opacity: 0.1 }}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Bar\r\n              type=\"monotone\"\r\n              name={'Volume'}\r\n              dataKey={'dailyVolumeUSD'}\r\n              fill={color}\r\n              opacity={'0.4'}\r\n              yAxisId={0}\r\n              stroke={color}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default TokenChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useCopyClipboard } from '../../hooks'\r\nimport { CheckCircle, Copy } from 'react-feather'\r\nimport { StyledIcon } from '..'\r\n\r\nconst CopyIcon = styled.div`\r\n  color: #aeaeae;\r\n  flex-shrink: 0;\r\n  margin-right: 1rem;\r\n  margin-left: 0.5rem;\r\n  text-decoration: none;\r\n  :hover,\r\n  :active,\r\n  :focus {\r\n    text-decoration: none;\r\n    opacity: 0.8;\r\n    cursor: pointer;\r\n  }\r\n`\r\nconst TransactionStatusText = styled.span`\r\n  margin-left: 0.25rem;\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  color: black;\r\n`\r\n\r\nexport default function CopyHelper({ toCopy }) {\r\n  const [isCopied, setCopied] = useCopyClipboard()\r\n\r\n  return (\r\n    <CopyIcon onClick={() => setCopied(toCopy)}>\r\n      {isCopied ? (\r\n        <TransactionStatusText>\r\n          <StyledIcon>\r\n            <CheckCircle size={'14'} />\r\n          </StyledIcon>\r\n        </TransactionStatusText>\r\n      ) : (\r\n        <TransactionStatusText>\r\n          <StyledIcon>\r\n            <Copy size={'14'} />\r\n          </StyledIcon>\r\n        </TransactionStatusText>\r\n      )}\r\n    </CopyIcon>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport 'feather-icons'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'rebass'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport { ButtonDark } from '../ButtonStyled'\r\nimport { AutoColumn } from '../Column'\r\nimport { Hover } from '..'\r\nimport Link from '../Link'\r\nimport { useMedia } from 'react-use'\r\n\r\nconst WarningWrapper = styled.div`\r\n  border-radius: 20px;\r\n  border: 1px solid #f82d3a;\r\n  background: rgba(248, 45, 58, 0.05);\r\n  padding: 1rem;\r\n  color: #f82d3a;\r\n  display: ${({ show }) => !show && 'none'};\r\n  margin: 0 2rem 2rem 2rem;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 80% !important;\r\n    margin-left: 5%;\r\n  }\r\n`\r\n\r\nconst StyledWarningIcon = styled(AlertTriangle)`\r\n  min-height: 20px;\r\n  min-width: 20px;\r\n  stroke: red;\r\n`\r\n\r\nexport default function Warning({ type, show, setShow, address }) {\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  const textContent = below800 ? (\r\n    <div>\r\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\r\n        Anyone can create and name any ERC20 token on Ethereum, including creating fake versions of existing tokens and\r\n        tokens that claim to represent projects that do not have a token.\r\n      </Text>\r\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\r\n        Similar to Etherscan, this site automatically tracks analytics for all ERC20 tokens independent of token\r\n        integrity. Please do your own research before interacting with any ERC20 token.\r\n      </Text>\r\n    </div>\r\n  ) : (\r\n    <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\r\n      Anyone can create and name any ERC20 token on Ethereum, including creating fake versions of existing tokens and\r\n      tokens that claim to represent projects that do not have a token. Similar to Etherscan, this site automatically\r\n      tracks analytics for all ERC20 tokens independent of token integrity. Please do your own research before\r\n      interacting with any ERC20 token.\r\n    </Text>\r\n  )\r\n\r\n  return (\r\n    <WarningWrapper show={show}>\r\n      <AutoColumn gap=\"4px\">\r\n        <RowFixed>\r\n          <StyledWarningIcon />\r\n          <Text fontWeight={600} lineHeight={'145.23%'} ml={'10px'}>\r\n            Token Safety Alert\r\n          </Text>\r\n        </RowFixed>\r\n        {textContent}\r\n        {below800 ? (\r\n          <div>\r\n            <Hover style={{ marginTop: '10px' }}>\r\n              <Link\r\n                fontWeight={500}\r\n                lineHeight={'145.23%'}\r\n                color={'#2172E5'}\r\n                href={'https://etherscan.io/address/' + address}\r\n                target=\"_blank\"\r\n              >\r\n                View {type === 'token' ? 'token' : 'pair'} contract on Etherscan\r\n              </Link>\r\n            </Hover>\r\n            <RowBetween style={{ marginTop: '20px' }}>\r\n              <div />\r\n              <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\r\n                I understand\r\n              </ButtonDark>\r\n            </RowBetween>\r\n          </div>\r\n        ) : (\r\n          <RowBetween style={{ marginTop: '10px' }}>\r\n            <Hover>\r\n              <Link\r\n                fontWeight={500}\r\n                lineHeight={'145.23%'}\r\n                color={'#2172E5'}\r\n                href={'https://etherscan.io/address/' + address}\r\n                target=\"_blank\"\r\n              >\r\n                View {type === 'token' ? 'token' : 'pair'} contract on Etherscan\r\n              </Link>\r\n            </Hover>\r\n            <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\r\n              I understand\r\n            </ButtonDark>\r\n          </RowBetween>\r\n        )}\r\n      </AutoColumn>\r\n    </WarningWrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport 'feather-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\nimport Link from '../components/Link'\r\nimport Panel from '../components/Panel'\r\nimport TokenLogo from '../components/TokenLogo'\r\nimport PairList from '../components/PairList'\r\nimport Loader from '../components/LocalLoader'\r\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\r\nimport Column, { AutoColumn } from '../components/Column'\r\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\r\nimport TxnList from '../components/TxnList'\r\nimport TokenChart from '../components/TokenChart'\r\nimport { BasicLink } from '../components/Link'\r\nimport Search from '../components/Search'\r\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink, localNumber } from '../utils'\r\nimport { useTokenData, useTokenTransactions, useTokenPairs } from '../contexts/TokenData'\r\nimport { TYPE, ThemedBackground } from '../Theme'\r\nimport { useColor } from '../hooks'\r\nimport CopyHelper from '../components/Copy'\r\nimport { useMedia } from 'react-use'\r\nimport { useDataForList } from '../contexts/PairData'\r\nimport { useEffect } from 'react'\r\nimport Warning from '../components/Warning'\r\nimport { usePathDismissed, useSavedTokens } from '../contexts/LocalStorage'\r\nimport { Hover, PageWrapper, ContentWrapper, StyledIcon } from '../components'\r\nimport { PlusCircle, Bookmark } from 'react-feather'\r\nimport FormattedName from '../components/FormattedName'\r\nimport { useListedTokens } from '../contexts/Application'\r\n\r\nconst DashboardWrapper = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nconst PanelWrapper = styled.div`\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: max-content;\r\n  gap: 6px;\r\n  display: inline-grid;\r\n  width: 100%;\r\n  align-items: start;\r\n  @media screen and (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    align-items: stretch;\r\n    > * {\r\n      grid-column: 1 / 4;\r\n    }\r\n\r\n    > * {\r\n      &:first-child {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst TokenDetailsLayout = styled.div`\r\n  display: inline-grid;\r\n  width: 100%;\r\n  grid-template-columns: auto auto auto 1fr;\r\n  column-gap: 30px;\r\n  align-items: start;\r\n\r\n  &:last-child {\r\n    align-items: center;\r\n    justify-items: end;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    align-items: stretch;\r\n    > * {\r\n      grid-column: 1 / 4;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    &:last-child {\r\n      align-items: start;\r\n      justify-items: start;\r\n    }\r\n  }\r\n`\r\n\r\nconst WarningGrouping = styled.div`\r\n  opacity: ${({ disabled }) => disabled && '0.4'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n`\r\n\r\nfunction TokenPage({ address, history }) {\r\n  const {\r\n    name,\r\n    symbol,\r\n    priceUSD,\r\n    oneDayVolumeUSD,\r\n    totalLiquidityUSD,\r\n    volumeChangeUSD,\r\n    oneDayVolumeUT,\r\n    volumeChangeUT,\r\n    priceChangeUSD,\r\n    liquidityChangeUSD,\r\n    oneDayTxns,\r\n    txnChange\r\n  } = useTokenData(address)\r\n\r\n  useEffect(() => {\r\n    document.querySelector('body').scrollTo(0, 0)\r\n  }, [])\r\n\r\n  // detect color from token\r\n  const backgroundColor = useColor()\r\n\r\n  const allPairs = useTokenPairs(address)\r\n\r\n  // pairs to show in pair list\r\n  const fetchedPairsList = useDataForList(allPairs)\r\n\r\n  // all transactions with this token\r\n  const transactions = useTokenTransactions(address)\r\n\r\n  // price\r\n  const price = priceUSD ? formattedNum(priceUSD, true) : ''\r\n  const priceChange = priceChangeUSD ? formattedPercent(priceChangeUSD) : ''\r\n\r\n  // volume\r\n  const volume =\r\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\r\n      ? formattedNum(oneDayVolumeUSD === 0 ? oneDayVolumeUT : oneDayVolumeUSD, true)\r\n      : oneDayVolumeUSD === 0\r\n      ? '$0'\r\n      : '-'\r\n\r\n  // mark if using untracked volume\r\n  const [usingUtVolume, setUsingUtVolume] = useState(false)\r\n  useEffect(() => {\r\n    setUsingUtVolume(oneDayVolumeUSD === 0 ? true : false)\r\n  }, [oneDayVolumeUSD])\r\n\r\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUT)\r\n\r\n  // liquidity\r\n  const liquidity = totalLiquidityUSD ? formattedNum(totalLiquidityUSD, true) : totalLiquidityUSD === 0 ? '$0' : '-'\r\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\r\n\r\n  // transactions\r\n  const txnChangeFormatted = formattedPercent(txnChange)\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below800 = useMedia('(max-width: 800px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n  const below500 = useMedia('(max-width: 500px)')\r\n\r\n  // format for long symbol\r\n  const LENGTH = below1080 ? 10 : 16\r\n  const formattedSymbol = symbol?.length > LENGTH ? symbol.slice(0, LENGTH) + '...' : symbol\r\n\r\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\r\n  const [savedTokens, addToken] = useSavedTokens()\r\n  const listedTokens = useListedTokens()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      behavior: 'smooth',\r\n      top: 0\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ThemedBackground />\r\n\r\n      <Warning\r\n        type={'token'}\r\n        show={!dismissed && listedTokens && !listedTokens.includes(address)}\r\n        setShow={markAsDismissed}\r\n        address={address}\r\n      />\r\n      <ContentWrapper>\r\n        <RowBetween style={{ flexWrap: 'wrap', alingItems: 'start' }}>\r\n          <AutoRow align=\"flex-end\" style={{ width: 'fit-content' }}>\r\n            <TYPE.body>\r\n              <BasicLink to=\"/tokens\">{'Tokens '}</BasicLink>→ {symbol}\r\n              {'  '}\r\n            </TYPE.body>\r\n            <Link\r\n              style={{ width: 'fit-content' }}\r\n              color={backgroundColor}\r\n              external\r\n              href={'https://etherscan.io/address/' + address}\r\n            >\r\n              <Text style={{ marginLeft: '.15rem' }} fontSize={'14px'} fontWeight={400}>\r\n                ({address.slice(0, 8) + '...' + address.slice(36, 42)})\r\n              </Text>\r\n            </Link>\r\n          </AutoRow>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n\r\n        <WarningGrouping disabled={!dismissed && listedTokens && !listedTokens.includes(address)}>\r\n          <DashboardWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\r\n            <RowBetween\r\n              style={{\r\n                flexWrap: 'wrap',\r\n                marginBottom: '2rem',\r\n                alignItems: 'flex-start'\r\n              }}\r\n            >\r\n              <RowFixed style={{ flexWrap: 'wrap' }}>\r\n                <RowFixed style={{ alignItems: 'baseline' }}>\r\n                  <TokenLogo address={address} size=\"32px\" style={{ alignSelf: 'center' }} />\r\n                  <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} fontWeight={500} style={{ margin: '0 1rem' }}>\r\n                    <RowFixed gap=\"6px\">\r\n                      <FormattedName text={name ? name + ' ' : ''} maxCharacters={16} style={{ marginRight: '6px' }} />{' '}\r\n                      {formattedSymbol ? `(${formattedSymbol})` : ''}\r\n                    </RowFixed>\r\n                  </TYPE.main>{' '}\r\n                  {!below1080 && (\r\n                    <>\r\n                      <TYPE.main fontSize={'1.5rem'} fontWeight={500} style={{ marginRight: '1rem' }}>\r\n                        {price}\r\n                      </TYPE.main>\r\n                      {priceChange}\r\n                    </>\r\n                  )}\r\n                </RowFixed>\r\n              </RowFixed>\r\n              <span>\r\n                <RowFixed ml={below500 ? '0' : '2.5rem'} mt={below500 ? '1rem' : '0'}>\r\n                  {!!!savedTokens[address] && !below800 ? (\r\n                    <Hover onClick={() => addToken(address, symbol)}>\r\n                      <StyledIcon>\r\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  ) : !below1080 ? (\r\n                    <StyledIcon>\r\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\r\n                    </StyledIcon>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  <Link href={getPoolLink(address)} target=\"_blank\">\r\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\r\n                  </Link>\r\n                  <Link href={getSwapLink(address)} target=\"_blank\">\r\n                    <ButtonDark ml={'.5rem'} mr={below1080 && '.5rem'} color=\"#3949ab\">\r\n                      Trade\r\n                    </ButtonDark>\r\n                  </Link>\r\n                </RowFixed>\r\n              </span>\r\n            </RowBetween>\r\n\r\n            <>\r\n              <PanelWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\r\n                {below1080 && price && (\r\n                  <Panel>\r\n                    <AutoColumn gap=\"20px\">\r\n                      <RowBetween>\r\n                        <TYPE.main>Price</TYPE.main>\r\n                        <div />\r\n                      </RowBetween>\r\n                      <RowBetween align=\"flex-end\">\r\n                        {' '}\r\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                          {price}\r\n                        </TYPE.main>\r\n                        <TYPE.main>{priceChange}</TYPE.main>\r\n                      </RowBetween>\r\n                    </AutoColumn>\r\n                  </Panel>\r\n                )}\r\n                <Panel>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Total Liquidity</TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {liquidity}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{liquidityChange}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n                <Panel>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Volume (24hrs) {usingUtVolume && '(Untracked)'}</TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {volume}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{volumeChange}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n\r\n                <Panel>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Transactions (24hrs)</TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {oneDayTxns ? localNumber(oneDayTxns) : oneDayTxns === 0 ? 0 : '-'}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{txnChangeFormatted}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n                <Panel\r\n                  style={{\r\n                    gridColumn: below1080 ? '1' : '2/4',\r\n                    gridRow: below1080 ? '' : '1/4'\r\n                  }}\r\n                >\r\n                  <TokenChart address={address} color={backgroundColor} base={priceUSD} />\r\n                </Panel>\r\n              </PanelWrapper>\r\n            </>\r\n\r\n            <span>\r\n              <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n                Top Pairs\r\n              </TYPE.main>\r\n            </span>\r\n            <Panel\r\n              rounded\r\n              style={{\r\n                marginTop: '1.5rem',\r\n                padding: '1.125rem 0 '\r\n              }}\r\n            >\r\n              {address && fetchedPairsList ? (\r\n                <PairList color={backgroundColor} address={address} pairs={fetchedPairsList} />\r\n              ) : (\r\n                <Loader />\r\n              )}\r\n            </Panel>\r\n            <RowBetween mt={40} mb={'1rem'}>\r\n              <TYPE.main fontSize={'1.125rem'}>Transactions</TYPE.main> <div />\r\n            </RowBetween>\r\n            <Panel rounded>\r\n              {transactions ? <TxnList color={backgroundColor} transactions={transactions} /> : <Loader />}\r\n            </Panel>\r\n            <>\r\n              <RowBetween style={{ marginTop: '3rem' }}>\r\n                <TYPE.main fontSize={'1.125rem'}>Token Information</TYPE.main>{' '}\r\n              </RowBetween>\r\n              <Panel\r\n                rounded\r\n                style={{\r\n                  marginTop: '1.5rem'\r\n                }}\r\n                p={20}\r\n              >\r\n                <TokenDetailsLayout>\r\n                  <Column>\r\n                    <TYPE.main>Symbol</TYPE.main>\r\n                    <Text style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\r\n                      <FormattedName text={symbol} maxCharacters={12} />\r\n                    </Text>\r\n                  </Column>\r\n                  <Column>\r\n                    <TYPE.main>Name</TYPE.main>\r\n                    <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\r\n                      <FormattedName text={name} maxCharacters={16} />\r\n                    </TYPE.main>\r\n                  </Column>\r\n                  <Column>\r\n                    <TYPE.main>Address</TYPE.main>\r\n                    <AutoRow align=\"flex-end\">\r\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\r\n                        {address.slice(0, 8) + '...' + address.slice(36, 42)}\r\n                      </TYPE.main>\r\n                      <CopyHelper toCopy={address} />\r\n                    </AutoRow>\r\n                  </Column>\r\n                  <ButtonLight color={backgroundColor}>\r\n                    <Link color={backgroundColor} external href={'https://etherscan.io/address/' + address}>\r\n                      View on Etherscan ↗\r\n                    </Link>\r\n                  </ButtonLight>\r\n                </TokenDetailsLayout>\r\n              </Panel>\r\n            </>\r\n          </DashboardWrapper>\r\n        </WarningGrouping>\r\n      </ContentWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(TokenPage)\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\r\nimport { RowBetween, AutoRow } from '../Row'\r\n\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { darken } from 'polished'\r\nimport { usePairChartData, useHourlyRateData, usePairData } from '../../contexts/PairData'\r\nimport { timeframeOptions } from '../../constants'\r\nimport { useMedia } from 'react-use'\r\nimport { EmptyCard } from '..'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport CandleStickChart from '../CandleChart'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 100%;\r\n  max-height: 340px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst OptionsRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst CHART_VIEW = {\r\n  VOLUME: 'Volume',\r\n  LIQUIDITY: 'Liquidity',\r\n  RATE0: 'Rate 0',\r\n  RATE1: 'Rate 1',\r\n}\r\n\r\nconst PairChart = ({ address, color, base0, base1 }) => {\r\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.LIQUIDITY)\r\n\r\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.MONTH)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  // update the width on a window resize\r\n  const ref = useRef()\r\n  const isClient = typeof window === 'object'\r\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\r\n  const [height, setHeight] = useState(ref?.current?.container?.clientHeight)\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n    function handleResize() {\r\n      setWidth(ref?.current?.container?.clientWidth ?? width)\r\n      setHeight(ref?.current?.container?.clientHeight ?? height)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [height, isClient, width]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  // get data for pair, and rates\r\n  const pairData = usePairData(address)\r\n  let chartData = usePairChartData(address)\r\n  const hourlyData = useHourlyRateData(address, timeWindow)\r\n  const hourlyRate0 = hourlyData && hourlyData[0]\r\n  const hourlyRate1 = hourlyData && hourlyData[1]\r\n\r\n  // formatted symbols for overflow\r\n  const formattedSymbol0 =\r\n    pairData?.token0?.symbol.length > 6 ? pairData?.token0?.symbol.slice(0, 5) + '...' : pairData?.token0?.symbol\r\n  const formattedSymbol1 =\r\n    pairData?.token1?.symbol.length > 6 ? pairData?.token1?.symbol.slice(0, 5) + '...' : pairData?.token1?.symbol\r\n\r\n  const below1600 = useMedia('(max-width: 1600px)')\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\r\n\r\n  if (chartData && chartData.length === 0) {\r\n    return (\r\n      <ChartWrapper>\r\n        <EmptyCard height=\"300px\">No historical data yet.</EmptyCard>{' '}\r\n      </ChartWrapper>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Used to format values on chart on scroll\r\n   * Needs to be raw html for chart API to parse styles\r\n   * @param {*} val\r\n   */\r\n  function valueFormatter(val) {\r\n    if (chartFilter === CHART_VIEW.RATE0) {\r\n      return (\r\n        formattedNum(val) +\r\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol1}/${formattedSymbol0}<span>`\r\n      )\r\n    }\r\n    if (chartFilter === CHART_VIEW.RATE1) {\r\n      return (\r\n        formattedNum(val) +\r\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol0}/${formattedSymbol1}<span>`\r\n      )\r\n    }\r\n  }\r\n\r\n  const aspect = below1080 ? 60 / 20 : below1600 ? 60 / 28 : 60 / 22\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\r\n        </RowBetween>\r\n      ) : (\r\n        <OptionsRow>\r\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.LIQUIDITY}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.ALL_TIME)\r\n                setChartFilter(CHART_VIEW.LIQUIDITY)\r\n              }}\r\n            >\r\n              Liquidity\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.VOLUME}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.ALL_TIME)\r\n                setChartFilter(CHART_VIEW.VOLUME)\r\n              }}\r\n            >\r\n              Volume\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.RATE0}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.WEEK)\r\n                setChartFilter(CHART_VIEW.RATE0)\r\n              }}\r\n            >\r\n              {pairData.token0 ? formattedSymbol1 + '/' + formattedSymbol0 : '-'}\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.RATE1}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.WEEK)\r\n                setChartFilter(CHART_VIEW.RATE1)\r\n              }}\r\n            >\r\n              {pairData.token0 ? formattedSymbol0 + '/' + formattedSymbol1 : '-'}\r\n            </OptionButton>\r\n          </AutoRow>\r\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </OptionsRow>\r\n      )}\r\n      {chartFilter === CHART_VIEW.LIQUIDITY && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={14}\r\n              minTickGap={80}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tickMargin={16}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Area\r\n              strokeWidth={2}\r\n              dot={false}\r\n              type=\"monotone\"\r\n              name={' (USD)'}\r\n              dataKey={'reserveUSD'}\r\n              yAxisId={0}\r\n              stroke={darken(0.12, color)}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n\r\n      {chartFilter === CHART_VIEW.RATE1 &&\r\n        (hourlyRate1 ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart\r\n              data={hourlyRate1}\r\n              base={base0}\r\n              margin={false}\r\n              width={width}\r\n              valueFormatter={valueFormatter}\r\n            />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.RATE0 &&\r\n        (hourlyRate0 ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart\r\n              data={hourlyRate0}\r\n              base={base1}\r\n              margin={false}\r\n              width={width}\r\n              valueFormatter={valueFormatter}\r\n            />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.VOLUME && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <BarChart\r\n            margin={{ top: 0, right: 0, bottom: 6, left: below1080 ? 0 : 10 }}\r\n            barCategoryGap={1}\r\n            data={chartData}\r\n          >\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              tickMargin={14}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              axisLine={false}\r\n              tickMargin={16}\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              orientation=\"right\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={{ fill: color, opacity: 0.1 }}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Bar\r\n              type=\"monotone\"\r\n              name={'Volume'}\r\n              dataKey={'dailyVolumeUSD'}\r\n              fill={color}\r\n              opacity={'0.4'}\r\n              yAxisId={0}\r\n              stroke={color}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default PairChart\r\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport 'feather-icons'\nimport styled from 'styled-components'\nimport Panel from '../components/Panel'\nimport { PageWrapper, ContentWrapperLarge, StyledIcon } from '../components/index'\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\nimport Column, { AutoColumn } from '../components/Column'\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\nimport PairChart from '../components/PairChart'\nimport Link from '../components/Link'\nimport TxnList from '../components/TxnList'\nimport Loader from '../components/LocalLoader'\nimport { BasicLink } from '../components/Link'\nimport Search from '../components/Search'\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink } from '../utils'\nimport { usePairData, usePairTransactions } from '../contexts/PairData'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport CopyHelper from '../components/Copy'\nimport { useMedia } from 'react-use'\nimport DoubleTokenLogo from '../components/DoubleLogo'\nimport TokenLogo from '../components/TokenLogo'\nimport { Hover } from '../components'\nimport { useEthPrice } from '../contexts/GlobalData'\nimport Warning from '../components/Warning'\nimport { usePathDismissed, useSavedPairs } from '../contexts/LocalStorage'\n\nimport { Bookmark, PlusCircle } from 'react-feather'\nimport FormattedName from '../components/FormattedName'\nimport { useListedTokens } from '../contexts/Application'\nimport { useColor } from '../hooks'\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n    }\n\n    > * {\n      &:first-child {\n        width: 100%;\n      }\n    }\n  }\n`\n\nconst TokenDetailsLayout = styled.div`\n  display: inline-grid;\n  width: 100%;\n  grid-template-columns: auto auto auto auto 1fr;\n  column-gap: 60px;\n  align-items: start;\n\n  &:last-child {\n    align-items: center;\n    justify-items: end;\n  }\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n      margin-bottom: 1rem;\n    }\n\n    &:last-child {\n      align-items: start;\n      justify-items: start;\n    }\n  }\n`\n\nconst FixedPanel = styled(Panel)`\n  width: fit-content;\n  padding: 8px 12px;\n  border-radius: 10px;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst HoverSpan = styled.span`\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst WarningGrouping = styled.div`\n  opacity: ${({ disabled }) => disabled && '0.4'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n`\n\nfunction PairPage({ pairAddress, history }) {\n  const {\n    token0,\n    token1,\n    reserve0,\n    reserve1,\n    reserveUSD,\n    trackedReserveUSD,\n    oneDayVolumeUSD,\n    volumeChangeUSD,\n    oneDayVolumeUntracked,\n    volumeChangeUntracked,\n    liquidityChangeUSD\n  } = usePairData(pairAddress)\n\n  let tokenA = token0\n  let tokenB = token1\n  let reserveA = reserve0\n  let reserveB = reserve1\n\n  if (\n    tokenB?.symbol === 'ETH' ||\n    (tokenB?.symbol === 'LINK' && tokenA?.symbol !== 'ETH') ||\n    (tokenB?.symbol === 'YFLUSD' && tokenA?.symbol !== 'ETH' && tokenA?.symbol !== 'LINK')\n  ) {\n    tokenA = token1\n    tokenB = token0\n    reserveA = reserve1\n    reserveB = reserve0\n  }\n\n  useEffect(() => {\n    document.querySelector('body').scrollTo(0, 0)\n  }, [])\n\n  const transactions = usePairTransactions(pairAddress)\n  const backgroundColor = useColor()\n\n  // liquidity\n  const liquidity = trackedReserveUSD\n    ? formattedNum(trackedReserveUSD, true)\n    : reserveUSD\n    ? formattedNum(reserveUSD, true)\n    : '-'\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\n\n  // mark if using untracked liquidity\n  const [usingTracked, setUsingTracked] = useState(true)\n  useEffect(() => {\n    setUsingTracked(!trackedReserveUSD ? false : true)\n  }, [trackedReserveUSD])\n\n  // volume\t  // volume\n  const volume =\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\n      ? formattedNum(oneDayVolumeUSD === 0 ? oneDayVolumeUntracked : oneDayVolumeUSD, true)\n      : oneDayVolumeUSD === 0\n      ? '$0'\n      : '-'\n\n  // mark if using untracked volume\n  const [usingUtVolume, setUsingUtVolume] = useState(false)\n  useEffect(() => {\n    setUsingUtVolume(oneDayVolumeUSD === 0 ? true : false)\n  }, [oneDayVolumeUSD])\n\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUntracked)\n\n  // get fees\t  // get fees\n  const fees =\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\n      ? usingUtVolume\n        ? formattedNum(oneDayVolumeUntracked * 0.003, true)\n        : formattedNum(oneDayVolumeUSD * 0.003, true)\n      : '-'\n\n  // token data for usd\n  const [ethPrice] = useEthPrice()\n  const tokenAUSD =\n    tokenA?.derivedETH && ethPrice ? formattedNum(parseFloat(tokenA.derivedETH) * parseFloat(ethPrice), true) : ''\n\n  const tokenBUSD =\n    tokenB?.derivedETH && ethPrice ? formattedNum(parseFloat(tokenB.derivedETH) * parseFloat(ethPrice), true) : ''\n\n  // rates\n  const tokenARate = reserveA && reserveB ? formattedNum(reserveB / reserveA) : '-'\n  const tokenBRate = reserveA && reserveB ? formattedNum(reserveA / reserveB) : '-'\n\n  // formatted symbols for overflow\n  const formattedSymbol0 = tokenA?.symbol.length > 6 ? tokenA?.symbol.slice(0, 5) + '...' : tokenA?.symbol\n  const formattedSymbol1 = tokenB?.symbol.length > 6 ? tokenB?.symbol.slice(0, 5) + '...' : tokenB?.symbol\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below900 = useMedia('(max-width: 900px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0\n    })\n  }, [])\n\n  const [savedPairs, addPair] = useSavedPairs()\n\n  const listedTokens = useListedTokens()\n\n  return (\n    <PageWrapper>\n      <ThemedBackground />\n      <span />\n      <Warning\n        type={'pair'}\n        show={!dismissed && listedTokens && !(listedTokens.includes(tokenA?.id) && listedTokens.includes(tokenB?.id))}\n        setShow={markAsDismissed}\n        address={pairAddress}\n      />\n      <ContentWrapperLarge>\n        <RowBetween>\n          <TYPE.body>\n            <BasicLink to=\"/pairs\">{'Pairs '}</BasicLink>→ {tokenA?.symbol}-{tokenB?.symbol}\n          </TYPE.body>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <WarningGrouping\n          disabled={\n            !dismissed && listedTokens && !(listedTokens.includes(tokenA?.id) && listedTokens.includes(tokenB?.id))\n          }\n        >\n          <DashboardWrapper>\n            <AutoColumn gap=\"40px\" style={{ marginBottom: '1.5rem' }}>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  flexWrap: 'wrap',\n                  width: '100%'\n                }}\n              >\n                <RowFixed style={{ flexWrap: 'wrap', minWidth: '100px' }}>\n                  <RowFixed>\n                    {tokenA && tokenB && (\n                      <DoubleTokenLogo a0={tokenA?.id || ''} a1={tokenB?.id || ''} size={32} margin={true} />\n                    )}{' '}\n                    <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} style={{ margin: '0 1rem' }}>\n                      {tokenA && tokenB ? (\n                        <>\n                          <HoverSpan onClick={() => history.push(`/token/${tokenA?.id}`)}>{tokenA.symbol}</HoverSpan>\n                          <span>-</span>\n                          <HoverSpan onClick={() => history.push(`/token/${tokenB?.id}`)}>\n                            {tokenB.symbol}\n                          </HoverSpan>{' '}\n                          Pair\n                        </>\n                      ) : (\n                        ''\n                      )}\n                    </TYPE.main>\n                  </RowFixed>\n                </RowFixed>\n                <RowFixed\n                  ml={below900 ? '0' : '2.5rem'}\n                  mt={below1080 && '1rem'}\n                  style={{\n                    flexDirection: below1080 ? 'row-reverse' : 'initial'\n                  }}\n                >\n                  {!!!savedPairs[pairAddress] && !below1080 ? (\n                    <Hover onClick={() => addPair(pairAddress, tokenA.id, tokenB.id, tokenA.symbol, tokenB.symbol)}>\n                      <StyledIcon>\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\n                      </StyledIcon>\n                    </Hover>\n                  ) : !below1080 ? (\n                    <StyledIcon>\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\n                    </StyledIcon>\n                  ) : (\n                    <></>\n                  )}\n\n                  <Link external href={getPoolLink(tokenA?.id, tokenB?.id)}>\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\n                  </Link>\n                  <Link external href={getSwapLink(tokenA?.id, tokenB?.id)}>\n                    <ButtonDark ml={!below1080 && '.5rem'} mr={below1080 && '.5rem'} color=\"#3949ab\">\n                      Trade\n                    </ButtonDark>\n                  </Link>\n                </RowFixed>\n              </div>\n            </AutoColumn>\n            <AutoRow\n              gap=\"6px\"\n              style={{\n                width: 'fit-content',\n                marginTop: below900 ? '1rem' : '0',\n                marginBottom: below900 ? '0' : '2rem',\n                flexWrap: 'wrap'\n              }}\n            >\n              <FixedPanel onClick={() => history.push(`/token/${tokenA?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={tokenA?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {tokenA && tokenB\n                      ? `1 ${formattedSymbol0} = ${tokenARate} ${formattedSymbol1} ${\n                          parseFloat(tokenA?.derivedETH) ? '(' + tokenAUSD + ')' : ''\n                        }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n              <FixedPanel onClick={() => history.push(`/token/${tokenB?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={tokenB?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {tokenA && tokenB\n                      ? `1 ${formattedSymbol1} = ${tokenBRate} ${formattedSymbol0}  ${\n                          parseFloat(tokenB?.derivedETH) ? '(' + tokenBUSD + ')' : ''\n                        }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n            </AutoRow>\n            <>\n              {!below1080 && <TYPE.main fontSize={'1.125rem'}>Pair Stats</TYPE.main>}\n              <PanelWrapper style={{ marginTop: '1.5rem' }}>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Total Liquidity {!usingTracked ? '(Untracked)' : ''}</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {liquidity}\n                      </TYPE.main>\n                      <TYPE.main>{liquidityChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Volume (24hrs) {usingUtVolume && '(Untracked)'}</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {volume}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Fees (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {fees}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Pooled Tokens</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <Hover onClick={() => history.push(`/token/${tokenA?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={tokenA?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserveA ? formattedNum(reserveA) : ''}{' '}\n                            <FormattedName text={tokenA?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                    <Hover onClick={() => history.push(`/token/${tokenB?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={tokenB?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserveB ? formattedNum(reserveB) : ''}{' '}\n                            <FormattedName text={tokenB?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                  </AutoColumn>\n                </Panel>\n                <Panel\n                  style={{\n                    gridColumn: below1080 ? '1' : '2/4',\n                    gridRow: below1080 ? '' : '1/5'\n                  }}\n                >\n                  <PairChart\n                    address={pairAddress}\n                    color={backgroundColor}\n                    base0={reserveB / reserveA}\n                    base1={reserveA / reserveB}\n                  />\n                </Panel>\n              </PanelWrapper>\n              <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n                Transactions\n              </TYPE.main>{' '}\n              <Panel\n                style={{\n                  marginTop: '1.5rem'\n                }}\n              >\n                {transactions ? <TxnList transactions={transactions} /> : <Loader />}\n              </Panel>\n              <RowBetween style={{ marginTop: '3rem' }}>\n                <TYPE.main fontSize={'1.125rem'}>Pair Information</TYPE.main>{' '}\n              </RowBetween>\n              <Panel\n                rounded\n                style={{\n                  marginTop: '1.5rem'\n                }}\n                p={20}\n              >\n                <TokenDetailsLayout>\n                  <Column>\n                    <TYPE.main>Pair Name</TYPE.main>\n                    <TYPE.main style={{ marginTop: '.5rem' }}>\n                      <RowFixed>\n                        <FormattedName text={tokenA?.symbol ?? ''} maxCharacters={8} />\n                        -\n                        <FormattedName text={tokenB?.symbol ?? ''} maxCharacters={8} />\n                      </RowFixed>\n                    </TYPE.main>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Pair Address</TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {pairAddress.slice(0, 6) + '...' + pairAddress.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={pairAddress} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={tokenA?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {tokenA && tokenA.id.slice(0, 6) + '...' + tokenA.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={tokenA?.id} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={tokenB?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={16}>\n                        {tokenB && tokenB.id.slice(0, 6) + '...' + tokenB.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={tokenB?.id} />\n                    </AutoRow>\n                  </Column>\n                  <ButtonLight color={backgroundColor}>\n                    <Link color={backgroundColor} external href={'https://etherscan.io/address/' + pairAddress}>\n                      View on Etherscan ↗\n                    </Link>\n                  </ButtonLight>\n                </TokenDetailsLayout>\n              </Panel>\n            </>\n          </DashboardWrapper>\n        </WarningGrouping>\n      </ContentWrapperLarge>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(PairPage)\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart } from 'recharts'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { darken } from 'polished'\r\nimport { useMedia } from 'react-use'\r\nimport { timeframeOptions } from '../../constants'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport { useUserLiquidityChart } from '../../contexts/User'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { TYPE } from '../../Theme'\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 100%;\r\n  max-height: 390px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst UserChart = ({ account }) => {\r\n  const chartData = useUserLiquidityChart(account)\r\n\r\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.ALL_TIME)\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n  const above1600 = useMedia('(min-width: 1600px)')\r\n\r\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\r\n\r\n  const aspect = above1600 ? 60 / 12 : below600 ? 60 / 42 : 60 / 16\r\n\r\n  const textColor = '#ffffff'\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <div />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={'#000119'} />\r\n        </RowBetween>\r\n      ) : (\r\n        <RowBetween mb={40}>\r\n          <AutoRow gap=\"10px\">\r\n            <TYPE.main>Liquidity Value</TYPE.main>\r\n          </AutoRow>\r\n          <AutoRow justify=\"flex-end\" gap=\"4px\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </RowBetween>\r\n      )}\r\n      {chartData ? (\r\n        <ResponsiveContainer aspect={aspect} style={{ height: 'inherit' }}>\r\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={'#bebebe'} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={'#ffffff'} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={16}\r\n              minTickGap={0}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={domain}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={6}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: '#dddddd',\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Area\r\n              key={'other'}\r\n              dataKey={'valueUSD'}\r\n              stackId=\"2\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n              type=\"monotone\"\r\n              name={'Liquidity'}\r\n              yAxisId={0}\r\n              stroke={darken(0.12, '#dddddd')}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      ) : (\r\n        <LocalLoader />\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default UserChart\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { XAxis, YAxis, ResponsiveContainer, Tooltip, LineChart, Line, CartesianGrid } from 'recharts'\r\nimport { AutoRow, RowBetween } from '../Row'\r\n\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { useMedia } from 'react-use'\r\nimport { timeframeOptions } from '../../constants'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport { useUserPositionChart } from '../../contexts/User'\r\nimport { useTimeframe } from '../../contexts/Application'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { useColor } from '../../hooks'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst ChartWrapper = styled.div`\r\n  max-height: 420px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst OptionsRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst CHART_VIEW = {\r\n  VALUE: 'Value',\r\n  FEES: 'Fees',\r\n}\r\n\r\nconst PairReturnsChart = ({ account, position }) => {\r\n  let data = useUserPositionChart(position, account)\r\n\r\n  const [timeWindow, setTimeWindow] = useTimeframe()\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  const color = useColor()\r\n\r\n  const [chartView, setChartView] = useState(CHART_VIEW.VALUE)\r\n\r\n  // based on window, get starttime\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n  data = data?.filter((entry) => entry.date >= utcStartTime)\r\n\r\n  const aspect = below600 ? 60 / 42 : 60 / 16\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <div />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} />\r\n        </RowBetween>\r\n      ) : (\r\n        <OptionsRow>\r\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\r\n            <OptionButton active={chartView === CHART_VIEW.VALUE} onClick={() => setChartView(CHART_VIEW.VALUE)}>\r\n              Liquidity\r\n            </OptionButton>\r\n            <OptionButton active={chartView === CHART_VIEW.FEES} onClick={() => setChartView(CHART_VIEW.FEES)}>\r\n              Fees\r\n            </OptionButton>\r\n          </AutoRow>\r\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </OptionsRow>\r\n      )}\r\n      <ResponsiveContainer aspect={aspect}>\r\n        {data ? (\r\n          <LineChart margin={{ top: 0, right: 0, bottom: 0, left: 0 }} barCategoryGap={1} data={data}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={14}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveStartEnd\"\r\n              minTickGap={0}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey={chartView === CHART_VIEW.VALUE ? 'usdValue' : 'fees'}\r\n              stroke={color}\r\n              yAxisId={0}\r\n              name={chartView === CHART_VIEW.VALUE ? 'Liquidity' : 'Fees Earned (Cumulative)'}\r\n            />\r\n          </LineChart>\r\n        ) : (\r\n          <LocalLoader />\r\n        )}\r\n      </ResponsiveContainer>\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default PairReturnsChart\r\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\nimport Link, { CustomLink } from '../Link'\nimport { Divider } from '../../components'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, getPoolLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { useEthPrice } from '../../contexts/GlobalData'\nimport { RowFixed } from '../Row'\nimport { ButtonLight } from '../ButtonStyled'\nimport { TYPE } from '../../Theme'\nimport FormattedName from '../FormattedName'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 5px 0.5fr 1fr 1fr;\n  grid-template-areas: 'number name varen return';\n  align-items: flex-start;\n  padding: 20px 0;\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 35px 2.5fr 1fr 1fr;\n    grid-template-areas: 'number name varen return';\n  }\n\n  @media screen and (max-width: 740px) {\n    grid-template-columns: 2.5fr 1fr 1fr;\n    grid-template-areas: 'name varen return';\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 2.5fr 1fr;\n    grid-template-areas: 'name varen';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nconst SORT_FIELD = {\n  VALUE: 'VALUE',\n  VAREN_RETURN: 'VAREN_RETURN',\n}\n\nfunction PositionList({ positions }) {\n  const below500 = useMedia('(max-width: 500px)')\n  const below740 = useMedia('(max-width: 740px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = 10\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VALUE)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [positions])\n\n  useEffect(() => {\n    if (positions) {\n      let extraPages = 1\n      if (positions.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(positions.length / ITEMS_PER_PAGE) + extraPages || 1)\n    }\n  }, [positions])\n\n  const [ethPrice] = useEthPrice()\n\n  const ListItem = ({ position, index }) => {\n    const poolOwnership = position.pair.totalSupply ? position.liquidityTokenBalance / position.pair.totalSupply : 0\n    const valueUSD = poolOwnership * position.pair.reserveUSD\n\n    let token0 = position.pair.token0\n    let token1 = position.pair.token1\n\n    if (\n      token1.symbol === 'ETH' ||\n      (token1.symbol === 'LINK' && token0.symbol !== 'ETH') ||\n      (token1.symbol === 'YFLUSD' && token0.symbol !== 'ETH' && token0.symbol !== 'LINK')\n    ) {\n      token0 = position.pair.token1\n      token1 = position.pair.token0\n    }\n\n    return (\n      <DashGrid style={{ opacity: poolOwnership > 0 ? 1 : 0.6 }} focus={true}>\n        {!below740 && <DataText area=\"number\">{index}</DataText>}\n        <DataText area=\"name\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" align=\"flex-start\">\n            <DoubleTokenLogo size={16} a0={token0.id} a1={token1.id} margin={!below740} />\n          </AutoColumn>\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" style={{ marginLeft: '20px' }}>\n            <CustomLink to={'/pair/' + position.pair.id}>\n              <TYPE.main style={{ whiteSpace: 'nowrap' }} to={'/pair/'}>\n                <FormattedName text={token0.symbol + '-' + token1.symbol} maxCharacters={below740 ? 10 : 18} />\n              </TYPE.main>\n            </CustomLink>\n\n            <RowFixed gap=\"8px\" justify=\"flex-start\">\n              <Link external href={getPoolLink(token0.id, token1.id)} style={{ marginRight: '.5rem' }}>\n                <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Add</ButtonLight>\n              </Link>\n              {poolOwnership > 0 && (\n                <Link external href={getPoolLink(token0.id, token1.id, true)}>\n                  <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Remove</ButtonLight>\n                </Link>\n              )}\n            </RowFixed>\n          </AutoColumn>\n        </DataText>\n        <DataText area=\"varen\">\n          <AutoColumn gap=\"12px\" justify=\"flex-end\">\n            <TYPE.main>{formattedNum(valueUSD, true, true)}</TYPE.main>\n            <AutoColumn gap=\"4px\" justify=\"flex-end\">\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve0))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={token0.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve1))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={token1.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n            </AutoColumn>\n          </AutoColumn>\n        </DataText>\n        {!below500 && (\n          <DataText area=\"return\">\n            <AutoColumn gap=\"12px\" justify=\"flex-end\">\n              <TYPE.main color={'green'}>\n                <RowFixed>{formattedNum(position?.fees.sum, true, true)}</RowFixed>\n              </TYPE.main>\n              <AutoColumn gap=\"4px\" justify=\"flex-end\">\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(token0.derivedETH)\n                      ? formattedNum(position?.fees.sum / (parseFloat(token0.derivedETH) * ethPrice) / 2, false, true)\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={token0.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(token1.derivedETH)\n                      ? formattedNum(position?.fees.sum / (parseFloat(token1.derivedETH) * ethPrice) / 2, false, true)\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={token1.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n              </AutoColumn>\n            </AutoColumn>\n          </DataText>\n        )}\n      </DashGrid>\n    )\n  }\n\n  const positionsSorted =\n    positions &&\n    positions\n\n      .sort((p0, p1) => {\n        if (sortedColumn === SORT_FIELD.PRINCIPAL) {\n          return p0?.principal?.usd > p1?.principal?.usd ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.HODL) {\n          return p0?.hodl?.sum > p1?.hodl?.sum ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.VAREN_RETURN) {\n          const return0 = p0?.varen?.return !== null ? p0?.varen?.return : 0\n          const return1 = p1?.varen?.return !== null ? p1?.varen?.return : 0\n          return return0 > return1 ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.VALUE) {\n          const bal0 =\n            p0.pair.totalSupply === '0' ? 0 : (p0.liquidityTokenBalance / p0.pair.totalSupply) * p0.pair.reserveUSD\n          const bal1 =\n            p1.pair.totalSupply === '0' ? 0 : (p1.liquidityTokenBalance / p1.pair.totalSupply) * p1.pair.reserveUSD\n          return bal0 > bal1 ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        return 1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((position, index) => {\n        return (\n          <div key={index}>\n            <ListItem key={index} index={(page - 1) * 10 + index + 1} position={position} />\n            <Divider />\n          </div>\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: '32px', padding: 0 }}>\n        {!below740 && (\n          <Flex alignItems=\"flex-start\" justifyContent=\"flexStart\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"flex-start\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"number\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"varen\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VALUE)\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\n            }}\n          >\n            {below740 ? 'Value' : 'Liquidity'} {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below500 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"return\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.VAREN_RETURN)\n                setSortDirection(sortedColumn !== SORT_FIELD.VAREN_RETURN ? true : !sortDirection)\n              }}\n            >\n              {below740 ? 'Fees' : 'Total Fees Earned'}{' '}\n              {sortedColumn === SORT_FIELD.VAREN_RETURN ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!positionsSorted ? <LocalLoader /> : positionsSorted}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PositionList)\n","import React, { useState, useMemo, useEffect, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useUserTransactions, useUserPositions } from '../contexts/User'\r\nimport TxnList from '../components/TxnList'\r\nimport Panel from '../components/Panel'\r\nimport { formattedNum } from '../utils'\r\nimport Row, { AutoRow, RowFixed, RowBetween } from '../components/Row'\r\nimport { AutoColumn } from '../components/Column'\r\nimport UserChart from '../components/UserChart'\r\nimport PairReturnsChart from '../components/PairReturnsChart'\r\nimport PositionList from '../components/PositionList'\r\nimport { TYPE } from '../Theme'\r\nimport { ButtonDropdown } from '../components/ButtonStyled'\r\nimport { PageWrapper, ContentWrapper, StyledIcon } from '../components'\r\nimport DoubleTokenLogo from '../components/DoubleLogo'\r\nimport { Bookmark, Activity } from 'react-feather'\r\nimport Link from '../components/Link'\r\nimport { FEE_WARNING_TOKENS } from '../constants'\r\nimport { BasicLink } from '../components/Link'\r\nimport { useMedia } from 'react-use'\r\nimport Search from '../components/Search'\r\nimport { useSavedAccounts } from '../contexts/LocalStorage'\r\n\r\nconst AccountWrapper = styled.div`\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  padding: 6px 16px;\r\n  border-radius: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Header = styled.div``\r\n\r\nconst DashboardWrapper = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nconst DropdownWrapper = styled.div`\r\n  position: relative;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n  border-radius: 12px;\r\n`\r\n\r\nconst Flyout = styled.div`\r\n  position: absolute;\r\n  top: 38px;\r\n  left: -1px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  z-index: 999;\r\n  border-bottom-right-radius: 10px;\r\n  border-bottom-left-radius: 10px;\r\n  padding-top: 4px;\r\n  border: 1px solid #edeef2;\r\n  border-top: none;\r\n`\r\n\r\nconst MenuRow = styled(Row)`\r\n  width: 100%;\r\n  padding: 12px 0;\r\n  padding-left: 12px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.bg2};\r\n  }\r\n`\r\n\r\nconst PanelWrapper = styled.div`\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: max-content;\r\n  gap: 6px;\r\n  display: inline-grid;\r\n  width: 100%;\r\n  align-items: start;\r\n`\r\n\r\nconst Warning = styled.div`\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  color: ${({ theme }) => theme.text1};\r\n  padding: 1rem;\r\n  font-weight: 600;\r\n  border-radius: 10px;\r\n  margin-bottom: 1rem;\r\n  width: calc(100% - 2rem);\r\n`\r\n\r\nfunction AccountPage({ account }) {\r\n  // get data for this account\r\n  const transactions = useUserTransactions(account)\r\n  const positions = useUserPositions(account)\r\n\r\n  // get data for user stats\r\n  const transactionCount = transactions?.swaps?.length + transactions?.burns?.length + transactions?.mints?.length\r\n\r\n  // get derived totals\r\n  let totalSwappedUSD = useMemo(() => {\r\n    return transactions?.swaps\r\n      ? transactions?.swaps.reduce((total, swap) => {\r\n          return total + parseFloat(swap.amountUSD)\r\n        }, 0)\r\n      : 0\r\n  }, [transactions])\r\n\r\n  // if any position has token from fee warning list, show warning\r\n  const [showWarning, setShowWarning] = useState(false)\r\n  useEffect(() => {\r\n    if (positions) {\r\n      for (let i = 0; i < positions.length; i++) {\r\n        if (\r\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token0.id) ||\r\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token1.id)\r\n        ) {\r\n          setShowWarning(true)\r\n        }\r\n      }\r\n    }\r\n  }, [positions])\r\n\r\n  // settings for list view and dropdowns\r\n  const hideLPContent = positions && positions.length === 0\r\n  const [showDropdown, setShowDropdown] = useState(false)\r\n  const [activePosition, setActivePosition] = useState()\r\n\r\n  const dynamicPositions = activePosition ? [activePosition] : positions\r\n\r\n  const aggregateFees = dynamicPositions?.reduce(function(total, position) {\r\n    return total + position.fees.sum\r\n  }, 0)\r\n\r\n  const positionValue = useMemo(() => {\r\n    return dynamicPositions\r\n      ? dynamicPositions.reduce((total, position) => {\r\n          return (\r\n            total +\r\n            (position?.pair?.totalSupply\r\n              ? (parseFloat(position?.liquidityTokenBalance) / parseFloat(position?.pair?.totalSupply)) *\r\n                position?.pair?.reserveUSD\r\n              : 0)\r\n          )\r\n        }, 0)\r\n      : null\r\n  }, [dynamicPositions])\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      behavior: 'smooth',\r\n      top: 0\r\n    })\r\n  }, [])\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  // adding/removing account from saved accounts\r\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\r\n  const isBookmarked = savedAccounts.includes(account)\r\n  const handleBookmarkClick = useCallback(() => {\r\n    ;(isBookmarked ? removeAccount : addAccount)(account)\r\n  }, [account, isBookmarked, addAccount, removeAccount])\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ContentWrapper>\r\n        <RowBetween>\r\n          <TYPE.body>\r\n            <BasicLink to=\"/accounts\">{'Accounts '}</BasicLink>→{' '}\r\n            <Link lineHeight={'145.23%'} href={'https://etherscan.io/address/' + account} target=\"_blank\">\r\n              {' '}\r\n              {account?.slice(0, 42)}{' '}\r\n            </Link>\r\n          </TYPE.body>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n        <Header>\r\n          <RowBetween>\r\n            <span>\r\n              <TYPE.header fontSize={24}>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\r\n              <Link lineHeight={'145.23%'} href={'https://etherscan.io/address/' + account} target=\"_blank\">\r\n                <TYPE.main fontSize={14}>View on Etherscan</TYPE.main>\r\n              </Link>\r\n            </span>\r\n            <AccountWrapper>\r\n              <StyledIcon>\r\n                <Bookmark\r\n                  onClick={handleBookmarkClick}\r\n                  style={{ opacity: isBookmarked ? 0.8 : 0.4, cursor: 'pointer' }}\r\n                />\r\n              </StyledIcon>\r\n            </AccountWrapper>\r\n          </RowBetween>\r\n        </Header>\r\n        <DashboardWrapper>\r\n          {showWarning && <Warning>Fees cannot currently be calculated for pairs that include AMPL.</Warning>}\r\n          {!hideLPContent && (\r\n            <DropdownWrapper>\r\n              <ButtonDropdown width=\"100%\" onClick={() => setShowDropdown(!showDropdown)} open={showDropdown}>\r\n                {!activePosition && (\r\n                  <RowFixed>\r\n                    <StyledIcon>\r\n                      <Activity size={16} />\r\n                    </StyledIcon>\r\n                    <TYPE.body ml={'10px'}>All Positions</TYPE.body>\r\n                  </RowFixed>\r\n                )}\r\n                {activePosition && (\r\n                  <RowFixed>\r\n                    <DoubleTokenLogo a0={activePosition.pair.token0.id} a1={activePosition.pair.token1.id} size={16} />\r\n                    <TYPE.body ml={'16px'}>\r\n                      {activePosition.pair.token0.symbol}-{activePosition.pair.token1.symbol} Position\r\n                    </TYPE.body>\r\n                  </RowFixed>\r\n                )}\r\n              </ButtonDropdown>\r\n              {showDropdown && (\r\n                <Flyout>\r\n                  <AutoColumn gap=\"0px\">\r\n                    {positions?.map((p, i) => {\r\n                      if (p.pair.token1.symbol === 'WETH') {\r\n                        p.pair.token1.symbol = 'ETH'\r\n                      }\r\n                      if (p.pair.token0.symbol === 'WETH') {\r\n                        p.pair.token0.symbol = 'ETH'\r\n                      }\r\n                      return (\r\n                        p.pair.id !== activePosition?.pair.id && (\r\n                          <MenuRow\r\n                            onClick={() => {\r\n                              setActivePosition(p)\r\n                              setShowDropdown(false)\r\n                            }}\r\n                            key={i}\r\n                          >\r\n                            <DoubleTokenLogo a0={p.pair.token0.id} a1={p.pair.token1.id} size={16} />\r\n                            <TYPE.body ml={'16px'}>\r\n                              {p.pair.token0.symbol}-{p.pair.token1.symbol} Position\r\n                            </TYPE.body>\r\n                          </MenuRow>\r\n                        )\r\n                      )\r\n                    })}\r\n                    {activePosition && (\r\n                      <MenuRow\r\n                        onClick={() => {\r\n                          setActivePosition()\r\n                          setShowDropdown(false)\r\n                        }}\r\n                      >\r\n                        <RowFixed>\r\n                          <StyledIcon>\r\n                            <Activity size={16} />\r\n                          </StyledIcon>\r\n                          <TYPE.body ml={'10px'}>All Positions</TYPE.body>\r\n                        </RowFixed>\r\n                      </MenuRow>\r\n                    )}\r\n                  </AutoColumn>\r\n                </Flyout>\r\n              )}\r\n            </DropdownWrapper>\r\n          )}\r\n          {!hideLPContent && (\r\n            <Panel style={{ height: '100%', marginBottom: '1rem' }}>\r\n              <AutoRow gap=\"20px\">\r\n                <AutoColumn gap=\"10px\">\r\n                  <RowBetween>\r\n                    <TYPE.body>Liquidity (Including Fees)</TYPE.body>\r\n                    <div />\r\n                  </RowBetween>\r\n                  <RowFixed align=\"flex-end\">\r\n                    <TYPE.header fontSize={'24px'} lineHeight={1}>\r\n                      {positionValue\r\n                        ? formattedNum(positionValue, true)\r\n                        : positionValue === 0\r\n                        ? formattedNum(0, true)\r\n                        : '-'}\r\n                    </TYPE.header>\r\n                  </RowFixed>\r\n                </AutoColumn>\r\n                <AutoColumn gap=\"10px\">\r\n                  <RowBetween>\r\n                    <TYPE.body>Fees Earned (Cumulative)</TYPE.body>\r\n                    <div />\r\n                  </RowBetween>\r\n                  <RowFixed align=\"flex-end\">\r\n                    <TYPE.header fontSize={'24px'} lineHeight={1} color={aggregateFees && 'green'}>\r\n                      {aggregateFees ? formattedNum(aggregateFees, true, true) : '-'}\r\n                    </TYPE.header>\r\n                  </RowFixed>\r\n                </AutoColumn>\r\n              </AutoRow>\r\n            </Panel>\r\n          )}\r\n          {!hideLPContent && (\r\n            <PanelWrapper>\r\n              <Panel style={{ gridColumn: '1' }}>\r\n                {activePosition ? (\r\n                  <PairReturnsChart account={account} position={activePosition} />\r\n                ) : (\r\n                  <UserChart account={account} position={activePosition} />\r\n                )}\r\n              </Panel>\r\n            </PanelWrapper>\r\n          )}\r\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n            Positions\r\n          </TYPE.main>{' '}\r\n          <Panel\r\n            style={{\r\n              marginTop: '1.5rem'\r\n            }}\r\n          >\r\n            <PositionList positions={positions} />\r\n          </Panel>\r\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n            Transactions\r\n          </TYPE.main>{' '}\r\n          <Panel\r\n            style={{\r\n              marginTop: '1.5rem'\r\n            }}\r\n          >\r\n            <TxnList transactions={transactions} />\r\n          </Panel>\r\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n            Wallet Stats\r\n          </TYPE.main>{' '}\r\n          <Panel\r\n            style={{\r\n              marginTop: '1.5rem'\r\n            }}\r\n          >\r\n            <AutoRow gap=\"20px\">\r\n              <AutoColumn gap=\"8px\">\r\n                <TYPE.header fontSize={24}>{totalSwappedUSD ? formattedNum(totalSwappedUSD, true) : '-'}</TYPE.header>\r\n                <TYPE.main>Total Value Swapped</TYPE.main>\r\n              </AutoColumn>\r\n              <AutoColumn gap=\"8px\">\r\n                <TYPE.header fontSize={24}>\r\n                  {totalSwappedUSD ? formattedNum(totalSwappedUSD * 0.003, true) : '-'}\r\n                </TYPE.header>\r\n                <TYPE.main>Total Fees Paid</TYPE.main>\r\n              </AutoColumn>\r\n              <AutoColumn gap=\"8px\">\r\n                <TYPE.header fontSize={24}>{transactionCount ? transactionCount : '-'}</TYPE.header>\r\n                <TYPE.main>Total Transactions</TYPE.main>\r\n              </AutoColumn>\r\n            </AutoRow>\r\n          </Panel>\r\n        </DashboardWrapper>\r\n      </ContentWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default AccountPage\r\n","import React, { useEffect } from 'react'\r\nimport 'feather-icons'\r\n\r\nimport TopTokenList from '../components/TokenList'\r\nimport { TYPE } from '../Theme'\r\nimport Panel from '../components/Panel'\r\nimport { useAllTokenData } from '../contexts/TokenData'\r\nimport { PageWrapper, FullWrapper } from '../components'\r\nimport { RowBetween } from '../components/Row'\r\nimport Search from '../components/Search'\r\nimport { useMedia } from 'react-use'\r\n\r\nfunction AllTokensPage() {\r\n  const allTokens = useAllTokenData()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const below600 = useMedia('(max-width: 800px)')\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <FullWrapper>\r\n        <RowBetween>\r\n          <TYPE.largeHeader>Top Tokens</TYPE.largeHeader>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n        <Panel style={{ marginTop: '6px', padding: below600 && '1rem 0 0 0 ' }}>\r\n          <TopTokenList tokens={allTokens} itemMax={50} />\r\n        </Panel>\r\n      </FullWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default AllTokensPage\r\n","import React, { useEffect } from 'react'\r\nimport 'feather-icons'\r\n\r\nimport { TYPE } from '../Theme'\r\nimport Panel from '../components/Panel'\r\nimport { useAllPairData } from '../contexts/PairData'\r\nimport PairList from '../components/PairList'\r\nimport { PageWrapper, FullWrapper } from '../components'\r\nimport { RowBetween } from '../components/Row'\r\nimport Search from '../components/Search'\r\nimport { useMedia } from 'react-use'\r\n\r\nfunction AllPairsPage() {\r\n  const allPairs = useAllPairData()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <FullWrapper>\r\n        <RowBetween>\r\n          <TYPE.largeHeader>Top Pairs</TYPE.largeHeader>\r\n          {!below800 && <Search small={true} />}\r\n        </RowBetween>\r\n        <Panel style={{ padding: below800 && '1rem 0 0 0 ' }}>\r\n          <PairList pairs={allPairs} disbaleLinks={true} maxItems={50} />\r\n        </Panel>\r\n      </FullWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default AllPairsPage\r\n","import React, { useState } from 'react'\r\nimport 'feather-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ButtonLight, ButtonFaded } from '../ButtonStyled'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { isAddress } from '../../utils'\r\nimport { useSavedAccounts } from '../../contexts/LocalStorage'\r\nimport { AutoColumn } from '../Column'\r\nimport { TYPE } from '../../Theme'\r\nimport { Hover, StyledIcon } from '..'\r\nimport Panel from '../Panel'\r\nimport { Divider } from '..'\r\nimport { Flex } from 'rebass'\r\n\r\nimport { X } from 'react-feather'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n  border-radius: 12px;\r\n`\r\n\r\nconst Input = styled.input`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  padding: 12px 16px;\r\n  border-radius: 12px;\r\n  color: ${({ theme }) => theme.text1};\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  font-size: 16px;\r\n  margin-right: 1rem;\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.text3};\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    ::placeholder {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst AccountLink = styled.span`\r\n  display: flex;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.link};\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 1fr;\r\n  grid-template-areas: 'account';\r\n  padding: 0 4px;\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n  }\r\n`\r\n\r\nfunction AccountSearch({ history, small }) {\r\n  const [accountValue, setAccountValue] = useState()\r\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\r\n\r\n  function handleAccountSearch() {\r\n    if (isAddress(accountValue)) {\r\n      history.push('/account/' + accountValue)\r\n      if (!savedAccounts.includes(accountValue)) {\r\n        addAccount(accountValue)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AutoColumn gap={'1rem'}>\r\n      {!small && (\r\n        <>\r\n          <AutoRow>\r\n            <Wrapper>\r\n              <Input\r\n                placeholder=\"0x...\"\r\n                onChange={e => {\r\n                  setAccountValue(e.target.value)\r\n                }}\r\n              />\r\n            </Wrapper>\r\n            <ButtonLight onClick={handleAccountSearch}>Load Account Details</ButtonLight>\r\n          </AutoRow>\r\n        </>\r\n      )}\r\n\r\n      <AutoColumn gap={'12px'}>\r\n        {!small && (\r\n          <Panel>\r\n            <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\r\n              <TYPE.main area=\"account\">Saved Accounts</TYPE.main>\r\n            </DashGrid>\r\n            <Divider />\r\n            {savedAccounts?.length > 0 ? (\r\n              savedAccounts.map(account => {\r\n                return (\r\n                  <DashGrid key={account} center={true} style={{ height: 'fit-content', padding: '1rem 0 0 0' }}>\r\n                    <Flex\r\n                      area=\"account\"\r\n                      justifyContent=\"space-between\"\r\n                      onClick={() => history.push('/account/' + account)}\r\n                    >\r\n                      <AccountLink>{account?.slice(0, 42)}</AccountLink>\r\n                      <Hover\r\n                        onClick={e => {\r\n                          e.stopPropagation()\r\n                          removeAccount(account)\r\n                        }}\r\n                      >\r\n                        <StyledIcon>\r\n                          <X size={16} />\r\n                        </StyledIcon>\r\n                      </Hover>\r\n                    </Flex>\r\n                  </DashGrid>\r\n                )\r\n              })\r\n            ) : (\r\n              <TYPE.light style={{ marginTop: '1rem' }}>No saved accounts</TYPE.light>\r\n            )}\r\n          </Panel>\r\n        )}\r\n\r\n        {small && (\r\n          <>\r\n            <TYPE.main>{'Accounts'}</TYPE.main>\r\n            {savedAccounts?.length > 0 ? (\r\n              savedAccounts.map(account => {\r\n                return (\r\n                  <RowBetween key={account}>\r\n                    <ButtonFaded onClick={() => history.push('/account/' + account)}>\r\n                      {small ? (\r\n                        <TYPE.header>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\r\n                      ) : (\r\n                        <AccountLink>{account?.slice(0, 42)}</AccountLink>\r\n                      )}\r\n                    </ButtonFaded>\r\n                    <Hover onClick={() => removeAccount(account)}>\r\n                      <StyledIcon>\r\n                        <X size={16} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  </RowBetween>\r\n                )\r\n              })\r\n            ) : (\r\n              <TYPE.light>No pinned wallets</TYPE.light>\r\n            )}\r\n          </>\r\n        )}\r\n      </AutoColumn>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default withRouter(AccountSearch)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\nimport { TYPE } from '../../Theme'\r\nimport { useSavedTokens, useSavedPairs } from '../../contexts/LocalStorage'\r\nimport { Hover } from '..'\r\nimport TokenLogo from '../TokenLogo'\r\nimport AccountSearch from '../AccountSearch'\r\nimport { Bookmark, ChevronRight, X } from 'react-feather'\r\nimport { ButtonFaded } from '../ButtonStyled'\r\nimport FormattedName from '../FormattedName'\r\n\r\nconst RightColumn = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0px;\r\n  height: 100vh;\r\n  width: ${({ open }) => (open ? '160px' : '23px')};\r\n  padding: 1.25rem;\r\n  border-left: ${({ theme, open }) => '1px solid' + theme.bg4};\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  z-index: 9999;\r\n  overflow: auto;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst SavedButton = styled(RowBetween)`\r\n  padding-bottom: ${({ open }) => open && '20px'};\r\n  border-bottom: ${({ theme, open }) => open && '1px solid' + theme.bg4};\r\n  margin-bottom: ${({ open }) => open && '1.25rem'};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ScrollableDiv = styled(AutoColumn)`\r\n  overflow: auto;\r\n  padding-bottom: 60px;\r\n`\r\n\r\nconst StyledIcon = styled.div`\r\n  color: ${({ theme }) => theme.text2};\r\n`\r\n\r\nfunction PinnedData({ history, open, setSavedOpen }) {\r\n  const [savedPairs, , removePair] = useSavedPairs()\r\n  const [savedTokens, , removeToken] = useSavedTokens()\r\n\r\n  return !open ? (\r\n    <RightColumn open={open} onClick={() => setSavedOpen(true)}>\r\n      <SavedButton open={open}>\r\n        <StyledIcon>\r\n          <Bookmark size={20} />\r\n        </StyledIcon>\r\n      </SavedButton>\r\n    </RightColumn>\r\n  ) : (\r\n    <RightColumn gap=\"1rem\" open={open}>\r\n      <SavedButton onClick={() => setSavedOpen(false)} open={open}>\r\n        <RowFixed>\r\n          <StyledIcon>\r\n            <Bookmark size={16} />\r\n          </StyledIcon>\r\n          <TYPE.main ml={'4px'}>Saved</TYPE.main>\r\n        </RowFixed>\r\n        <StyledIcon>\r\n          <ChevronRight />\r\n        </StyledIcon>\r\n      </SavedButton>\r\n      <AccountSearch small={true} />\r\n      <AutoColumn gap=\"40px\" style={{ marginTop: '2rem' }}>\r\n        <AutoColumn gap={'12px'}>\r\n          <TYPE.main>Pinned Pairs</TYPE.main>\r\n          {Object.keys(savedPairs).filter((key) => {\r\n            return !!savedPairs[key]\r\n          }).length > 0 ? (\r\n            Object.keys(savedPairs)\r\n              .filter((address) => {\r\n                return !!savedPairs[address]\r\n              })\r\n              .map((address) => {\r\n                const pair = savedPairs[address]\r\n                return (\r\n                  <RowBetween key={pair.address}>\r\n                    <ButtonFaded onClick={() => history.push('/pair/' + address)}>\r\n                      <RowFixed>\r\n                        <TYPE.header>\r\n                          <FormattedName\r\n                            text={pair.token0Symbol + '/' + pair.token1Symbol}\r\n                            maxCharacters={12}\r\n                            fontSize={'12px'}\r\n                          />\r\n                        </TYPE.header>\r\n                      </RowFixed>\r\n                    </ButtonFaded>\r\n                    <Hover onClick={() => removePair(pair.address)}>\r\n                      <StyledIcon>\r\n                        <X size={16} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  </RowBetween>\r\n                )\r\n              })\r\n          ) : (\r\n            <TYPE.light>Pinned pairs will appear here.</TYPE.light>\r\n          )}\r\n        </AutoColumn>\r\n        <ScrollableDiv gap={'12px'}>\r\n          <TYPE.main>Pinned Tokens</TYPE.main>\r\n          {Object.keys(savedTokens).filter((key) => {\r\n            return !!savedTokens[key]\r\n          }).length > 0 ? (\r\n            Object.keys(savedTokens)\r\n              .filter((address) => {\r\n                return !!savedTokens[address]\r\n              })\r\n              .map((address) => {\r\n                const token = savedTokens[address]\r\n                return (\r\n                  <RowBetween key={address}>\r\n                    <ButtonFaded onClick={() => history.push('/token/' + address)}>\r\n                      <RowFixed>\r\n                        <TokenLogo address={address} size={'14px'} />\r\n                        <TYPE.header ml={'6px'}>\r\n                          <FormattedName text={token.symbol} maxCharacters={12} fontSize={'12px'} />\r\n                        </TYPE.header>\r\n                      </RowFixed>\r\n                    </ButtonFaded>\r\n                    <Hover onClick={() => removeToken(address)}>\r\n                      <StyledIcon>\r\n                        <X size={16} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  </RowBetween>\r\n                )\r\n              })\r\n          ) : (\r\n            <TYPE.light>Pinned tokens will appear here.</TYPE.light>\r\n          )}\r\n        </ScrollableDiv>\r\n      </AutoColumn>\r\n    </RightColumn>\r\n  )\r\n}\r\n\r\nexport default withRouter(PinnedData)\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nimport Logo from '../../assets/logo.svg'\r\n\r\nconst TitleWrapper = styled.div`\r\n  text-decoration: none;\r\n  width: 100%;\r\n  display: flex;\r\n  flex: 0 0 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10;\r\n  \r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport default function Title() {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <TitleWrapper onClick={() => history.push('/')}>\r\n      <a id=\"link\" onClick={() => history.push('/')}>\r\n        <img width=\"100%\" src={Logo} alt=\"Varen Finance\" />\r\n      </a>\r\n    </TitleWrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoColumn } from '../Column'\r\nimport Title from '../Title'\r\nimport { BasicLink } from '../Link'\r\nimport { useMedia } from 'react-use'\r\nimport { transparentize } from 'polished'\r\nimport { TYPE } from '../../Theme'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { TrendingUp, List, PieChart, Disc } from 'react-feather'\r\nimport Link from '../Link'\r\nimport { useSessionStart } from '../../contexts/Application'\r\n\r\nconst Wrapper = styled.div`\r\n  height: ${({ isMobile }) => (isMobile ? 'initial' : '100vh')};\r\n  background-color: ${({ theme }) => transparentize(0.4, theme.bg1)};\r\n  color: ${({ theme }) => theme.text1};\r\n  padding: 0.5rem 0.5rem 0.5rem 0.75rem;\r\n  position: sticky;\r\n  top: 0px;\r\n  z-index: 9999;\r\n  box-sizing: border-box;\r\n  background: #000119;\r\n  color: ${({ theme }) => theme.bg2};\r\n  border-right: ${({ theme }) => '1px solid' + theme.bg4};\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr;\r\n    position: relative;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    padding: 1rem;\r\n  }\r\n`\r\n\r\nconst Option = styled.div`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  opacity: ${({ activeText }) => (activeText ? 1 : 0.6)};\r\n  color: ${({ theme }) => theme.white};\r\n  display: flex;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst DesktopWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100vh;\r\n`\r\n\r\nconst MobileWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst HeaderText = styled.div`\r\n  margin-right: 0.75rem;\r\n  font-size: 0.825rem;\r\n  font-weight: 500;\r\n  display: inline-box;\r\n  display: -webkit-inline-box;\r\n  opacity: 0.8;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n  a {\r\n    color: ${({ theme }) => theme.white};\r\n  }\r\n`\r\n\r\nconst Polling = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  left: 0;\r\n  bottom: 0;\r\n  padding: 1rem;\r\n  color: white;\r\n  opacity: 0.4;\r\n  transition: opacity 0.25s ease;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`\r\nconst PollingDot = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  min-height: 8px;\r\n  min-width: 8px;\r\n  margin-right: 0.5rem;\r\n  margin-top: 3px;\r\n  border-radius: 50%;\r\n  background-color: ${({ theme }) => theme.green1};\r\n`\r\n\r\nfunction SideNav({ history }) {\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n\r\n  const below1180 = useMedia('(max-width: 1180px)')\r\n\r\n  const seconds = useSessionStart()\r\n\r\n  return (\r\n    <Wrapper isMobile={below1080}>\r\n      {!below1080 ? (\r\n        <DesktopWrapper>\r\n          <AutoColumn gap=\"1rem\" style={{ marginTop: '1rem' }}>\r\n            <Title />\r\n            {!below1080 && (\r\n              <AutoColumn gap=\"1.25rem\" style={{ marginTop: '1rem' }}>\r\n                <BasicLink to=\"/home\">\r\n                  <Option activeText={history.location.pathname === '/home' ?? undefined}>\r\n                    <TrendingUp size={20} style={{ marginRight: '.75rem' }} />\r\n                    Overview\r\n                  </Option>\r\n                </BasicLink>\r\n                <BasicLink to=\"/tokens\">\r\n                  <Option\r\n                    activeText={\r\n                      (history.location.pathname.split('/')[1] === 'tokens' ||\r\n                        history.location.pathname.split('/')[1] === 'token') ??\r\n                      undefined\r\n                    }\r\n                  >\r\n                    <Disc size={20} style={{ marginRight: '.75rem' }} />\r\n                    Tokens\r\n                  </Option>\r\n                </BasicLink>\r\n                <BasicLink to=\"/pairs\">\r\n                  <Option\r\n                    activeText={\r\n                      (history.location.pathname.split('/')[1] === 'pairs' ||\r\n                        history.location.pathname.split('/')[1] === 'pair') ??\r\n                      undefined\r\n                    }\r\n                  >\r\n                    <PieChart size={20} style={{ marginRight: '.75rem' }} />\r\n                    Pairs\r\n                  </Option>\r\n                </BasicLink>\r\n\r\n                <BasicLink to=\"/accounts\">\r\n                  <Option\r\n                    activeText={\r\n                      (history.location.pathname.split('/')[1] === 'accounts' ||\r\n                        history.location.pathname.split('/')[1] === 'account') ??\r\n                      undefined\r\n                    }\r\n                  >\r\n                    <List size={20} style={{ marginRight: '.75rem' }} />\r\n                    Accounts\r\n                  </Option>\r\n                </BasicLink>\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n          <AutoColumn gap=\"0.5rem\" style={{ marginLeft: '.75rem', marginBottom: '4rem' }}>\r\n            <HeaderText>\r\n              <Link href=\"https://varen.finance\" target=\"_blank\">\r\n                Website\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://varen.exchange\" target=\"_blank\">\r\n                Exchange\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://blog.varen.finance\" target=\"_blank\">\r\n                Blog\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://discord.varen.finance\" target=\"_blank\">\r\n                Discord\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://twitter.varen.finance\" target=\"_blank\">\r\n                Twitter\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://telegram.varen.finance\" target=\"_blank\">\r\n                Telegram\r\n              </Link>\r\n            </HeaderText>\r\n            <HeaderText>\r\n              <Link href=\"https://github.varen.finance\" target=\"_blank\">\r\n                Github\r\n              </Link>\r\n            </HeaderText>\r\n          </AutoColumn>\r\n          {!below1180 && (\r\n            <Polling style={{ marginLeft: '.5rem' }}>\r\n              <PollingDot />\r\n              <a href=\"/\" style={{ color: 'white' }}>\r\n                <TYPE.small color={'white'}>\r\n                  Updated {!!seconds ? seconds + 's' : '-'} ago <br />\r\n                </TYPE.small>\r\n              </a>\r\n            </Polling>\r\n          )}\r\n        </DesktopWrapper>\r\n      ) : (\r\n        <MobileWrapper>\r\n          <Title />\r\n          <BasicLink to=\"/accounts\">\r\n            <Option\r\n              activeText={\r\n                (history.location.pathname.split('/')[1] === 'accounts' ||\r\n                  history.location.pathname.split('/')[1] === 'account') ??\r\n                undefined\r\n              }\r\n            >\r\n              <List size={20} style={{ marginRight: '.75rem' }} />\r\n              Accounts\r\n            </Option>\r\n          </BasicLink>\r\n        </MobileWrapper>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(SideNav)\r\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '..'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum } from '../../utils'\nimport { TYPE } from '../../Theme'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { RowFixed } from '../Row'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 10px 1.5fr 1fr 1fr;\n  grid-template-areas: 'number name pair value';\n  padding: 0 4px;\n\n  > * {\n    justify-content: flex-end;\n  }\n\n  @media screen and (max-width: 1080px) {\n    grid-template-columns: 10px 1.5fr 1fr 1fr;\n    grid-template-areas: 'number name pair value';\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas: 'name pair value';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nfunction LPList({ lps, disbaleLinks, maxItems = 10 }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below800 = useMedia('(max-width: 800px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [lps])\n\n  useEffect(() => {\n    if (lps) {\n      let extraPages = 1\n      if (Object.keys(lps).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(lps).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, lps])\n\n  const ListItem = ({ lp, index }) => {\n    return (\n      <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\n        {!below600 && (\n          <DataText area=\"number\" fontWeight=\"500\">\n            {index}\n          </DataText>\n        )}\n        <DataText area=\"name\" fontWeight=\"500\" justifyContent=\"flex-start\">\n          <CustomLink style={{ marginLeft: below600 ? 0 : '1rem', whiteSpace: 'nowrap' }} to={'/account/' + lp.user.id}>\n            {below800 ? lp.user.id.slice(0, 4) + '...' + lp.user.id.slice(38, 42) : lp.user.id}\n          </CustomLink>\n        </DataText>\n\n        {/* {!below1080 && (\n          <DataText area=\"type\" justifyContent=\"flex-end\">\n            {lp.type}\n          </DataText>\n        )} */}\n\n        <DataText>\n          <CustomLink area=\"pair\" to={'/pair/' + lp.pairAddress}>\n            <RowFixed>\n              {!below600 && <DoubleTokenLogo a0={lp.token0} a1={lp.token1} size={16} margin={true} />}\n              {lp.pairName}\n            </RowFixed>\n          </CustomLink>\n        </DataText>\n        <DataText area=\"value\">{formattedNum(lp.usd, true)}</DataText>\n      </DashGrid>\n    )\n  }\n\n  const lpList =\n    lps &&\n    lps.slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE).map((lp, index) => {\n      return (\n        <div key={index}>\n          <ListItem key={index} index={(page - 1) * 10 + index + 1} lp={lp} />\n          <Divider />\n        </div>\n      )\n    })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} disbaleLinks={disbaleLinks} style={{ height: 'fit-content', padding: ' 0 0 1rem 0' }}>\n        {!below600 && (\n          <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"name\">Account</TYPE.main>\n        </Flex>\n        {/* {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <TYPE.main area=\"type\">Type</TYPE.main>\n          </Flex>\n        )} */}\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"pair\">Pair</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"value\">Value</TYPE.main>\n        </Flex>\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!lpList ? <LocalLoader /> : lpList}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(LPList)\n","import React, { useEffect } from 'react'\r\nimport 'feather-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { TYPE } from '../Theme'\r\nimport { PageWrapper, FullWrapper } from '../components'\r\nimport Panel from '../components/Panel'\r\nimport LPList from '../components/LPList'\r\nimport styled from 'styled-components'\r\nimport AccountSearch from '../components/AccountSearch'\r\nimport { useTopLps } from '../contexts/GlobalData'\r\nimport LocalLoader from '../components/LocalLoader'\r\nimport { RowBetween } from '../components/Row'\r\nimport { useMedia } from 'react-use'\r\nimport Search from '../components/Search'\r\n\r\nconst AccountWrapper = styled.div`\r\n  @media screen and (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nfunction AccountLookup() {\r\n  // scroll to top\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const topLps = useTopLps()\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <FullWrapper>\r\n        <RowBetween>\r\n          <TYPE.largeHeader>Wallet analytics</TYPE.largeHeader>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n        <AccountWrapper>\r\n          <AccountSearch />\r\n        </AccountWrapper>\r\n        <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\r\n          Top Liquidity Positions\r\n        </TYPE.main>\r\n        <Panel>{topLps && topLps.length > 0 ? <LPList lps={topLps} maxItems={200} /> : <LocalLoader />}</Panel>\r\n      </FullWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(AccountLookup)\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ApolloProvider } from 'react-apollo'\r\nimport { client } from './apollo/client'\r\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom'\r\nimport GlobalPage from './pages/GlobalPage'\r\nimport TokenPage from './pages/TokenPage'\r\nimport PairPage from './pages/PairPage'\r\nimport { useGlobalData, useGlobalChartData } from './contexts/GlobalData'\r\nimport { isAddress } from './utils'\r\nimport AccountPage from './pages/AccountPage'\r\nimport AllTokensPage from './pages/AllTokensPage'\r\nimport AllPairsPage from './pages/AllPairsPage'\r\nimport PinnedData from './components/PinnedData'\r\n\r\nimport SideNav from './components/SideNav'\r\nimport AccountLookup from './pages/AccountLookup'\r\nimport { OVERVIEW_TOKEN_BLACKLIST, PAIR_BLACKLIST } from './constants'\r\nimport LocalLoader from './components/LocalLoader'\r\nimport { useLatestBlocks } from './contexts/Application'\r\nimport {Background, ThemedBackground} from \"./Theme\";\r\nimport SquareLogo from \"./assets/logo-sqare.svg\"\r\n\r\nconst AppWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  z-index: 99;\r\n`\r\nconst ContentWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${({ open }) => (open ? '180px 1fr 180px' : '180px 1fr 64px')};\r\n  position: relative;\r\n  z-index: 99;\r\n\r\n  @media screen and (max-width: 1400px) {\r\n    grid-template-columns: 180px 1fr;\r\n  }\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    grid-template-columns: 1fr;\r\n    max-width: 100vw;\r\n    overflow: hidden;\r\n    grid-gap: 0;\r\n  }\r\n`\r\n\r\nconst Right = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0rem;\r\n  z-index: 99;\r\n  width: ${({ open }) => (open ? '180px' : '64px')};\r\n  height: ${({ open }) => (open ? 'fit-content' : '64px')};\r\n  overflow: auto;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  @media screen and (max-width: 1400px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Center = styled.div`\r\n  height: 100%;\r\n  z-index: 99;\r\n  transition: width 0.25s ease;\r\n  background-color: ${({ theme }) => theme.onlyLight};\r\n`\r\n\r\nconst WarningWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst WarningBanner = styled.div`\r\n  background-color: #165bbd;\r\n  padding: 1.5rem;\r\n  color: white;\r\n  width: 100%;\r\n  text-align: center;\r\n  font-weight: 500;\r\n`\r\n\r\nconst FixedWrapper = styled.div`\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\n/**\r\n * Wrap the component with the header and sidebar pinned tab\r\n */\r\nconst LayoutWrapper = ({ children, savedOpen, setSavedOpen }) => {\r\n  return (\r\n    <>\r\n      <ContentWrapper open={savedOpen}>\r\n        <SideNav />\r\n        <Center id=\"center\">{children}</Center>\r\n        <Right open={savedOpen}>\r\n          <PinnedData open={savedOpen} setSavedOpen={setSavedOpen} />\r\n        </Right>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst BLOCK_DIFFERENCE_THRESHOLD = 30\r\n\r\nfunction App() {\r\n  const [savedOpen, setSavedOpen] = useState(false)\r\n\r\n  const globalData = useGlobalData()\r\n  const globalChartData = useGlobalChartData()\r\n  const [latestBlock, headBlock] = useLatestBlocks()\r\n\r\n  // show warning\r\n  const showWarning = headBlock && latestBlock ? headBlock - latestBlock > BLOCK_DIFFERENCE_THRESHOLD : false\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <AppWrapper>\r\n        {showWarning && (\r\n          <WarningWrapper>\r\n            <WarningBanner>\r\n              {`Warning: The data on this site has only synced to Ethereum block ${latestBlock} (out of ${headBlock}). Please check back soon.`}\r\n            </WarningBanner>\r\n          </WarningWrapper>\r\n        )}\r\n        {globalData &&\r\n        Object.keys(globalData).length > 0 &&\r\n        globalChartData &&\r\n        Object.keys(globalChartData).length > 0 ? (\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route\r\n                exacts\r\n                strict\r\n                path=\"/token/:tokenAddress\"\r\n                render={({ match }) => {\r\n                  if (OVERVIEW_TOKEN_BLACKLIST.includes(match.params.tokenAddress.toLowerCase())) {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                  if (isAddress(match.params.tokenAddress.toLowerCase())) {\r\n                    return (\r\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                        <TokenPage address={match.params.tokenAddress.toLowerCase()} />\r\n                      </LayoutWrapper>\r\n                    )\r\n                  } else {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                }}\r\n              />\r\n              <Route\r\n                exacts\r\n                strict\r\n                path=\"/pair/:pairAddress\"\r\n                render={({ match }) => {\r\n                  if (PAIR_BLACKLIST.includes(match.params.pairAddress.toLowerCase())) {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                  if (isAddress(match.params.pairAddress.toLowerCase())) {\r\n                    return (\r\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                        <PairPage pairAddress={match.params.pairAddress.toLowerCase()} />\r\n                      </LayoutWrapper>\r\n                    )\r\n                  } else {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                }}\r\n              />\r\n              <Route\r\n                exacts\r\n                strict\r\n                path=\"/account/:accountAddress\"\r\n                render={({ match }) => {\r\n                  if (isAddress(match.params.accountAddress.toLowerCase())) {\r\n                    return (\r\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                        <AccountPage account={match.params.accountAddress.toLowerCase()} />\r\n                      </LayoutWrapper>\r\n                    )\r\n                  } else {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                }}\r\n              />\r\n\r\n              <Route path=\"/home\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <GlobalPage />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Route path=\"/tokens\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <AllTokensPage />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Route path=\"/pairs\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <AllPairsPage />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Route path=\"/accounts\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <AccountLookup />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </BrowserRouter>\r\n        ) : (\r\n          <FixedWrapper>\r\n            <Background style={{backgroundImage: `url(\"${SquareLogo}\")`}} />\r\n            <ThemedBackground/>\r\n            <LocalLoader />\r\n          </FixedWrapper>\r\n        )}\r\n      </AppWrapper>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport ReactGA from 'react-ga'\r\nimport { isMobile } from 'react-device-detect'\r\nimport ThemeProvider, { GlobalStyle } from './Theme'\r\nimport LocalStorageContextProvider, { Updater as LocalStorageContextUpdater } from './contexts/LocalStorage'\r\nimport TokenDataContextProvider, { Updater as TokenDataContextUpdater } from './contexts/TokenData'\r\nimport GlobalDataContextProvider from './contexts/GlobalData'\r\nimport PairDataContextProvider, { Updater as PairDataContextUpdater } from './contexts/PairData'\r\nimport ApplicationContextProvider from './contexts/Application'\r\nimport UserContextProvider from './contexts/User'\r\nimport App from './App'\r\n\r\n// initialize GA\r\nconst GOOGLE_ANALYTICS_ID = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\r\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\r\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID)\r\n  ReactGA.set({\r\n    customBrowserType: !isMobile\r\n      ? 'desktop'\r\n      : 'web3' in window || 'ethereum' in window\r\n      ? 'mobileWeb3'\r\n      : 'mobileRegular',\r\n  })\r\n} else {\r\n  ReactGA.initialize('test', { testMode: true, debug: true })\r\n}\r\n\r\nfunction ContextProviders({ children }) {\r\n  return (\r\n    <LocalStorageContextProvider>\r\n      <ApplicationContextProvider>\r\n        <TokenDataContextProvider>\r\n          <GlobalDataContextProvider>\r\n            <PairDataContextProvider>\r\n              <UserContextProvider>{children}</UserContextProvider>\r\n            </PairDataContextProvider>\r\n          </GlobalDataContextProvider>\r\n        </TokenDataContextProvider>\r\n      </ApplicationContextProvider>\r\n    </LocalStorageContextProvider>\r\n  )\r\n}\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      <LocalStorageContextUpdater />\r\n      <PairDataContextUpdater />\r\n      <TokenDataContextUpdater />\r\n    </>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <ContextProviders>\r\n    <Updaters />\r\n    <ThemeProvider>\r\n      <>\r\n        <GlobalStyle />\r\n        <App />\r\n      </>\r\n    </ThemeProvider>\r\n  </ContextProviders>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}